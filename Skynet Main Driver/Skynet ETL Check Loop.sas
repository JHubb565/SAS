/*GET ETL_CHECK TABLE AND ASSIGN VALUES BASED ON IF THE DATA IS AVAILABLE*/

%MACRO SKYNET_ETL_CHECK();

	/*DROP TABLE FOR NEXT RUN*/
	PROC SQL;
		DROP TABLE INSTANCE_ETL_CHECK;
		DROP TABLE ETL_CHECK;
		DROP TABLE ETL_CHECK_COMBINED;
		DROP TABLE ETL_CHECK_FUSE;
	QUIT;

	%GET_ETL_TABLE

	PROC SQL;
		CREATE TABLE INSTANCE_ETL_CHECK AS
		SELECT (CASE WHEN INSTANCE = 'QFUND3_TITLE' THEN 'QFUND3'
					 WHEN INSTANCE = 'QFUND3_TETL_TTOC' THEN 'QFUND3' ELSE INSTANCE END) AS INSTANCE
			  ,MIN(LOADED)	AS LOADED
			  ,MAX(START_TIME)	AS START_TIME	FORMAT = DATETIME20.
			  ,MAX(END_TIME)	AS END_TIME FORMAT = DATETIME20.
		FROM 
		(
			SELECT A.INSTANCE
				  ,(CASE WHEN B.LOADED IS NULL THEN 0 ELSE B.LOADED END)	AS LOADED
				  ,(CASE WHEN B.START_TIME IS NULL THEN '01JAN1960:00:00:00'DT ELSE B.START_TIME END) AS START_TIME
				  ,(CASE WHEN B.END_TIME IS NULL THEN '01JAN1960:00:00:00'DT ELSE B.END_TIME END)	AS END_TIME
			FROM TMP_TBLS.INSTANCE_ETL_CHECK_USE A
			LEFT JOIN ETL_CHECK_COMBINED B
				ON (A.INSTANCE = B.INSTANCE)
			WHERE A.INSTANCE IN ('EADV' 'NEXTGEN' 'QFUND1' 'QFUND2' 'QFUND1_QFUND2' 'QFUND3_TITLE' 'QFUND3_TETL_TTOC' 'QFUND4' 'QFUND5' 'ONLINE' 'FUSE')
		)
		WHERE CALCULATED INSTANCE IN ('EADV' 'NEXTGEN' 'QFUND1' 'QFUND2' 'QFUND1_QFUND2' 'QFUND3' 'QFUND4' 'QFUND5' 'ONLINE' 'FUSE')
		GROUP BY CALCULATED INSTANCE
	;
	QUIT;	

%MEND;