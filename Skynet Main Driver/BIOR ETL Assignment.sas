				PROC SQL;
					DROP TABLE TMP_TBLS.SKYNET_INSTANCE_CHECK
				;
				QUIT;
 
				DATA _NULL_;
					/*EADV*/
					IF &EADV. = 1 THEN CALL SYMPUTX("EADV_STATUS","ETL_FINISHED",'G');
					ELSE IF &EADV. ^= 1 THEN CALL SYMPUTX("EADV_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND1_QFUND2*/
					IF &QFUND1_QFUND2. = 1 AND &QFUND1. = 1 AND &QFUND2. = 1 THEN CALL SYMPUTX("QF1_QF2_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND1_QFUND2. ^= 1 OR &QFUND1. ^= 1 OR &QFUND2. ^= 1 THEN CALL SYMPUTX("QF1_QF2_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND3*/
					IF &QFUND3. = 1 THEN CALL SYMPUTX("QFUND3_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND3. ^= 1 THEN CALL SYMPUTX("QFUND3_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND4*/
					IF &QFUND4. = 1 THEN CALL SYMPUTX("QFUND4_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND4. ^= 1 THEN CALL SYMPUTX("QFUND4_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND5*/
					IF &QFUND5. = 1 THEN CALL SYMPUTX("QFUND5_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND5. ^= 1 THEN CALL SYMPUTX("QFUND5_STATUS","ETL_NOT_FINISHED",'G');
					/*NG*/
					IF &NG. = 1 THEN CALL SYMPUTX("NG_STATUS","ETL_FINISHED",'G');
					ELSE IF &NG. ^= 1 THEN CALL SYMPUTX("NG_STATUS","ETL_NOT_FINISHED",'G');
					/*ONLINE*/
					IF &OL. = 1 THEN CALL SYMPUTX('OL_STATUS',"ETL_FINISHED",'G');
					ELSE IF &OL. ^= 1 THEN CALL SYMPUTX("OL_STATUS","ETL_NOT_FINISHED",'G');
					/*FUSE*/
					IF &FUSE. = 1 THEN CALL SYMPUTX('FUSE_STATUS',"ETL_FINISHED",'G');
					ELSE IF &FUSE. ^= 1 THEN CALL SYMPUTX("FUSE_STATUS","ETL_NOT_FINISHED",'G');
				RUN;

				DATA TMP_TBLS.SKYNET_INSTANCE_CHECK;
					FORMAT INSTANCE $20. STATUS $30. UPDATE_DT DATETIME20.;
					IF _N_ < 1;
				RUN;

				%LET EADV_VALUES 	= %STR(VALUES("EADV","&EADV_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND12_VALUES = %STR(VALUES("QFUND1_QFUND2","&QF1_QF2_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND12_VALUES2 = %STR(VALUES("QFUND1_QFUND2","&QF1_QF2_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND3_VALUES 	= %STR(VALUES("QFUND3","&QFUND3_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND4_VALUES 	= %STR(VALUES("QFUND4","&QFUND4_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND5_VALUES 	= %STR(VALUES("QFUND5","&QFUND5_STATUS",%SYSFUNC(DATETIME())));
				%LET NG_VALUES 		= %STR(VALUES("NG","&NG_STATUS",%SYSFUNC(DATETIME())));
				%LET OL_VALUES 		= %STR(VALUES("OL","&OL_STATUS",%SYSFUNC(DATETIME())));
				%LET FUSE_VALUES    = %STR(VALUES("FUSE","&FUSE_STATUS",%SYSFUNC(DATETIME())));

		/*INSERT VALUES FROM THE SKYNET ETL CHECK INTO "SKYNET_INSTANCE_CHECK" DATAMART*/
				PROC SQL;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&EADV_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND12_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND3_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND4_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND5_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&NG_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&OL_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&FUSE_VALUES.;				
				QUIT;

		/*NOW MERGE TEMPTABLES CHECKER WITH PRODUCTION*/

				PROC SQL;
				CONNECT TO ORACLE (USER=&USER. PW=&PASSWORD. PATH='BIOR');
				EXECUTE(
					MERGE INTO BIOR.SKYNET_INSTANCE_CHECK BIOR
						USING (SELECT * FROM TEMPTABLES.SKYNET_INSTANCE_CHECK) UPSERT
							ON(BIOR.INSTANCE = UPSERT.INSTANCE)
						 WHEN MATCHED THEN UPDATE SET  
							BIOR.STATUS = UPSERT.STATUS
							,BIOR.UPDATE_DT = UPSERT.UPDATE_DT
						)
				BY ORACLE;
				DISCONNECT FROM ORACLE;
				QUIT;