/*-----------------------------------------------------------------

	AUTHOR: JUSTIN HUBBARD

	GOAL: ETL CHECKER (BRAINS BEHIND THE SKYNET REDESIGN)

-------------------------------------------------------------------*/
OPTIONS SYMBOLGEN MPRINT MLOGIC;

%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V3\SKYNET REDESIGN\TOP SECRET PROGRAM.SAS";

LIBNAME ETL ORACLE
	USER = &USER
	PASSWORD = &PASSWORD
	PATH = PEDWPROD1
	SCHEMA = SC_EDW_CONTROLS;

%GLOBAL INSTANCE_LIST;
%LET INSTANCE_LIST = %STR(WHERE INSTANCE IN 
								('EADVANTAGE'
								,'NEXTGEN'
								,'ONLINE'
								,'QFUND1'
								,'QFUND1_QFUND2'
								,'QFUND2'
								,'QFUND3'
								,'QFUND4'
								,'QFUND5'
								,'QFUND3_TITLE'
								,'QFUND3_TETL_TTOC'));

%LET INSTANCE_LIST_FUSE = %STR(WHERE INSTANCE IN 
								('FUSE'));

%GLOBAL DATE9;
%LET DATE9=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE9.);                
%PUT &DATE9; 

%MACRO EMAIL();
	%LET DATE9=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE9.);                
	%PUT &DATE9;

	OPTIONS EMAILSYS=SMTP EMAILHOST=MAIL.ADVANCEAMERICA.NET EMAILPORT=25;
	FILENAME MYMAIL EMAIL; 
	DATA _NULL_;
	   FILE MYMAIL
			TO=('BI_DATA@ADVANCEAMERICA.NET')
			CC=('SHOPKINS@ADVANCEAMERICA.NET')
	     SUBJECT='ALERT! SOMETHING IS WRONG WITH ETL LOADS - CSSSASMETA';
		 PUT "NOT ALL INSTANCES ARE COMPLETE";
	RUN;
%MEND;


%MACRO GET_ETL_TABLE();

PROC SQL;
	CONNECT TO ORACLE (USER=&USER. PASSWORD=&PASSWORD. PATH='PEDWPROD1');
	CREATE TABLE ETL_CHECK AS
	SELECT *
	FROM CONNECTION TO ORACLE
	(
	SELECT (CASE WHEN INSTANCE = 'QFUND3_TETL_TTOC' THEN 'QFUND3_TETL_TTOC'
				  WHEN INSTANCE = 'QFUND3_TITLE' THEN 'QFUND3_TITLE' ELSE INSTANCE END)	AS INSTANCE
			,MIN(LOADED)		AS LOADED
			,MAX(START_TIME)	AS START_TIME
			,MAX(END_TIME)		AS END_TIME
	 FROM
	 (
		SELECT (CASE WHEN INSTANCE = 'EADVANTAGE' THEN 'EADV' ELSE INSTANCE END)	   AS INSTANCE,
		       (CASE WHEN INSTANCE IN ('EADVANTAGE','EADV') THEN 1 ELSE MIN(STATUS_BOOLEAN) END) AS LOADED,
		       MAX(START_TIME) AS START_TIME,
			   MAX(END_TIME) AS END_TIME
		FROM (
				SELECT CASE WHEN FC_PROCESS_NAME_CD = 'QFUND3_TITLE' THEN FC_PROCESS_NAME_CD 
                            WHEN FC_PROCESS_NAME_CD = 'QFUND3_TETL_TTOC' THEN FC_PROCESS_NAME_CD
                                ELSE FC_SOURCE_SYSTEM_CD END AS INSTANCE,
			       FC_PROCESS_STATUS_CD AS STATUS,
				   /*SET PULL CONDITIONS*/
				   CASE WHEN FC_PROCESS_STATUS_CD = 'COMPLETE_SUCCESS' OR FC_PROCESS_STATUS_CD = 'COMPLETE_EXCEPTIONS' THEN 1 
						ELSE 0 
				   END AS STATUS_BOOLEAN,
				   FD_BATCH_DTTM_START AS START_TIME,
				   FD_BATCH_DTTM_END AS END_TIME,
				   FD_BUSINESS_DT AS BUSINESSDT
			FROM SC_EDW_CONTROLS.TA_BATCH_PROCESS_MASTER
		WHERE FD_BUSINESS_DT >= TRUNC(CURRENT_DATE)-1
		)
		&INSTANCE_LIST.
		GROUP BY INSTANCE
		ORDER BY INSTANCE
	)
	GROUP BY INSTANCE
	)
	;
	DISCONNECT FROM ORACLE;
QUIT;



PROC SQL;
	CONNECT TO POSTGRES AS MYCON (server=cltedbprod1 port=5444 user=&EDBUSER. password=&EDBPASSWORD. db='coredb');
	CREATE TABLE ETL_CHECK_FUSE AS
	SELECT *
	FROM CONNECTION TO MYCON
	(
	SELECT INSTANCE
		  ,MIN(LOADED)			AS LOADED
		  ,MAX(START_TIME)		AS START_TIME
		  ,MAX(END_TIME)		AS END_TIME
	FROM 
	(
		SELECT (CASE WHEN PROCESS_NAME_CD = 'LEDGER_GENERAL' THEN 'FUSE'
					 WHEN PROCESS_NAME_CD = 'SFR_FROM_QFX'	 THEN 'FUSE'
				     WHEN PROCESS_NAME_CD = 'LEDGER_DETAIL'  THEN 'FUSE' ELSE PROCESS_NAME_CD END)	AS INSTANCE
			  ,CASE WHEN PROCESS_STATUS_CD = 'COMPLETE_SUCCESS' OR PROCESS_STATUS_CD = 'COMPLETE_EXCEPTIONS' THEN 1 
							ELSE 0 
					   END AS LOADED
			  ,BATCH_DTTM_START 		AS START_TIME
		      ,BATCH_DTTM_END 			AS END_TIME
			  ,BUSINESS_DT 				AS BUSINESSDT
		FROM SC_EDW_CONTROL.BATCH_PROCESS_MASTER
		WHERE BUSINESS_DT >= TRUNC(CURRENT_DATE)-1
	)
	&INSTANCE_LIST_FUSE.
	GROUP BY INSTANCE
	ORDER BY INSTANCE
	)
	;
	DISCONNECT FROM MYCON;
QUIT;

PROC SQL;
	CREATE TABLE ETL_CHECK_COMBINED AS
	SELECT *
	FROM ETL_CHECK
	UNION ALL CORR
	SELECT *
	FROM ETL_CHECK_FUSE
;
QUIT;


%MEND;







