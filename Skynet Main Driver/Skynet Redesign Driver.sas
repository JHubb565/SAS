/*-------------------------------------------------------------------------------------------

	TITLE: SKYNET RE-DESIGN
	AUTHOR: JUSTIN HUBBARD
	GOAL: TO CONDITIONALLY KICK OFF INSTANCES AND DATA UPLOADS IN ORDER TO HAVE A BETTER COMMUNICATION BETWEEN ETL, BI_DATA, AND BI_REPORTING TEAMS

	PROCEDURE:
		
		1) CHECK ETL SC_EDW_CONTROLS.TA_BATCH_PROCESS_MASTER TO SEE IF DATA IS AVAILABLE AND THE TIME WHEN IT IS COMPLETED
		2) BASED ON THE TIME COMPLETE, KICK OFF THE RESPECTIVE SOURCE DATA PULLS FOR SKYNET
		3) LOOP THROUGH 1) AND 2) UNTIL ALL DATA LOADS ARE KICKED OFF
		4) WHILE 1), 2), 3) ARE HAPPENING BIOR.DATAMART_STATUS IS BEING UPDATED WITH ALL ACTIVITY OF WHERE THE DATAMART IS 
		   IN ITS JOURNEY TO BEING UPDATED FOR THE DAY
		5) ONCE ALL DATA HAS WENT THROUGH STEPS 1), 2), 3), 4) THEN DEPENDENCY PROGRAMS START
				- DEPENDENCY PROGRAMS WILL KICK OFF PROGRAMS THAT DEPEND ON THE SOURCE SKYNET PULLS BASED ON WHAT IS COMPLETED
				- EACH DEPENDENCY PROGRAM RUNS SIMULTANEOUSLY
		6) DATA IS UPDATED "YAY!"

	PROGRAM ASSUMPTIONS:
		1) PROGRAM WILL LOOP FROM MIDNIGHT EASTERN TIME UNTIL 9PM OR UNTIL ALL DATA HAS BEEN KICKED OFF
		2) BIOR.DATAMART_STATUS IS THE BRAINS OF THE ENTIRE PROGRAM. IF THIS TABLE IS DAMAGED/DROPPED OR LOST THEN PROGRAM WILL ERROR

---------------------------------------------------------------------------------------------------------------------------------------------------*/

/*ONLY INPUT NEEDED*/


/*ADD STORE PROCEDURE INPUTS HERE (NEED TO ADD)*/

/*END OF INPUTS*/
OPTIONS SYMBOLGEN MPRINT MLOGIC NOXWAIT;
%INCLUDE "\\CSSSASAPP\CADA\SAS SOURCE CODE\PRODUCTION\SERVICE ACCOUNTS\SVC_SASUSER.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\SKYNET REDESIGN\SKYNET_ERROR_INPUTS.SAS";

LIBNAME BIOR ORACLE
	USER=&USER.
	PASSWORD=&PASSWORD.
	PATH=BIOR
	SCHEMA=BIOR;

LIBNAME TMP_TBLS ORACLE 
	USER=&USER. 
	PASSWORD=&PASSWORD.
	PATH=BIOR
	SCHEMA=TEMPTABLES;

/*PROGRAM LOCATIONS*/
%LET WHEREPRGRMSAT_REDESIGN = E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN;

/*ETL CHECK MACRO LOOPS*/
	%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\ETL_CHECK_REDESIGN.SAS";
	%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\SKYNET ETL CHECK LOOP.SAS";

%LET HOUR = 21;
%GLOBAL DATE;
/*DATE*/
%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;


/*ASSIGN FILE PATHS*/
DATA _NULL_;
	/*CUSTOMER*/
	CALL SYMPUTX('CUST_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('CUST_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\CUSTOMER",'G');
	/*DEAL*/
	CALL SYMPUTX('DEAL_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('DEAL_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\DEAL",'G');
	/*TRAN*/
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
	/*DAILY*/
	CALL SYMPUTX('DAILY_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('DAILY_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\DAILY",'G');
	/*SKYNET RESIGN LOGS*/
	CALL SYMPUTX('SKYNETREDESIGN',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN",'G');
	CALL SYMPUTX('SKYNETREDESIGN_LOGS',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
%RUNQUIT(&job,&sub1);

/* CREATE TIMESTAMP */
PROC FORMAT;
	PICTURE WHATDAYISIT OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
	PICTURE WHATTIMEISIT OTHER=%0H.%0M.%0S (DATATYPE=TIME);
%RUNQUIT(&job,&sub1);

DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
%RUNQUIT(&job,&sub1);

%PUT &TIMESTAMP;

/*TRUNCATE STAGING TABLES AND RESET DATAMART STATUSES*/
	%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\RESET STAGING AND DATAMART STATUSES.SAS";
	

/*START EMAIL MONITORING*/
	%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\EMAIL INSTANCE STATUS DRIVER.SAS";


%MACRO SKYNET_DATA_CHECK();

	%LOCAL INSTANCE;
	%LET ELAPSED_TIME = 0;
	%LET START_TIME = %SYSFUNC(DATETIME(),DATETIME20.);

	%DO %UNTIL (%EVAL(&END_VARIABLE. >= 1));
		
		/*SET END_VARIABLE FOR THE FIRST LOOP*/
		%LET END_VARIABLE = 0;

		/*CHECK REFRESH SKYNET ETL_CHECK_TABLE*/
			%SKYNET_ETL_CHECK

			PROC SQL;
				SELECT SUM(LOADED) INTO: ETL_SUM
				FROM INSTANCE_ETL_CHECK
			;
			QUIT;

			%PUT &ETL_SUM;

			/*ASSIGN VALUES TO INSTANCE VARIABLES*/
				%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\ASSIGN INSTANCE VALUES.SAS";


				%PUT ASSIGNED VALUES IN DRIVER;

				%PUT NEXTGEN LOAD STATUS = &NG;
				%PUT ONLINE LOAD STATUS = &OL;
				%PUT QFUND1_QFUND2 LOAD STATUS = &QFUND1_QFUND2;
				%PUT QFUND1 LOAD STATUS = &QFUND1;
				%PUT QFUND2 LOAD STATUS = &QFUND2;
				%PUT QFUND3 LOAD STATUS = &QFUND3;
				%PUT QFUND4 LOAD STATUS = &QFUND4;
				%PUT QFUND5 LOAD STATUS = &QFUND5;
				%PUT EADV LOAD STATUS = &EADV;

			/*CHECK ETL_SUM VALUE TO SEE IF WE NEED TO STOP THE LOOP*/ 
				%IF %EVAL(&ETL_SUM. >= 9) %THEN 
					%DO;
						DATA APPEND_END_VARIABLE;
							INSTANCE = 'END';
							LOADED = .;
							START_TIME = DATETIME();
							END_TIME = DATETIME();
							FORMAT START_TIME END_TIME DATETIME20.;
						RUN;

						PROC APPEND BASE=INSTANCE_ETL_CHECK DATA=APPEND_END_VARIABLE FORCE;
						RUN;
					%END;


	/*----------CREATE/UPDATE SKYNET_INSTANCE_CHECK TABLE--------------------*/

		%IF %SYSFUNC(EXIST(BIOR.SKYNET_INSTANCE_CHECK)) %THEN
			%DO;

				PROC SQL;
					DROP TABLE TMP_TBLS.SKYNET_INSTANCE_CHECK
				;
				QUIT;

				DATA _NULL_;
					/*EADV*/
					IF &EADV. = 1 THEN CALL SYMPUTX("EADV_STATUS","ETL_FINISHED",'G');
					ELSE IF &EADV. ^= 1 THEN CALL SYMPUTX("EADV_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND1_QFUND2*/
					IF &QFUND1_QFUND2. = 1 AND &QFUND1. = 1 AND &QFUND2. = 1 THEN CALL SYMPUTX("QF1_QF2_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND1_QFUND2. ^= 1 OR &QFUND1. ^= 1 OR &QFUND2. ^= 1 THEN CALL SYMPUTX("QF1_QF2_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND3*/
					IF &QFUND3. = 1 THEN CALL SYMPUTX("QFUND3_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND3. ^= 1 THEN CALL SYMPUTX("QFUND3_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND4*/
					IF &QFUND4. = 1 THEN CALL SYMPUTX("QFUND4_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND4. ^= 1 THEN CALL SYMPUTX("QFUND4_STATUS","ETL_NOT_FINISHED",'G');
					/*QFUND5*/
					IF &QFUND5. = 1 THEN CALL SYMPUTX("QFUND5_STATUS","ETL_FINISHED",'G');
					ELSE IF &QFUND5. ^= 1 THEN CALL SYMPUTX("QFUND5_STATUS","ETL_NOT_FINISHED",'G');
					/*NG*/
					IF &NG. = 1 THEN CALL SYMPUTX("NG_STATUS","ETL_FINISHED",'G');
					ELSE IF &NG. ^= 1 THEN CALL SYMPUTX("NG_STATUS","ETL_NOT_FINISHED",'G');
					/*ONLINE*/
					IF &OL. = 1 THEN CALL SYMPUTX('OL_STATUS',"ETL_FINISHED",'G');
				RUN;

				DATA TMP_TBLS.SKYNET_INSTANCE_CHECK;
					FORMAT INSTANCE $20. STATUS $30. UPDATE_DT DATETIME20.;
					IF _N_ < 1;
				RUN;

				%LET EADV_VALUES 	= %STR(VALUES("EADV","&EADV_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND12_VALUES = %STR(VALUES("QFUND1_QFUND2","&QF1_QF2_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND12_VALUES2 = %STR(VALUES("QFUND1_QFUND2","&QF1_QF2_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND3_VALUES 	= %STR(VALUES("QFUND3","&QFUND3_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND4_VALUES 	= %STR(VALUES("QFUND4","&QFUND4_STATUS",%SYSFUNC(DATETIME())));
				%LET QFUND5_VALUES 	= %STR(VALUES("QFUND5","&QFUND5_STATUS",%SYSFUNC(DATETIME())));
				%LET NG_VALUES 		= %STR(VALUES("NG","&NG_STATUS",%SYSFUNC(DATETIME())));
				%LET OL_VALUES 		= %STR(VALUES("OL","&OL_STATUS",%SYSFUNC(DATETIME())));

		/*INSERT VALUES FROM THE SKYNET ETL CHECK INTO "SKYNET_INSTANCE_CHECK" DATAMART*/
				PROC SQL;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&EADV_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND12_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND3_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND4_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&QFUND5_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&NG_VALUES.;
					INSERT INTO TMP_TBLS.SKYNET_INSTANCE_CHECK (INSTANCE,STATUS,UPDATE_DT)
					&OL_VALUES.;
				QUIT;

		/*NOW MERGE TEMPTABLES CHECKER WITH PRODUCTION*/

				PROC SQL;
				CONNECT TO ORACLE (USER=&USER. PW=&PASSWORD. PATH='BIOR');
				EXECUTE(
					MERGE INTO BIOR.SKYNET_INSTANCE_CHECK BIOR
						USING (SELECT * FROM TEMPTABLES.SKYNET_INSTANCE_CHECK) UPSERT
							ON(BIOR.INSTANCE = UPSERT.INSTANCE)
						 WHEN MATCHED THEN UPDATE SET  
							BIOR.STATUS = UPSERT.STATUS
							,BIOR.UPDATE_DT = UPSERT.UPDATE_DT
						)
				BY ORACLE;
				DISCONNECT FROM ORACLE;
				QUIT;

		/*LOOK AT DATAMART STATUSES FOR CUSTOMER / DEAL / TRAN / DAILY*/

				/*CUSTOMER*/
				%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\CHECK DATAMART STATUS CUSTOMER.SAS";

				/*DEAL*/
				%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\CHECK DATAMART STATUS DEAL.SAS";

				/*DAILY*/
				%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\CHECK DATAMART STATUS DAILY.SAS";

				/*TRAN*/
				%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\CHECK DATAMART STATUS TRAN.SAS";

				/*TRANSPOSE*/
				%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\CHECK DATAMART STATUS TRANSPOSE.SAS";


/*------------------------------------------------END OF CHECKING STATUSES NEED TO WAIT FOR THESE NOW-------------------------------------*/

				/*KICK OFF 
				,CUSTOMER DATAMART EADV
				,DEAL DATAMART EADV
				,TRAN DATAMART EADV
				,DAILY DATAMART EADV*/
				%IF &EADV. = 1 %THEN 
					%DO;
						/*KICK OFF EADV DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\EADV DRIVER DECISION.SAS";
							%EADV_DRIVER_DECISION
					%END;

				/*KICK OFF (KIND OF TRICKY HERE, ONLY KICKING OFF QFUND1 STUFF THAT DOESNT RELY ON QF2)
				,CUSTOMER DATAMART QF1
				,DEAL DATAMART QF1
				,TRAN DATAMART QF1
				,DAILY DATAMART QF1*/
				%IF &QFUND1. = 1 AND &QFUND1_QFUND2. = 1 %THEN 
					%DO;
						/*KICK OFF QFUND1 DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\QFUND1 DRIVER DECISION.SAS";
							%QFUND1_DRIVER_DECISION	
					%END;


				/*KICK OFF 
				,CUSTOMER DATAMART QF1/QF2
				,DEAL DATAMART QF1/QF2
				,TRAN DATAMART QF1/QF2
				,DAILY DATAMART QF1/QF2*/
				%IF &QFUND1. = 1 AND &QFUND2. = 1 AND &QFUND1_QFUND2. = 1 %THEN 
					%DO;
						/*KICK OFF QFUND2 DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\QFUND1_QFUND2 DRIVER DECISION.SAS";
							%QF1_QF2_DRIVER_DECISION
					%END;

				/*KICK OFF 
				,CUSTOMER DATAMART QF3
				,DEAL DATAMART QF3
				,TRAN DATAMART QF3
				,DAILY DATAMART QF3*/
				%IF &QFUND3. = 1 %THEN 
					%DO;
						/*KICK OFF QFUND3 DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\QFUND3 DRIVER DECISION.SAS";
							%QFUND3_DRIVER_DECISION						
					%END;

	
				/*KICK OFF 
				,CUSTOMER DATAMART QF4
				,DEAL DATAMART QF4
				,TRAN DATAMART QF4
				,DAILY DATAMART QF4*/
				%IF &QFUND4. = 1 %THEN 
					%DO;
						/*KICK OFF QFUND4 DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\QFUND4 DRIVER DECISION.SAS";
							%QFUND4_DRIVER_DECISION												
					%END;
	

				/*KICK OFF 
				,CUSTOMER DATAMART QF5
				,DEAL DATAMART QF5
				,TRAN DATAMART QF5
				,DAILY DATAMART QF5*/
				%IF &QFUND5. = 1 %THEN 
					%DO;
						/*KICK OFF QFUND5 DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\QFUND5 DRIVER DECISION.SAS";
							%QFUND5_DRIVER_DECISION												
					%END;

				/*KICK OFF 
				,CUSTOMER DATAMART NG
				,DEAL DATAMART NG
				,TRAN DATAMART NG
				,DAILY DATAMART NG*/
				%IF &NG. = 1 %THEN 
					%DO;
						/*KICK OFF NG DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\NG DRIVER DECISION.SAS";
							%NG_DRIVER_DECISION												
					%END;


				/*KICK OFF 
				,CUSTOMER DATAMART ONLINE/LOC
				,DEAL DATAMART ONLINE/LOC
				,TRAN DATAMART ONLINE/LOC
				,DAILY DATAMART ONLINE/LOC*/
				%IF &OL. = 1 %THEN 
					%DO;
						/*KICK OFF ONLINE DRIVER DECISION*/
						%INCLUDE "&WHEREPRGRMSAT_REDESIGN.\ONLINE DRIVER DECISION.SAS";
							%ONLINE_DRIVER_DECISION												
					%END;


				/*KICK OFF 
				,CUSTOMER DATAMART FUSE
				,DEAL DATAMART FUSE
				,TRAN DATAMART FUSE
				,DAILY DATAMART FUSE*/



/*---------------------------------------------- END OF INSTANCES ----------------------------------------------------------*/

				/*SLEEP FOR 5 MINUTES WHILE SEARCHING FOR DATA*/
				DATA SLEEP;
					CALL SLEEP(300,1);
				RUN;

				/*CALCULATE THE VALUE OF THE END_VARIABLE TO KNOW IF WE NEED TO STOP THE LOOP OR NOT*/
				PROC SQL;
					SELECT COUNT(*) INTO: END_VARIABLE
					FROM INSTANCE_ETL_CHECK
					WHERE INSTANCE = 'END'
				;
				QUIT;

			%END;
	%END;


%MEND;

%SKYNET_DATA_CHECK

/*GET TIME*/
	DATA _NULL_;
		CALL SYMPUTX('CURRENT_TIME',PUT(DATETIME(),DATEAMPM20.));
	RUN;

	%PUT &CURRENT_TIME;

/*EMAIL TEAM*/
	OPTIONS EMAILSYS=SMTP EMAILHOST=MAIL.ADVANCEAMERICA.NET EMAILPORT=25;
	FILENAME MYMAIL EMAIL; 
	DATA _NULL_;
	   FILE MYMAIL
			TO=('BI_DATA@ADVANCEAMERICA.NET','SHOPKINS@ADVANCEAMERICA.NET')
		    FROM=('SKYNET@COMPLETE.NET')
	     SUBJECT="SKYNET DATA LOAD LOOP COMPLETE - STARTING DEPENDENCIES NOW - &CURRENT_TIME ";
		 PUT ' SKYNET DATA LOOP HAS BEEN COMPLETED AND ALL DATA HAS BEEN FOUND. THE NEXT STEP IN SKYNET IS TO WAIT FOR DATA TO LOAD AND FOR REPORTS/TABLES BUILT OFF SKYNET TO BE RAN . ';
	RUN;
	


/*---------------------------------------------END OF CONDITIONAL SOURCE PULL LOGIC-----------------------------------------------------

		NOW THE PROGRAM WILL VISIT PROGRAMS THAT HAVE DEPENDENCIES ON THE PROGRAMS ABOVE FINISHING

		THESE PROGRAMS WILL ONLY BE KICKED OFF IF EVERY INSTANCE/PRODUCT COMBINATION OF DATA HAS BEEN COMPLETED

----------------------------------------------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------------------------------------------

		ONCE WE GET TO THIS POINT ALL THE DATA HAS: 

			1) DATA FROM ETL HAS BEEN COMPLETED
			2) ALL SKYNET SOURCE PULLS HAVE BEEN KICKED OFF / ARE FINISHING
		
		KNOWING BOTH OF THOSE THINGS, WE NOW NEED TO CONDITIONALLY KICK OFF PROCESSES THAT ARE DEPENDENT ON THE ABOVE SOURCE PULLS. 
		4 DEPENDENCY PROGRAMS WILL KICK OFF SIMULTANEOUSLY NEXT.

			1) DEAL DEPENDENCY
			2) TRAN DEPENDENCY
			3) DEAL AND TRAN DEPENDENCY
			4) DAILY DEPENDENCY

---------------------------------------------------------------------------------------------------------------------------------------*/
 
	
	/* KICK OFF DEAL DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\DEAL DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\DEAL_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=DEAL_DEPEND
					 STATUS=DEAL_DEPEND;

	/* KICK OFF TRAN DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\TRAN DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\TRAN_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=TRAN_DEPEND
					 STATUS=TRAN_DEPEND;

	/* KICK OFF DEAL AND TRAN DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\DEAL AND TRAN DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\DEAL_TRAN_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=DT_DEPEND
					 STATUS=DT_DEPEND;

	/* KICK OFF DAILY DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\DAILY DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\DAILY_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=DAILY_DEPEND
					 STATUS=DAILY_DEPEND;

	/* KICK OFF TRANSPOSE DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\TRANSPOSE DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\TRANSPOSE_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=TRANSP_DEPEND
					 STATUS=TRANSP_DEPEND;

	/* KICK OFF CUSTOMER DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\CUSTOMER DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\CUSTOMER_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=CUST_DEPEND
					 STATUS=CUST_DEPEND;

	/* KICK OFF CUSTOMER LIFECYCLE DEPENDENCY*/
	SYSTASK COMMAND "'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SAS.EXE'
					 '&SKYNETREDESIGN.\CUSTOMER LIFECYCLE DEPENDENCY.SAS'
					 -LOG '&SKYNETREDESIGN_LOGS.\CUSTOMER_LC_DEPENDENCY_DRIVER_&TIMESTAMP..LOG'
					 -CONFIG 'C:\PROGRAM FILES\SASHOME\SASFOUNDATION\9.4\SASV9.CFG'"
					 TASKNAME=CUST_LC_DEPEND
					 STATUS=CUST_LC_DEPEND;


WAITFOR _ALL_ DEAL_DEPEND TRAN_DEPEND DT_DEPEND DAILY_DEPEND CUST_DEPEND CUST_LC_DEPEND;



	/*GET TIME*/
	DATA _NULL_;
		CALL SYMPUTX('CURRENT_TIME',PUT(DATETIME(),DATEAMPM20.),'G');
	%RUNQUIT(&job,&sub1);

	%PUT &CURRENT_TIME;


	/*KICK OFF REST OF TDES*/
	/*KICK OFF ALL OTHER TDE'S THAT ARE NOT KICKED OFF IN THE DEPENDENCIES*/

	PROC SQL;
		CREATE TABLE DASHBOARD_LIST AS
		SELECT DISTINCT DASHBOARD_NAME
			  ,DEPENDENCIES
		FROM SKY.TDE_DEPENDENCY_DATAMART
		WHERE 
	;
	QUIT;



/*EMAIL TEAM*/
	OPTIONS EMAILSYS=SMTP EMAILHOST=MAIL.ADVANCEAMERICA.NET EMAILPORT=25;
	FILENAME MYMAIL EMAIL; 
	DATA _NULL_;
	   FILE MYMAIL
			TO=('BI_DATA@ADVANCEAMERICA.NET','SHOPKINS@ADVANCEAMERICA.NET','BI_REPORTING@ADVANCEAMERICA.NET')
		    FROM=('SKYNET@COMPLETE.NET')
	     SUBJECT="SKYNET DEPENDENCY PROGRAMS COMPLETED - SKYNET DEPENDENT TDE'S KICKED OFF - &CURRENT_TIME ";
	RUN;





