/*	THIS PROGRAM'S GOAL IS TO CHECK FOR 2 THINGS*/
/*	1) IS CUSTOMER FINISHED*/
/*	2) IF CUSTOMER IS FINISHED THEN KICK OFF ONLY CUSTOMER DEPENDENCIES*/
OPTIONS NOXWAIT;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V3\SKYNET REDESIGN\TOP SECRET PROGRAM.SAS";


%MACRO CUSTOMER_DEPENDENCIES();


	/*QUERY RESULTS FROM THE LOOP TO MAKE SURE EACH INSTANCE IS FINISHED*/

	%DO %UNTIL (%EVAL(&COUNT_FINISHED. >= 17));
			
				PROC SQL;
					CREATE TABLE TEMP AS
					SELECT DISTINCT SOURCE
								    ,EADV_STATUS
									,QFUND1_INSTALL_STATUS
									,QFUND1_TITLE_STATUS
									,QFUND2_INSTALL_STATUS
									,QFUND3_TTOC_STATUS
									,QFUND3_TXTITLE_STATUS
									,QFUND3_TETL_STATUS
									,QFUND3_FAI_STATUS
									,QFUND4_PAYDAY_STATUS
									,QFUND4_TITLE_STATUS
									,QFUND5_PAYDAY_STATUS
									,QFUND5_INSTALL_STATUS
									,QFUND5_TITLE_STATUS
									,NG_STATUS
									,ONLINE_STATUS
									,LOC_STATUS
									,FUSE_STATUS
					FROM BIOR.DATAMART_STATUS
					WHERE SOURCE = 'BIOR.O_CUSTOMER_ALL'
				;
				QUIT;

			/*REVERSE THE TRANSPOSE*/
				DATA TEMP_STATUS;
					SET TEMP;
					ARRAY VARS EADV_STATUS QFUND1_INSTALL_STATUS QFUND1_TITLE_STATUS QFUND2_INSTALL_STATUS QFUND3_TTOC_STATUS QFUND3_TXTITLE_STATUS QFUND3_TETL_STATUS
							   QFUND3_FAI_STATUS QFUND4_PAYDAY_STATUS QFUND4_TITLE_STATUS QFUND5_PAYDAY_STATUS QFUND5_INSTALL_STATUS QFUND5_TITLE_STATUS NG_STATUS
								ONLINE_STATUS LOC_STATUS FUSE_STATUS; 	
					DO _T = 1 TO DIM(VARS);              	
					  IF NOT MISSING(VARS[_T]) THEN DO;  	
					    INSTANCE=VNAME(VARS[_T]);           
					    STATUS=VARS[_T];                   	
					    OUTPUT;                          	
					  END;
					END;
					DROP EADV_STATUS QFUND1_INSTALL_STATUS QFUND1_TITLE_STATUS QFUND2_INSTALL_STATUS QFUND3_TTOC_STATUS QFUND3_TXTITLE_STATUS QFUND3_FAI_STATUS QFUND3_TETL_STATUS
							   QFUND4_PAYDAY_STATUS QFUND4_TITLE_STATUS QFUND5_PAYDAY_STATUS QFUND5_INSTALL_STATUS QFUND5_TITLE_STATUS NG_STATUS
								ONLINE_STATUS LOC_STATUS FUSE_STATUS _T;  *DROP THE OLD VARS (COLS) AND THE DUMMY VARIABLE _T;
				RUN;

			/*LOOK AT TABLES WHICH HAVE FINISHED*/
				DATA COMPLETED_TABLES;
					SET TEMP_STATUS;
					WHERE STATUS = 'FINISHED';
				RUN;

				PROC SQL NOPRINT;
					SELECT COUNT(*) INTO: COUNT_FINISHED /*THIS NUMBER SHOULD BE EQUAL TO 16*/
					FROM COMPLETED_TABLES
					WHERE STATUS = 'FINISHED';
				QUIT;

				%IF %EVAL(&COUNT_FINISHED. < 17) %THEN 
					%DO;
						/*SLEEPS FOR 300 SECONDS (5 MINUTES) UNTIL IT FINDS 16 FINISHED TABLES, IT WILL LOOP FOREVER UNTIL THE 16 FINISHED TABLES*/
						DATA SLEEP;
							CALL SLEEP(300,1);
						RUN;

					%END;

	%END;

	/*	QUERY THAT CHECKS TO SEE IF DEAL SUMMARY HAS DEALS FOR PREVIOUS RUN */
	PROC SQL;
	    CREATE TABLE WORK.CUSTOMER_CHECK AS
	    SELECT INSTANCE
			  ,MAX(DATEPART(UPDATEDT))	AS UPDATEDT FORMAT=MMDDYY10.
	          ,CASE WHEN 
	                  WEEKDAY(TODAY()) = 2 AND CALCULATED UPDATEDT >= TODAY()-2 THEN 'SUCCESSFUL'
	                  WHEN
	                  CALCULATED UPDATEDT >= TODAY()-1 THEN 'SUCCESSFUL' 
	                  ELSE 'ERROR' END AS STATUS
	    FROM BIOR.O_CUSTOMER_ALL
	    WHERE UPDATEDT >= DHMS(TODAY()-5,00,00,00)
	    GROUP BY INSTANCE
	    ORDER BY INSTANCE
	;
	QUIT;

	%LET TDY = %SYSFUNC(TODAY(),WEEKDATE30.);

	/* 	EMAIL BI_DATA AND SPENCER THE RESULTS OF THE QUERIES  */
	OPTIONS EMAILSYS=SMTP EMAILHOST=MAIL.ADVANCEAMERICA.NET EMAILPORT=25;
	FILENAME EML EMAIL TO=('BI_DATA@ADVANCEAMERICA.NET','BI_REPORTING@ADVANCEAMERICA.NET'
				,'FINANCEDEPT@ADVANCEAMERICA.NET','FINANCEPRODUCT@ADVANCEAMERICA.NET') CC=('SHOPKINS@ADVANCEAMERICA.NET') SUBJECT="CUSTOMER DATAMART STATUS FOR &TDY" CT='TEXT/HTML';
	ODS LISTING CLOSE;
	ODS HTML BODY=EML;
	ODS SELECT SQL_RESULTS;
	ODS NOPROCTITLE;

	PROC SQL;
	TITLE "CUSTOMER DATAMART CHECK";
		SELECT *
			FROM WORK.CUSTOMER_CHECK
			;
	QUIT;

	/* CREATE TIMESTAMP */
	PROC FORMAT;
		PICTURE WHATDAYISIT OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
		PICTURE WHATTIMEISIT OTHER=%0H.%0M.%0S (DATATYPE=TIME);
	RUN;

	DATA _NULL_;
		CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
		CALL SYMPUTX('MONDAY_OR_NOT',(WEEKDAY(DATE())),'G');
	RUN;


	/*-----------------------------------------------------------TDE PART------------------------------------------------------------*/


		/*GET DASHBOARDS THAT ONLY DEPEEND ON TRANSPOSE AND PASS THROUGH TO NEW VARIABLE*/


	%IF %EVAL(&MONDAY_OR_NOT. ^= 2) %THEN 
		%DO;
			PROC SQL;
				CREATE TABLE DASHBOARD_LIST AS
				SELECT DISTINCT DASHBOARD_NAME
					  ,DEPENDENCIES
				FROM SKY.TDE_DEPENDENCY_DATAMART
				WHERE DEPENDENCIES = 'BIOR.O_CUSTOMER_ALL' AND TABLE_DEPENDENT_COUNT = 1
			;
			QUIT;

			%INCLUDE "&SKYNETREDESIGN.\TDE BAT UPLOAD.SAS";
		%END;

%MEND;

%CUSTOMER_DEPENDENCIES

%INCLUDE "E:\Shared\CADA\SAS Source Code\Production\Operations\SSN Encryption.sas";