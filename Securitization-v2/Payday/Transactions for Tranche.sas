%MACRO SECURITIZATION_TRAN(INSTANCE_NAME);

	%IF &INSTANCE_NAME. = EAPROD1 %THEN 
		%DO;
			%INCLUDE "&WHEREPRGRMSAT\MACRO ASSIGNMENTS_EADV.SAS";
		%END;
	%IF &INSTANCE_NAME. = NG %THEN
		%DO;
			%INCLUDE "&WHEREPRGRMSAT\MACRO ASSIGNMENTS_NG.SAS";
		%END;
	%IF &INSTANCE_NAME. = AANET %THEN 
		%DO;
			%INCLUDE "&WHEREPRGRMSAT\MACRO ASSIGNMENTS_AANET.SAS";
		%END;

	/*GET TRANSACTIONS*/
	PROC SQL;
		CONNECT TO ORACLE (USER = &USER. PASSWORD=&PASSWORD. PATH='BIOR');
		CREATE TABLE ODT_TRANSACTION_PRE_&INSTANCE_NAME. AS
		SELECT *
		FROM CONNECTION TO ORACLE
		(
		SELECT A.*
		FROM 
			(
				SELECT A.*
					  ,B.BUSN_UNIT_ID
				FROM BIOR.O_DEALTRANSACTION_ALL A
				LEFT JOIN BIOR.D_LOCATION B
					ON (A.LOCNBR = B.LOC_NBR)
				WHERE TRANDATE >= TO_DATE(&RUNDATE_USE.) - 7
					AND INSTANCE = &INSTANCE.
					AND PRODUCT = &PRODUCT.
			) A
		WHERE DEAL_DT >= '02NOV2015'
		)
	;
	DISCONNECT FROM ORACLE;
	QUIT;

	PROC SQL;
		CREATE TABLE ODT_TRANSACTION_&INSTANCE_NAME. AS
		SELECT A.*
			  ,&BU_ASSIGNMENT_BEGIN.
			  ,&BU_ASSIGNMENT_ENDDT.
			  ,(INTCK('WEEK',("&STARTDT"D),(DATEPART(DEAL_DT))-1)+1) 			AS ADV_WEEK
			  ,(INTCK('WEEK',("&STARTDT"D),(DATEPART(DEAL_DT))-1)+1) 			AS WEEK
       		  ,(INTCK('WEEK',(&STARTDATE.),(&RUNDT.-1))) 						AS CURRENT_TRANCHE
		FROM ODT_TRANSACTION_PRE_&INSTANCE_NAME. A
		WHERE DEAL_DT >= DHMS(CALCULATED BEGINDT,00,00,00)  
				AND DEAL_DT < DHMS(CALCULATED ENDDT,23,59,59)
				AND DEAL_DT >= '02NOV2015:00:00:00'DT
				AND DEAL_DT <= DHMS(&RUNDT.-1,23,59,59)
			/*LIMIT TRAN CODES*/

			AND STNDTRANCD NOT IN 
				('LATE FEE'
				 ,'SOLD'
				 ,'SOLD PAID'
				 ,'REPAYMENT PLAN'
				 ,'REFUND'
				 ,'OVERPAID'
				 ,'DELINQUENT'
				 ,'DEFAULT'
				 ,'WRITE OFF FEE'
				 ,'REBATE FEE REVERSAL'
				 ,'REBATE FEE'
				 ,'WRITE OFF WAIVE'
				 ,'FEE WAIVED'
				 ,'ADJUSTMENT')
	;
	QUIT;

	PROC SQL;
		DROP TABLE TMP_TBLS.SECUR_DEALS_&INSTANCE_NAME.
	;
	QUIT;

	PROC SQL;
		CREATE TABLE TMP_TBLS.SECUR_DEALS_&INSTANCE_NAME. AS
		SELECT DISTINCT INSTANCE
					   ,DEALNBR
					   ,TITLE_DEALNBR
		FROM ODT_TRANSACTION_&INSTANCE_NAME.
	;
	QUIT;

	PROC SQL;
		CONNECT TO ORACLE (USER=&USER. PASSWORD=&PASSWORD. PATH='BIOR');
		CREATE TABLE DEALSUM_SECUR_&INSTANCE_NAME. AS
		SELECT *
		FROM CONNECTION TO ORACLE
		(
			SELECT A.*
			FROM BIOR.O_DEAL_SUMMARY_ALL A
			INNER JOIN TEMPTABLES.SECUR_DEALS_&INSTANCE_NAME. B
				ON (A.INSTANCE = B.INSTANCE
				AND A.TITLE_DEALNBR = B.TITLE_DEALNBR
				AND A.DEALNBR = B.DEALNBR)
		)
		;
		DISCONNECT FROM ORACLE;
	QUIT;

	PROC SORT DATA=DEALSUM_SECUR_&INSTANCE_NAME. OUT=DEALSUM_SECUR_&INSTANCE_NAME. NODUPKEY;
	BY INSTANCE TITLE_DEALNBR DEALNBR;
	RUN;

	PROC SQL;
		CREATE TABLE PAYWEEK_FOR_DEALS_&INSTANCE_NAME. AS
		SELECT A.*
			  ,B.*
			  ,(CASE WHEN STNDTRANCD IN ('ORIGINATION','RENEWAL','REFINANCE','FEE CHARGED') THEN .
			  		ELSE INTCK('WEEK',DATEPART(B.DEAL_DT),(DATEPART(TRANDT))) + WEEK END) AS PAY_WEEK
		FROM ODT_TRANSACTION_&INSTANCE_NAME. A
		LEFT JOIN DEALSUM_SECUR_&INSTANCE_NAME. B
			ON (A.DEALNBR = B.DEALNBR
			AND A.INSTANCE = B.INSTANCE
			AND A.TITLE_DEALNBR = B.TITLE_DEALNBR)
	;
	QUIT;

	
	PROC SQL;
		CREATE TABLE TRANS_SFTP_LAYOUT_&INSTANCE_NAME. AS
		SELECT DEALNBR	AS SECURITYITEMNUMBER
			  ,PRODUCT	AS SECURITYITEMTYPEID
			  ,POS		AS SECURITYITEMSOURCEID
			  ,(CASE WHEN STNDTRANCD IN ('ORIGINATION','RENEWAL','REFINANCE') AND VOIDFLG = 'N' THEN 'ORIGINATION'
			  		 WHEN STNDTRANCD IN ('PAYMENT'
										,'PREPAYMENT'
										,'DEFAULT PAYMENT'
										,'ACH PREPAYMENT'
										,'ACH PAYMENT') AND POSTRANCD NOT IN ('BUY','PAYOFF PAYMENT') THEN 'PAYMENTS'
					WHEN (POSTRANCD IN ('BUY','PAYOFF PAYMENT') OR STNDTRANCD IN ('WRITE OFF PAYMENT','WRITE OFF BANKRUPT','WRITE OFF','SETTLEMENT','BANKRUPT','ACH WRITE OFF','WRITE OFF FRAUD','WRITE OFF DECEASED')) AND VOIDFLG = 'N' THEN 'CLOSE'
					WHEN VOIDFLG ^= 'N' THEN 'VOID'
					WHEN STNDTRANCD LIKE '%PRESENTMENT%' THEN 'CHECK PRESENTMENT'
					WHEN STNDTRANCD LIKE '%RETURN%' THEN 'RETURN CHECK'
						ELSE '' END) AS SECURITYITEMOPERATIONTYPEID
			 ,SUM(TRANAMT)  AS PAIDAMOUNT
			 ,TRANDATE	    AS OPERATIONDATE
			 ,TRANDATE		AS TRANDT
			 ,TRANDATE		AS APPLICATIONDATE
			 ,TOTALOWED		AS CURRENTAMOUNT
			 ,WEEK			AS TRANCHE_ID
			 ,PAY_WEEK
		FROM PAYWEEK_FOR_DEALS_&INSTANCE_NAME. T1
		WHERE (PAY_WEEK = (INTCK('WEEK',(&STARTDATE.),(&RUNDATE.))) 
				OR T1.WEEK = (INTCK('WEEK',(&STARTDATE.),(&RUNDATE.))) ) AND T1.PAY_WEEK NOT IS MISSING AND T1.PAY_WEEK NOT = 36
      	GROUP BY DEALNBR
                ,PRODUCT
                ,POS
                ,(CALCULATED SECURITYITEMOPERATIONTYPEID)
                ,TRANDATE
                ,TOTALOWED
                ,WEEK
                ,PAY_WEEK
      	HAVING (CALCULATED PAIDAMOUNT) NOT IS MISSING
		ORDER BY DEALNBR
				,TRANDATE

;
QUIT;


PROC SQL;
	CREATE TABLE SFTP_LAYOUT_&INSTANCE_NAME. AS
	SELECT DEALNBR															AS LOAN_NUMBER
		  ,CUSTNBR															AS CUSTOMER_ID
		  ,PRODUCT															AS PRODUCT_TYPE
		  ,POS																AS SOURCE_PRODUCT
		  ,STATE
		  ,DEAL_DTTM			
		  ,DEAL_DT															AS DEALDT
		  ,DUEDT
		  ,((DATEPART(T1.DEAL_DT)-DATEPART(T1.DUEDT))*-1) 					AS TERM
		  ,LOCNBR
		  ,(CASE WHEN T1.PREVDEALNBR IS NOT MISSING THEN 1 ELSE 0 END) 		AS CASH_AGN
		  ,ADVAMT
		  ,SUM(FEEAMT,CUSTOMARYFEE,NSFFEEAMT,OTHERFEEAMT,INTERESTFEE)		AS FEES
		  ,SUM(ADVAMT,CALCULATED FEES)										AS TOTAL_AMT
		  ,(INTCK('WEEK',("&STARTDT"D),(DATEPART(DEAL_DT))-1)+1) 			AS WEEK
		  ,DEALNBR
		  ,(INTCK('WEEK',(&STARTDATE.),(&RUNDT.-1))) 						AS CURRENT_TRANCHE
		  ,(INTCK('WEEK',(&STARTDATE.),(&RUNDT.-1))) 						AS TRANCHE_ID
	FROM DEALSUM_SECUR_&INSTANCE_NAME. T1
    WHERE CALCULATED WEEK = (CALCULATED CURRENT_TRANCHE) AND 
			( T1.DEALSTATUSCD NOT IN 
           (
           'V',
           'R')
		   )
;
QUIT; 

	
%MEND;



