%INCLUDE "\\CSSSASAPP\CADA\SAS SOURCE CODE\PRODUCTION\SERVICE ACCOUNTS\SVC_SASUSER.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\SKYNET REDESIGN\DATAMART REDESIGN\DEAL\DEAL_ERROR_INPUTS.SAS";


LIBNAME NG_LOAN ORACLE
	USER=&USER
	PW=&PASSWORD
	PATH = PEDWPROD1
	SCHEMA=SC_SILO_NG DEFER=YES;

LIBNAME NG_CUST ORACLE
	USER=&USER
	PW=&PASSWORD
	PATH=PEDWPROD1
	SCHEMA=SC_IDS DEFER=YES;

LIBNAME SCODSFIN ORACLE
	USER=&USER
	PW=&PASSWORD
	PATH=PEDWPROD1
	SCHEMA=SC_ODS_FIN DEFER=YES;

LIBNAME EDW ORACLE
	USER=&USER
	PASSWORD=&PASSWORD
	PATH = EDWPRD
	SCHEMA=EDW
	DBSLICEPARM=(ALL,4) DEFER=YES;
DATA _NULL_;
	/*DEAL*/
	CALL SYMPUTX('DEAL_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('DEAL_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\DEAL",'G');
%RUNQUIT(&job,&sub13);

LIBNAME SKYNET "E:\SHARED\CADA\SAS DATA\DATAMART\STDM";

DATA _NULL_;
    LENGTH FULL_RUN $ 1;
    FORMAT FULL_RUN $CHAR1.;
    INFORMAT FULL_RUN $CHAR1.;
    INFILE 'E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\SKYNET\WEEKLY INSERT DEV CODE\FULL_RUN.CSV'
        LRECL=1
        ENCODING="WLATIN1"
        TERMSTR=CRLF
        DLM='7F'x
        MISSOVER
        DSD ;
    INPUT FULL_RUN : $CHAR1.;
	IF _N_ ^= 1;
	IF FULL_RUN = 'Y' THEN 
		DO;
			CALL SYMPUTX('LASTWEEK',DHMS(INTNX('YEAR',TODAY(),-6,'B'),00,00,00),'G');
		END;
	ELSE IF FULL_RUN = 'N' THEN 
		DO;
		 	CALL SYMPUTX('LASTWEEK',DHMS(INTNX('DAY',TODAY(),-5,'B'),00,00,00),'G');
		END;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.ACTIVE_PRODUCT_CD AS 
   SELECT t1.FI_SUBCATEGORY_PRODUCT_ID, 
          t1.FI_PRODUCT_CATEGORY_ID, 
          t1.FC_SUBCATEGORY_PRODUCT, 
          t1.FC_ABBREVIATION, 
          t1.FC_SUBCATEGORY_PRODUCT_DESC, 
          t1.FC_SUBCATEGORY_PRODUCT_ICON, 
          t1.FI_STATUS, 
          t1.FD_OPERATION_DATE, 
          t1.FD_MODIFICATION_DATE, 
          t1.FC_MODIFY_USER, 
          t1.FC_TRANSACTION_NUMBER, 
          t1.FI_MODEL_TYPE_ID, 
          t1.FC_SCD_EFFECTIVE_FLG, 
          t1.FD_SCD_EFFECTIVE_DTTM_START, 
          t1.FD_SCD_EFFECTIVE_DTTM_END, 
          t1.FD_ETL_CREATED_DTTM, 
          t1.FD_ETL_MODIFICATION_DTTM, 
          t1.FC_ETL_USER
      FROM NG_LOAN.SCD_CT_SUBCATEGORY_PRODUCT t1
      WHERE t1.FC_SCD_EFFECTIVE_FLG = 'Y';
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.EFFECTIVE_LOANS AS 
   SELECT t1.DTL_CAPXTIMESTAMP, 
          t1.FI_LOAN_ID, 
          t1.FI_CENTER_ID, 
          t1.FI_CUSTOMER_ID, 
          t1.FI_PRODUCT_ID, 
          t1.FN_PRINCIPAL_AMOUNT, 
          t1.FN_FINANCE_CHARGE_AMOUNT, 
          t1.FN_PRINCIPAL_BALANCE, 
          t1.FN_FINANCE_CHARGE_BALANCE, 
          t1.FN_ADDITIONAL_CHARGE_BALANCE, 
          t1.FD_ORIGINATION_DATE, 
          t1.FD_DUE_DATE, 
          t1.FC_DUE_TIME, 
          t1.FI_STATE_DATABASE_CODE, 
          t1.FN_APR, 
          t1.FI_STORAGE_DEVICE_ID, 
          t1.FI_STATUS, 
          t1.FI_ADDITIONAL_PAYMENT_STATUS, 
          t1.FI_CURRENT_BALANCE_SEQ, 
          t1.FI_TRANSACTION_BY_TYPE, 
          t1.FI_TRANSACTION_BY_CENTER, 
          t1.FI_CURRENCY_ID, 
          t1.FC_ORIGINATION_IP_ADDRESS, 
          t1.FC_ORIGINATION_USER, 
          t1.FI_MODEL_ID, 
          t1.FI_TERM, 
          t1.FI_TERM_TYPE, 
          t1.FI_NUMBER_OF_PAYMENTS, 
          t1.FI_CURRENT_PAYMENT, 
          t1.FC_USER, 
          t1.FI_EMPLOYEE_ID, 
          t1.FC_IP_ADDRESS, 
          t1.FI_CENTER_OPERATION, 
          t1.FD_CREATED_DATE, 
          t1.FD_MODIFICATION_DATE, 
          t1.FD_OPERATION_TIME, 
          t1.FC_TRANSACTION_NUMBER, 
          t1.FI_SUBCATEGORY_PRODUCT_ID, 
          t1.FC_SCD_EFFECTIVE_FLG, 
          t1.FD_SCD_EFFECTIVE_DTTM_START, 
          t1.FD_SCD_EFFECTIVE_DTTM_END, 
          t1.FD_ETL_CREATED_DTTM, 
          t1.FD_ETL_MODIFICATION_DTTM, 
          t1.FC_ETL_USER
      FROM NG_LOAN.SCD_TA_LOAN t1
      WHERE t1.FC_SCD_EFFECTIVE_FLG = 'Y' AND t1.FD_MODIFICATION_DATE >= &LASTWEEK
      ORDER BY t1.DTL_CAPXTIMESTAMP;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.NG_LOAN_DATA AS 
   SELECT t1.FI_SUBCATEGORY_PRODUCT_ID, 
          /* POS */
            ("NEXTGEN") AS POS, 
          /* INSTANCE */
            ("NG") AS INSTANCE, 
          t2.BRND_CD AS BRANDCD, 
          t2.CTRY_CD AS COUNTRYCD, 
          t2.ST_PVC_CD AS STATE, 
          t2.ADR_CITY_NM AS CITY, 
          t2.MAIL_CD AS ZIP, 
          t2.HIER_ZONE_NBR AS ZONENBR, 
          t2.HIER_ZONE_NM AS ZONENAME, 
          t2.HIER_RGN_NBR AS REGIONNBR, 
          t2.HIER_RDO_NM AS REGIONRDO, 
          t2.HIER_DIV_NBR AS DIVISIONNBR, 
          t2.HIER_DDO_NM AS DIVISIONDDO, 
          t2.BUSN_UNIT_ID AS BUSINESS_UNIT, 
          t1.FI_CENTER_ID AS LOCNBR, 
          t2.OPEN_DT AS LOC_OPEN_DT, 
          t2.CLS_DT AS LOC_CLOSE_DT, 
          /* DEAL_DT */
            (DATEPART(t1.FD_ORIGINATION_DATE)) FORMAT=MMDDYY10. AS DEAL_DT, 
          t1.FD_ORIGINATION_DATE AS DEAL_DTTM, 
          t1.FI_LOAN_ID AS DEALNBR, 
          /* TITLE_DEALNBR */
            (.) AS TITLE_DEALNBR, 
          t1.FI_CUSTOMER_ID AS CUSTNBR, 
          t1.FN_PRINCIPAL_AMOUNT AS ADVAMT, 
          t1.FN_FINANCE_CHARGE_AMOUNT AS FEEAMT, 
          t1.FD_DUE_DATE AS DUEDT, 
          t1.FD_MODIFICATION_DATE AS UPDATEDT, 
          /* TOTAL_OWED */
            (SUM(t1.FN_PRINCIPAL_BALANCE,t1.FN_FINANCE_CHARGE_BALANCE,t1.FN_ADDITIONAL_CHARGE_BALANCE)) AS TOTAL_OWED, 
          /* DEALSTATUSCD */
            (CASE
                 WHEN t1.FI_STATUS = 0 THEN "WAITING"
                 WHEN t1.FI_STATUS = 1 THEN "CURRENT"
                 WHEN t1.FI_STATUS = 2 THEN "DELINQUENT" 
                 WHEN t1.FI_STATUS = 3 THEN "DEFAULT"
                 WHEN t1.FI_STATUS = 4 THEN "WRITEOFF"
                 WHEN t1.FI_STATUS = 5 THEN "CHARGEOFF"
                 WHEN t1.FI_STATUS = 6 THEN "OVERPAID"
                 WHEN t1.FI_STATUS = 7 THEN "CLOSED"
                 WHEN t1.FI_STATUS = 8 THEN "SOLD"
                 WHEN t1.FI_STATUS = 9 THEN "PENDING CLOSED"
                 ELSE ""
            END) AS DEALSTATUSCD
      FROM WORK.EFFECTIVE_LOANS t1
           INNER JOIN EDW.D_LOCATION t2 ON (t1.FI_CENTER_ID = t2.LOC_NBR);
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.CUSTOMER_PRE AS 
   SELECT t1.FC_SOURCE_SYSTEM_CD, 
          t1.FC_SOURCE_CUST_IDENTIFIER
      FROM NG_CUST.TA_CUSTOMER_MASTER t1;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.NG_CUST_SSN AS 
   SELECT t1.FC_SOURCE_SYSTEM_CD, 
          t1.FC_SOURCE_CUST_IDENTIFIER, 
          t2.FE_CUST_SSN, 
          /* CUSTNBR */
            (INPUT(t1.FC_SOURCE_CUST_IDENTIFIER,BEST32.)) AS CUSTNBR
      FROM WORK.CUSTOMER_PRE t1
           LEFT JOIN NG_CUST.TA_CUSTOMER_SSN t2 ON (t1.FC_SOURCE_CUST_IDENTIFIER = t2.FC_SOURCE_CUST_IDENTIFIER)
      WHERE t2.FC_SCD_EFFECTIVE_FLG = 'Y';
%RUNQUIT(&job,&sub13);

PROC SORT DATA=WORK.NG_CUST_SSN OUT=SSN_NO_DUPS NODUPKEY DUPOUT=DUPS;
	BY CUSTNBR;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.INT_ILP AS 
   SELECT /* DEALNBR */
            (input(t1.FC_LOAN_ID,best32.)) AS DEALNBR, 
          /* INTERESTFEE */
            (SUM(t1.FN_FINANCIAL_DETAIL_AMT)) AS INTERESTFEE
      FROM SCODSFIN.MV_FINANCIAL_RECORD t1
      WHERE t1.FC_TRANSACTION_CD = 'ACCRUEDINT' AND t1.FC_FINANCIAL_CD = 'ITEM'
      GROUP BY (CALCULATED DEALNBR);
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.NG_LOAN_TXN AS 
   SELECT t1.FC_LOAN_ID, 
          t1.FI_CUSTOMER_NUMBER, 
          t1.FC_FIRST_NAME, 
          t1.FC_LAST_NAME, 
          t1.FC_TRANSACTION_ID, 
          t1.FD_DUE_DATE, 
          t1.FC_DUE_TIME, 
          t1.FD_ORIGINATION_DATE, 
          t1.FN_APR, 
          t1.FN_DAILY_INTEREST_RATE, 
          t1.FI_CENTER_ID, 
          t1.FC_BUSINESS_UNIT_CD, 
          t1.FC_STATE_INITIAL, 
          t1.FI_FINANCIAL_RECORD_KEY_ID, 
          t1.FC_FINANCIAL_DETAIL_CD, 
          t1.FC_TRANSACTION_CD, 
          t1.FN_FINANCIAL_DETAIL_AMT, 
          t1.FD_TRANSACTION_DTTM, 
          t1.FC_REVERSAL_CD, 
          t1.FC_TRANSACTION_ID_OTHER, 
          t1.FC_UNIQUE_TRAN_NO, 
          t1.FC_LOAN_STATUS_CD_CURRENT, 
          t1.FC_LOAN_STATUS_CD_PREVIOUS, 
          t1.FC_CUST_INSTRUMENT_ABANBR, 
          t1.FC_CUST_INSTRUMENT_ACCT, 
          t1.FC_CUST_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ABANBR, 
          t1.FC_BANK_INSTRUMENT_ACCT, 
          t1.FC_BANK_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ACCT_CD, 
          t1.FI_EMPLOYEE_ID, 
          t1.FC_USER, 
          t1.FD_MODIFICATION_DTTM, 
          t1.FD_SCD_EFFECTIVE_DTTM_START, 
          t1.FC_PRODUCT_CD, 
          t1.FD_ACCOUNTING_DT, 
          t1.FC_FINANCIAL_CD, 
          t1.FC_ACCT_STATUS_CD_PREVIOUS, 
          t1.FC_ACCT_STATUS_CD_CURRENT, 
          t1.FC_COMMENT, 
          t1.FI_CENTER_ID_OTHER, 
          t1.FC_BUSINESS_UNIT_CD_OTHER, 
          t1.FC_REFINANCED_LOAN_ID, 
          t1.FD_RPP_START_DT, 
          t1.FD_RPP_END_DT, 
          t1.FD_RPP_NEXT_DUE_DT, 
          t1.FC_RPP_FLG, 
          t1.FC_PROCESS_LEDGER_DET_FLG, 
          t1.FD_INTEREST_ACCRUED_DT
      FROM SCODSFIN.MV_FINANCIAL_RECORD t1
      WHERE t1.FC_PRODUCT_CD NOT IN 
           (
           'MONEYGRAM',
           'MISC',
           'PPC',
           'SAFE'
           )
      ORDER BY t1.FC_LOAN_ID,
               t1.FD_TRANSACTION_DTTM;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.NG_DEFAULT_LOANS AS 
   SELECT t1.FC_LOAN_ID, 
          /* DEALNBR */
            (input(t1.FC_LOAN_ID,best32.)) AS DEALNBR, 
          t1.FI_CUSTOMER_NUMBER, 
          t1.FD_TRANSACTION_DTTM, 
          t1.FC_FIRST_NAME, 
          t1.FC_LAST_NAME, 
          t1.FD_DUE_DATE, 
          t1.FC_DUE_TIME, 
          t1.FD_ORIGINATION_DATE, 
          t1.FN_APR, 
          t1.FN_DAILY_INTEREST_RATE, 
          t1.FI_CENTER_ID, 
          t1.FC_BUSINESS_UNIT_CD, 
          t1.FC_STATE_INITIAL, 
          t1.FI_FINANCIAL_RECORD_KEY_ID, 
          t1.FC_FINANCIAL_DETAIL_CD, 
          t1.FC_TRANSACTION_CD, 
          t1.FN_FINANCIAL_DETAIL_AMT, 
          t1.FC_REVERSAL_CD, 
          t1.FC_TRANSACTION_ID_OTHER, 
          t1.FC_UNIQUE_TRAN_NO, 
          t1.FC_LOAN_STATUS_CD_CURRENT, 
          t1.FC_LOAN_STATUS_CD_PREVIOUS, 
          t1.FC_CUST_INSTRUMENT_ABANBR, 
          t1.FC_CUST_INSTRUMENT_ACCT, 
          t1.FC_CUST_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ABANBR, 
          t1.FC_BANK_INSTRUMENT_ACCT, 
          t1.FC_BANK_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ACCT_CD, 
          t1.FI_EMPLOYEE_ID, 
          t1.FC_USER, 
          t1.FD_MODIFICATION_DTTM, 
          t1.FD_SCD_EFFECTIVE_DTTM_START, 
          t1.FC_PRODUCT_CD, 
          t1.FD_ACCOUNTING_DT, 
          t1.FC_FINANCIAL_CD, 
          t1.FC_ACCT_STATUS_CD_PREVIOUS, 
          t1.FC_ACCT_STATUS_CD_CURRENT, 
          t1.FC_COMMENT, 
          t1.FI_CENTER_ID_OTHER, 
          t1.FC_BUSINESS_UNIT_CD_OTHER, 
          t1.FC_REFINANCED_LOAN_ID, 
          t1.FD_RPP_START_DT, 
          t1.FD_RPP_END_DT, 
          t1.FD_RPP_NEXT_DUE_DT, 
          t1.FC_RPP_FLG, 
          t1.FC_PROCESS_LEDGER_DET_FLG, 
          t1.FD_INTEREST_ACCRUED_DT
      FROM WORK.NG_LOAN_TXN t1
      WHERE t1.FC_TRANSACTION_CD IN 
           (
           'DEF',
           'RTNCK'
           )
      ORDER BY t1.FC_LOAN_ID,
               t1.FD_TRANSACTION_DTTM;
%RUNQUIT(&job,&sub13);

DATA NG_LOAN_DEFAULT;
	SET NG_DEFAULT_LOANS;
	BY FC_LOAN_ID;
	IF FIRST.FC_LOAN_ID;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.ITEM_TXNS_PRE AS 
   SELECT t1.FC_LOAN_ID, 
          t1.FI_CUSTOMER_NUMBER, 
          t1.FC_FIRST_NAME, 
          t1.FC_LAST_NAME, 
          t1.FC_TRANSACTION_ID, 
          t1.FD_DUE_DATE, 
          t1.FC_DUE_TIME, 
          t1.FD_ORIGINATION_DATE, 
          t1.FN_APR, 
          t1.FN_DAILY_INTEREST_RATE, 
          t1.FI_CENTER_ID, 
          t1.FC_BUSINESS_UNIT_CD, 
          t1.FC_STATE_INITIAL, 
          t1.FI_FINANCIAL_RECORD_KEY_ID, 
          t1.FC_FINANCIAL_DETAIL_CD, 
          t1.FC_TRANSACTION_CD, 
          t1.FN_FINANCIAL_DETAIL_AMT, 
          t1.FD_TRANSACTION_DTTM, 
          t1.FC_REVERSAL_CD, 
          t1.FC_TRANSACTION_ID_OTHER, 
          t1.FC_UNIQUE_TRAN_NO, 
          t1.FC_LOAN_STATUS_CD_CURRENT, 
          t1.FC_LOAN_STATUS_CD_PREVIOUS, 
          t1.FC_CUST_INSTRUMENT_ABANBR, 
          t1.FC_CUST_INSTRUMENT_ACCT, 
          t1.FC_CUST_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ABANBR, 
          t1.FC_BANK_INSTRUMENT_ACCT, 
          t1.FC_BANK_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ACCT_CD, 
          t1.FI_EMPLOYEE_ID, 
          t1.FC_USER, 
          t1.FD_MODIFICATION_DTTM, 
          t1.FD_SCD_EFFECTIVE_DTTM_START, 
          t1.FC_PRODUCT_CD, 
          t1.FD_ACCOUNTING_DT, 
          t1.FC_FINANCIAL_CD, 
          t1.FC_ACCT_STATUS_CD_PREVIOUS, 
          t1.FC_ACCT_STATUS_CD_CURRENT, 
          t1.FC_COMMENT, 
          t1.FI_CENTER_ID_OTHER, 
          t1.FC_BUSINESS_UNIT_CD_OTHER, 
          t1.FC_REFINANCED_LOAN_ID, 
          t1.FD_RPP_START_DT, 
          t1.FD_RPP_END_DT, 
          t1.FD_RPP_NEXT_DUE_DT, 
          t1.FC_RPP_FLG, 
          t1.FC_PROCESS_LEDGER_DET_FLG, 
          t1.FD_INTEREST_ACCRUED_DT
      FROM WORK.NG_LOAN_TXN t1
      WHERE t1.FC_FINANCIAL_CD NOT = 'TENDER';
%RUNQUIT(&job,&sub13);

PROC SORT DATA=WORK.ITEM_TXNS_PRE OUT=WORK.ITEM_TXNS DUPOUT=DUPS_TXN NODUPKEY;
BY FC_LOAN_ID FC_TRANSACTION_ID FC_FINANCIAL_DETAIL_CD FC_TRANSACTION_CD FC_FINANCIAL_CD FD_TRANSACTION_DTTM FN_FINANCIAL_DETAIL_AMT;
%RUNQUIT(&job,&sub13);

DATA NG_VOIDS;
	SET WORK.ITEM_TXNS;
	WHERE FC_TRANSACTION_ID_OTHER ^= '';
%RUNQUIT(&job,&sub13);

PROC SQL;
	CREATE TABLE NG_NO_VOIDS AS
		SELECT T1.*
	FROM WORK.ITEM_TXNS T1
	LEFT JOIN WORK.NG_VOIDS T2
		ON (T1.FC_TRANSACTION_ID=T2.FC_TRANSACTION_ID_OTHER)
	WHERE T2. FC_TRANSACTION_ID_OTHER IS MISSING 
	AND T1.FC_TRANSACTION_ID_OTHER IS MISSING;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.TOTAL_PAID AS 
   SELECT /* DEALNBR */
            (input(t1.FC_LOAN_ID,best32.)) AS DEALNBR, 
          /* TOTAL_PAID */
            (-ROUND(SUM(t1.FN_FINANCIAL_DETAIL_AMT),0.01)) AS TOTAL_PAID
      FROM WORK.NG_NO_VOIDS t1
      WHERE t1.FC_TRANSACTION_CD NOT IN 
           (
           'DEF',
           'ORIG',
           'DLNQ',
           'WRTOFF',
           'CHRGOFF',
           'ACCRUEDINT',
           'CURRENT',
           'RTNFEE',
           'REFI',
           'EXTFINCHG',
           'OVERPAID'
           )
      GROUP BY (CALCULATED DEALNBR);
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.NG_WO_LOANS AS 
   SELECT t1.FC_LOAN_ID, 
          /* DEALNBR */
            (input(t1.FC_LOAN_ID,best32.)) AS DEALNBR, 
          t1.FI_CUSTOMER_NUMBER, 
          t1.FC_FIRST_NAME, 
          t1.FC_LAST_NAME, 
          t1.FC_TRANSACTION_ID, 
          t1.FD_DUE_DATE, 
          t1.FC_DUE_TIME, 
          t1.FD_ORIGINATION_DATE, 
          t1.FN_APR, 
          t1.FN_DAILY_INTEREST_RATE, 
          t1.FI_CENTER_ID, 
          t1.FC_BUSINESS_UNIT_CD, 
          t1.FC_STATE_INITIAL, 
          t1.FI_FINANCIAL_RECORD_KEY_ID, 
          t1.FC_FINANCIAL_DETAIL_CD, 
          t1.FC_TRANSACTION_CD, 
          t1.FN_FINANCIAL_DETAIL_AMT, 
          t1.FD_TRANSACTION_DTTM, 
          t1.FC_REVERSAL_CD, 
          t1.FC_TRANSACTION_ID_OTHER, 
          t1.FC_UNIQUE_TRAN_NO, 
          t1.FC_LOAN_STATUS_CD_CURRENT, 
          t1.FC_LOAN_STATUS_CD_PREVIOUS, 
          t1.FC_CUST_INSTRUMENT_ABANBR, 
          t1.FC_CUST_INSTRUMENT_ACCT, 
          t1.FC_CUST_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ABANBR, 
          t1.FC_BANK_INSTRUMENT_ACCT, 
          t1.FC_BANK_INSTRUMENT_NBR, 
          t1.FC_BANK_INSTRUMENT_ACCT_CD, 
          t1.FI_EMPLOYEE_ID, 
          t1.FC_USER, 
          t1.FD_MODIFICATION_DTTM, 
          t1.FD_SCD_EFFECTIVE_DTTM_START, 
          t1.FC_PRODUCT_CD, 
          t1.FD_ACCOUNTING_DT, 
          t1.FC_FINANCIAL_CD, 
          t1.FC_ACCT_STATUS_CD_PREVIOUS, 
          t1.FC_ACCT_STATUS_CD_CURRENT, 
          t1.FC_COMMENT, 
          t1.FI_CENTER_ID_OTHER, 
          t1.FC_BUSINESS_UNIT_CD_OTHER, 
          t1.FC_REFINANCED_LOAN_ID, 
          t1.FD_RPP_START_DT, 
          t1.FD_RPP_END_DT, 
          t1.FD_RPP_NEXT_DUE_DT, 
          t1.FC_RPP_FLG, 
          t1.FC_PROCESS_LEDGER_DET_FLG, 
          t1.FD_INTEREST_ACCRUED_DT
      FROM SCODSFIN.MV_FINANCIAL_RECORD t1
      WHERE t1.FC_TRANSACTION_CD IN 
           (
           'CHRGOFF',
           'WRTOFF'
           )
      ORDER BY t1.FC_LOAN_ID,
               t1.FD_TRANSACTION_DTTM;
%RUNQUIT(&job,&sub13);

DATA NG_LOAN_WO;
	SET NG_WO_LOANS;
	BY FC_LOAN_ID;
	IF FIRST.FC_LOAN_ID;
%RUNQUIT(&job,&sub13);

DATA CLOSED_LOANS;
	SET WORK.NG_LOAN_TXN;
	BY FC_LOAN_ID FD_TRANSACTION_DTTM;
	DEALNBR = INPUT(FC_LOAN_ID,BEST32.);
	IF LAST.FC_LOAN_ID;
	KEEP FC_LOAN_ID FI_CUSTOMER_NUMBER FD_TRANSACTION_DTTM 
		 FN_FINANCIAL_DETAIL_AMT FC_FINANCIAL_DETAIL_CD 
		 FC_LOAN_STATUS_CD_CURRENT FC_FINANCIAL_CD DEALNBR;
	WHERE FC_LOAN_STATUS_CD_CURRENT = 'CLOSED';
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.NSF_FEEAMT AS 
   SELECT DISTINCT /* DEALNBR */
            (input(t1.FC_LOAN_ID,best32.)) AS DEALNBR, 
          /* NSFFEEAMT */
            (SUM(t1.FN_FINANCIAL_DETAIL_AMT)) AS NSFFEEAMT
      FROM SCODSFIN.MV_FINANCIAL_RECORD t1
      WHERE t1.FC_FINANCIAL_DETAIL_CD = 'NSFFEE' AND t1.FC_TRANSACTION_CD = 'RTNFEE' AND t1.FC_FINANCIAL_CD = 'ITEM'
      GROUP BY (CALCULATED DEALNBR);
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.PREVDEALNBR AS 
   SELECT DISTINCT /* DEALNBR */
                     (input(t1.FC_LOAN_ID,best32.)) AS DEALNBR, 
          /* PREVDEALNBR */
            (input(scan(t1.FC_REFINANCED_LOAN_ID,1,'.'),best32.)) AS PREVDEALNBR
      FROM SCODSFIN.MV_FINANCIAL_RECORD t1
      WHERE t1.FC_REFINANCED_LOAN_ID NOT IS MISSING;
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE NG_DAILY_UPDATE AS 
   SELECT /* PRODUCT */
            (CASE 
                 WHEN (substr(t11.FC_ABBREVIATION,3,1)) = "T" then "TITLE"
                 WHEN t11.FC_ABBREVIATION CONTAINS "M" THEN "INSTALLMENT" 
                 ELSE "PAYDAY" 
            END) AS PRODUCT, 
          t1.POS, 
          t1.INSTANCE, 
          t1.BRANDCD, 
          t1.COUNTRYCD, 
          t1.STATE, 
          t1.CITY, 
          t1.ZIP, 
          t1.ZONENBR, 
          t1.ZONENAME, 
          t1.REGIONNBR, 
          t1.REGIONRDO, 
          t1.DIVISIONNBR, 
          t1.DIVISIONDDO, 
          t1.BUSINESS_UNIT, 
          t1.LOCNBR, 
          t1.LOC_OPEN_DT, 
          t1.LOC_CLOSE_DT, 
          t1.DEAL_DT, 
          t1.DEAL_DTTM, 
          t1.DEALNBR, 
          t1.TITLE_DEALNBR, 
          t1.CUSTNBR, 
          t2.FE_CUST_SSN AS SSN, 
          t1.ADVAMT, 
          t1.FEEAMT, 
          /* INTERESTFEE */
            (CASE 
               WHEN . = t8.INTERESTFEE THEN 0
               ELSE t8.INTERESTFEE
            END) AS INTERESTFEE, 
          /* NSFFEEAMT */
            (CASE 
               WHEN . = t9.NSFFEEAMT THEN 0
               ELSE t9.NSFFEEAMT
            END) AS NSFFEEAMT, 
          /* LATEFEEAMT */
            (.) AS LATEFEEAMT, 
          /* OTHERFEEAMT */
            (.) AS OTHERFEEAMT, 
          /* WAIVEDFEEAMT */
            (.) AS WAIVEDFEEAMT, 
          /* REBATEAMT */
            (.) AS REBATEAMT, 
          /* COUPONAMT */
            (.) AS COUPONAMT, 
          /* TOTALPAID */
            (CASE 
               WHEN . = t7.TOTAL_PAID THEN 0
               ELSE t7.TOTAL_PAID
            END) AS TOTALPAID, 
          /* TOTAL_OWED */
            (CASE WHEN 
                      (CASE WHEN t1.DEALSTATUSCD IN('CLOSED', 'OVERPAID') THEN 'CLO'
                      WHEN t1.DEALSTATUSCD = 'DEFAULT' THEN 'DEF'
                      WHEN t1.DEALSTATUSCD IN('CURRENT', 'DELINQUENT', 'PENDING CLOSED') THEN 'OPN'
                      WHEN t1.DEALSTATUSCD IN('CHARGEOFF', 'WRITEOFF') THEN 'WO'
                      WHEN t1.DEALSTATUSCD = 'WAITING' THEN 'V'
            ELSE ''
            END) = 'V' THEN 0 ELSE t1.TOTAL_OWED END) AS TOTAL_OWED, 
          /* CONSECUTIVEDEALFLG */
            (.) AS CONSECUTIVEDEALFLG, 
          /* CASHAGNCNT */
            (.) AS CASHAGNCNT, 
          t1.DUEDT AS DUEDT, 
          t6.FD_TRANSACTION_DTTM AS DEALENDDT, 
          t4.FD_TRANSACTION_DTTM AS DEFAULTDT, 
          t5.FD_TRANSACTION_DTTM AS WRITEOFFDT, 
          /* DEPOSITDT */
            (''DT) FORMAT=DATETIME20. AS DEPOSITDT, 
          /* ACHSTATUSCD */
            ("") AS ACHSTATUSCD, 
          /* DEALSTATUSCD */
            (CASE WHEN t1.DEALSTATUSCD IN('CLOSED', 'OVERPAID') THEN 'CLO'
                      WHEN t1.DEALSTATUSCD = 'DEFAULT' THEN 'DEF'
                      WHEN t1.DEALSTATUSCD IN('CURRENT', 'DELINQUENT', 'PENDING CLOSED') THEN 'OPN'
                      WHEN t1.DEALSTATUSCD IN('CHARGEOFF', 'WRITEOFF') THEN 'WO'
                      WHEN t1.DEALSTATUSCD = 'WAITING' THEN 'V'
            ELSE ''
            END) AS DEALSTATUSCD, 
          /* CHECKSTATUSCD */
            ("") AS CHECKSTATUSCD, 
          /* COLLATERAL_TYPE */
            ("UNKNOWN") AS COLLATERAL_TYPE, 
          /* ETLDT */
            (""DT) FORMAT=DATETIME20. AS ETLDT, 
          t10.PREVDEALNBR, 
          t11.FC_ABBREVIATION AS PRODUCTCD, 
          /* ACHAUTHFLG */
            ("") AS ACHAUTHFLG, 
          t1.UPDATEDT
      FROM WORK.NG_LOAN_DATA t1
           LEFT JOIN WORK.SSN_NO_DUPS t2 ON (t1.CUSTNBR = t2.CUSTNBR)
           LEFT JOIN WORK.NG_LOAN_DEFAULT t4 ON (t1.DEALNBR = t4.DEALNBR)
           LEFT JOIN WORK.NG_LOAN_WO t5 ON (t1.DEALNBR = t5.DEALNBR)
           LEFT JOIN WORK.CLOSED_LOANS t6 ON (t1.DEALNBR = t6.DEALNBR)
           LEFT JOIN WORK.TOTAL_PAID t7 ON (t1.DEALNBR = t7.DEALNBR)
           LEFT JOIN WORK.INT_ILP t8 ON (t1.DEALNBR = t8.DEALNBR)
           LEFT JOIN WORK.NSF_FEEAMT t9 ON (t1.DEALNBR = t9.DEALNBR)
           LEFT JOIN WORK.PREVDEALNBR t10 ON (t1.DEALNBR = t10.DEALNBR)
           LEFT JOIN WORK.ACTIVE_PRODUCT_CD t11 ON (t1.FI_SUBCATEGORY_PRODUCT_ID = t11.FI_SUBCATEGORY_PRODUCT_ID);
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.DEAL_SUMMARY_TMP AS 
   SELECT t1.PRODUCT, 
          t1.POS, 
          t1.INSTANCE, 
          t1.BRANDCD, 
          t1.COUNTRYCD, 
          t1.STATE, 
          t1.CITY, 
          t1.ZIP, 
          t1.ZONENBR, 
          t1.ZONENAME, 
          t1.REGIONNBR, 
          t1.REGIONRDO, 
          t1.DIVISIONNBR, 
          t1.DIVISIONDDO, 
          t1.BUSINESS_UNIT, 
          t1.LOCNBR, 
          t1.LOC_OPEN_DT, 
          t1.LOC_CLOSE_DT, 
          t1.DEAL_DT, 
          t1.DEAL_DTTM, 
          t1.DEALNBR, 
          t1.TITLE_DEALNBR, 
          t1.CUSTNBR, 
          t1.SSN, 
          t1.ADVAMT, 
          t1.FEEAMT, 
          t1.NSFFEEAMT, 
          t1.LATEFEEAMT, 
          t1.OTHERFEEAMT, 
          t1.WAIVEDFEEAMT, 
          t1.REBATEAMT, 
          t1.COUPONAMT, 
          t1.TOTALPAID, 
          t1.TOTAL_OWED AS TOTALOWED, 
          t1.CONSECUTIVEDEALFLG, 
          t1.CASHAGNCNT, 
          t1.DUEDT, 
          t1.DEALENDDT, 
          t1.DEFAULTDT, 
          t1.WRITEOFFDT, 
          t1.DEPOSITDT, 
          t1.ACHSTATUSCD, 
          t1.DEALSTATUSCD, 
          t1.CHECKSTATUSCD, 
          t1.COLLATERAL_TYPE, 
		  '' AS CUSTCHECKNBR LENGTH=15 FORMAT=$15.,
          t1.ETLDT, 
          t1.PREVDEALNBR, 
          t1.PRODUCTCD, 
          t1.INTERESTFEE, 
          t1.ACHAUTHFLG, 
          t1.UPDATEDT,
		  . AS OUTSTANDING_DRAW_AMT,
		 '' AS UNDER_COLLATERALIZED LENGTH=1 FORMAT=$1.
      FROM NG_DAILY_UPDATE t1;
%RUNQUIT(&job,&sub13);

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
%RUNQUIT(&job,&sub13);

PROC SQL;
   CREATE TABLE WORK.DEAL_SUM_DAILY_UPDATE_PRE AS 
   SELECT t1.PRODUCT, 
          t1.POS, 
          t1.INSTANCE,
		  'STOREFRONT'					AS CHANNELCD,  
          t1.BRANDCD, 
          ''				AS BANKMODEL, 
          t1.COUNTRYCD, 
          t1.STATE, 
          t1.CITY, 
          t1.ZIP, 
          t1.ZONENBR, 
          t1.ZONENAME, 
          t1.REGIONNBR, 
          t1.REGIONRDO, 
          t1.DIVISIONNBR, 
          t1.DIVISIONDDO, 
          /* BUSINESS_UNIT */
            (compress(put(t1.BUSINESS_UNIT,BEST9.))) AS BUSINESS_UNIT, 
          t1.LOCNBR, 
          t1.LOC_OPEN_DT, 
          t1.LOC_CLOSE_DT, 
          /* DEAL_DT */
            (dhms(t1.DEAL_DT,0,0,0)) FORMAT=datetime20. AS DEAL_DT, 
          t1.DEAL_DTTM, 
          /* LAST_REPORT_DT */
            (dhms(today()-1,0,0,0)) FORMAT=datetime20. LABEL="LAST_REPORT_DT" AS LAST_REPORT_DT, 
          /* DEALNBR */
            (COMPRESS(PUT(DEALNBR,30.))) AS DEALNBR, 
          /* TITLE_DEALNBR */
            (COMPRESS(PUT((CASE 
               WHEN . = t1.TITLE_DEALNBR THEN 0
               ELSE t1.TITLE_DEALNBR
            END),30.))) AS TITLE_DEALNBR, 
          /* CUSTNBR */
            (COMPRESS(PUT(CUSTNBR,30.))) AS CUSTNBR, 
          t1.SSN,
		  ''	AS OMNINBR, 
          t1.ADVAMT, 
          t1.FEEAMT,
		  .			AS CUSTOMARYFEE,  
          t1.NSFFEEAMT, 
          t1.OTHERFEEAMT, 
          t1.LATEFEEAMT, 
          t1.WAIVEDFEEAMT, 
          t1.REBATEAMT, 
          t1.COUPONAMT, 
          t1.TOTALPAID, 
          t1.TOTALOWED, 
          t1.CONSECUTIVEDEALFLG, 
          t1.CASHAGNCNT, 
          t1.DUEDT, 
          t1.DEALENDDT, 
          t1.DEPOSITDT, 
          t1.WRITEOFFDT, 
          t1.DEFAULTDT, 
          t1.ACHSTATUSCD,
		  '' AS RETURNREASONCD LENGTH=5 FORMAT=$5.,
          t1.DEALSTATUSCD, 
          t1.CHECKSTATUSCD, 
          t1.COLLATERAL_TYPE, 
		  '' AS CUSTCHECKNBR LENGTH=15 FORMAT=$15.,
          t1.ETLDT, 
          t1.PREVDEALNBR, 
          t1.PRODUCTCD, 
          t1.INTERESTFEE, 
          t1.ACHAUTHFLG, 
          t1.UPDATEDT,
		  T1.OUTSTANDING_DRAW_AMT,
		  t1.UNDER_COLLATERALIZED
      FROM WORK.DEAL_SUMMARY_TMP t1;
%RUNQUIT(&job,&sub13);

DATA UNION_TABLE;
SET TMP_TBLS.UNION_TABLE ;
RUN;

PROC SQL;
	CREATE TABLE WORK.DEAL_SUM_DAILY_UPDATE_PRE AS
	SELECT *
	FROM UNION_TABLE
	UNION ALL CORR
	SELECT *
	FROM WORK.DEAL_SUM_DAILY_UPDATE_PRE
;
QUIT;

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
%RUNQUIT(&job,&sub13);

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\DEAL\NG",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\DEAL\NG\DIR2\",'G');
%RUNQUIT(&job,&sub13);

PROC SQL;
    INSERT INTO SKY.DEALSUM_DATAMART_NG (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM WORK.DEAL_SUM_DAILY_UPDATE_PRE;
%RUNQUIT(&job,&sub13);

/*UPLOAD NG*/
%INCLUDE "&DEAL_FILE_PATH.\DEALSUM_UPLOAD_NG.SAS";

