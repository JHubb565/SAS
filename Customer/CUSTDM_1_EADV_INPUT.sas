/***************************************************************************
Sub Program	: EADV Input
Main		: Customer Datamart
Purpose		: Get all customer information from eadvantage POS system
Programmer  : Spencer Hopkins
****************************************************************************/

/*
*****************************************************************************
*****************************************************************************
CHANGE LOG:
  DATE        	BY                 	COMMENTS  
=============================================================================
  01/08/2016	Spencer Hopkins		Add email address field
  02/01/2016    Spencer Hopkins     Revise phone number logic
									 (old: primary, secondary)
									 (new: home, mobile, work, other)
  02/01/2016    Spencer Hopkins     POS_CUSTNBR = character & CUSTNBR = numeric
  02/19/2016    Spencer Hopkins     Add DATASHARECD & DO_NOT_MAIL columns
  02/23/2016	Spencer Hopkins		Add additional error check functionality
  04/11/2016    Spencer Hopkins		Optimization - only copy necessary columns
  05/13/2016	Spencer Hopkins		Remove Custnbr (numeric) & rename
									 pos_custnbr to custnbr (varchar)
  07/13/2016	Spencer Hopkins		Include inactive addresses
  07/15/2016	Spencer Hopkins		Truncate table & upload EADV data to BIOR
									Add email at end to notify BI_DATA
  07/19/2016	Spencer Hopkins		Add language cd
  11/29/2017    Justin Hubbard	    Added Customer Marketing Aquisition Columns to EADV
  12/15/2017    Spencer Hopkins	    Added Customer Marketing Aquisition Columns to EADV
*****************************************************************************
*****************************************************************************
*/


/*
============================================================================= 
     INCLUDE ERROR_CHECK
=============================================================================
*/

%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\SKYNET REDESIGN\DATAMART REDESIGN\CUSTOMER\CUSTDM_ERROR_INPUTS.SAS";


/*
============================================================================= 
     SET UP LIBRARIES & MAKE COPIES OF PRODUCTION TABLES
=============================================================================
*/

/*	INCLUDE LIBNAMES SCRIPT */
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V3\SKYNET REDESIGN\TOP SECRET PROGRAM.SAS";


%LET DAYS_BACK = 5;


/*** EADVANTAGE ***/
DATA WORK.EADV_CUST_COPY (KEEP=HOMELOCNBR APPLICATIONDT UPDATEDT CUSTNBR SSN BUSINESSUNITCD FIRSTNM LASTNM MIDDLENM DRIVERSLICST DRIVERSLICNBR DOB CUSTSTATUSCD DATASHARECD);;		
	SET EADV.CUSTOMER;
	WHERE UPDATEDT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		OR ETLDT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		OR CREATEDT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		OR APPUPDATEDT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		OR INFOUPDATEDT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		OR LASTACTIVITYDT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00);	
%RUNQUIT(&job,&sub1);
	
DATA WORK.EADV_CUSTADDRESS_COPY;		
	SET EADV.CUSTOMERADDRESS(KEEP=CUSTNBR ADDRESSLN APARTMENTNBR CITY STATECD POSTALCD COUNTRYCD ACTIVEFLG ADDRESSCD);
%RUNQUIT(&job,&sub1);		
		
DATA WORK.EADV_CUSTPHONE_COPY;		
	SET EADV.CUSTOMERPHONE
		(KEEP=CUSTNBR SEQNBR PHONENBR PHONECD UPDATEDT);
%RUNQUIT(&job,&sub1);		
		
DATA WORK.EADV_CUSTBANKACCT_COPY;		
	SET EADV.CUSTOMERBANKACCOUNT
		(KEEP=CUSTNBR ACCOUNTNBR ABANBR UPDATEDT);
%RUNQUIT(&job,&sub1);		

DATA WORK.EADV_CUSTINCOME_COPY;		
	SET EADV.CUSTOMERINCOME
		(KEEP=CUSTNBR PAYFREQCD INCOMEAMT);	
%RUNQUIT(&job,&sub1);		
	
DATA WORK.EADV_CUSTOMERSTATUSCODE_COPY;
	SET EADV.CUSTOMERSTATUSCODE;
%RUNQUIT(&job,&sub1);

DATA WORK.EADV_CUSTOMEROTHERINFO;
	SET EADV.CUSTOMEROTHERINFO
		(KEEP=CUSTNBR EMAILADDRESS LANGUAGECD);
%RUNQUIT(&job,&sub1);

DATA WORK.EADV_DATASHARECODE;
	SET EADV.DATASHARECODE;
%RUNQUIT(&job,&sub1);

/*** LOCATION SPECIFIC INFO ***/
DATA WORK.EDW_D_LOC_COPY;		
	SET EDW.D_LOCATION
		(KEEP=LOC_NBR BRND_CD CTRY_CD ST_PVC_CD ADR_CITY_NM MAIL_CD HIER_ZONE_NBR HIER_ZONE_NM HIER_RGN_NBR HIER_RDO_NM HIER_DIV_NBR HIER_DDO_NM LOC_NM OPEN_DT CLS_DT);	
%RUNQUIT(&job,&sub1);		

DATA WORK.SKYNET_LOCATION_LATLONG_COPY;
	SET SKYNET.LOCATION_LATLONG
		(KEEP=LOCNBR LATITUDE LONGITUDE);
%RUNQUIT(&job,&sub1);


/*
============================================================================= 
     CUSTOMER ADDRESS INFORMATION
=============================================================================
*/

/* ONLY KEEP ACTIVE MAILING ADDRESSES */
PROC SQL;
	CREATE TABLE WORK.EADV_CUSTADDRESS_FINAL AS 
	SELECT 
		CUSTNBR
		,ADDRESSLN
		,APARTMENTNBR
		,CITY
		,STATECD
		,POSTALCD
		,COUNTRYCD
	FROM WORK.EADV_CUSTADDRESS_COPY
	WHERE ADDRESSCD='M'
	ORDER BY CUSTNBR
	;
%RUNQUIT(&job,&sub1);


/*
============================================================================= 
     CUSTOMER PHONE INFORMATION
=============================================================================
*/

/* SORT PHONE NUMBERS BY CUSTOMER #, PHONE CODE & SEQUENCE # */
PROC SORT DATA=WORK.EADV_CUSTPHONE_COPY;
	BY CUSTNBR PHONECD SEQNBR;
%RUNQUIT(&job,&sub1);


/* CAPTURE OBSERVATIONS WHERE SEQ # = 1 */
DATA WORK.EADV_CUSTPHONE_SORTED;
	SET WORK.EADV_CUSTPHONE_COPY;
	BY CUSTNBR PHONECD SEQNBR;
	IF FIRST.PHONECD;
/*	KEEP CUSTNBR SEQNBR PHONENBR PHONECD UPDATEDT;*/
%RUNQUIT(&job,&sub1);

/* RANK PHONE #S: IF HOME, CELL OR WORK THEN 1 - ELSE 2 */
DATA WORK.EADV_CUSTPHONE_RANK;
	SET WORK.EADV_CUSTPHONE_SORTED;
	IF PHONECD IN ('H','W','C') THEN PHONECD_SCORE = 1;
	ELSE PHONECD_SCORE = 2;
%RUNQUIT(&job,&sub1);

/* SORT BY CUSTOMER #, PHONE SCORE AND UPDATE DATE */
PROC SORT DATA=WORK.EADV_CUSTPHONE_RANK;
	BY CUSTNBR PHONECD_SCORE UPDATEDT;
%RUNQUIT(&job,&sub1);

/* KEEP THE MOST RECENT PHONE SCORE BASED ON UPDATE DATE  */
DATA WORK.EADV_CUSTPHONE_RECENT;
	SET WORK.EADV_CUSTPHONE_RANK;
	BY CUSTNBR PHONECD_SCORE UPDATEDT;
	IF PHONECD_SCORE = 1 THEN OUTPUT;
	ELSE IF PHONECD_SCORE = 2 AND LAST.PHONECD_SCORE = 1 THEN OUTPUT;
%RUNQUIT(&job,&sub1);

/* SELF JOIN PHONE TABLE TO CREATE COLUMNS FOR HOME#, CELL#, WORK#, OTHER# & OTHER PHONE CODE */
PROC SQL;
	CREATE TABLE WORK.EADV_CUSTPHONE_FINAL AS
	SELECT 
	    MAIN.CUSTNBR
	    ,HOME.PHONENBR      AS HOME_PHONENBR
	    ,MOBILE.PHONENBR    AS MOBILE_PHONENBR
	    ,WORKNUM.PHONENBR   AS WORK_PHONENBR
	    ,OTHERNUM.PHONENBR	AS OTHER_PHONENBR
	    ,OTHERNUM.PHONECD   AS OTHER_PHONECD
	FROM 
	    (SELECT DISTINCT CUSTNBR FROM WORK.EADV_CUSTPHONE_RECENT) MAIN    
	LEFT JOIN WORK.EADV_CUSTPHONE_RECENT   HOME
	    ON (MAIN.CUSTNBR = HOME.CUSTNBR
	        AND HOME.PHONECD = 'H')
	LEFT JOIN WORK.EADV_CUSTPHONE_RECENT   MOBILE
	    ON (MAIN.CUSTNBR = MOBILE.CUSTNBR
	        AND MOBILE.PHONECD = 'C')
	LEFT JOIN WORK.EADV_CUSTPHONE_RECENT   WORKNUM
	    ON (MAIN.CUSTNBR = WORKNUM.CUSTNBR
	        AND WORKNUM.PHONECD = 'W')
	LEFT JOIN WORK.EADV_CUSTPHONE_RECENT   OTHERNUM
	    ON (MAIN.CUSTNBR = OTHERNUM.CUSTNBR
	        AND OTHERNUM.PHONECD NOT IN ( 'H' ,'C', 'W'))
	;
%RUNQUIT(&job,&sub1);


/*
============================================================================= 
     CUSTOMER BANK ACCOUNT INFORMATION
=============================================================================
*/
	
/* SORT CUSTOMER BANK ACCOUNTS BY UPDATED DATE */		
PROC SORT DATA=WORK.EADV_CUSTBANKACCT_COPY
		OUT=WORK.EADV_CUSTBANK_SORTED;	
	BY CUSTNBR UPDATEDT;	
%RUNQUIT(&job,&sub1);		
		
/* KEEP MOST RECENT BANK ACCOUNT */		
DATA WORK.EADV_CUSTBANK_FINAL;		
	SET WORK.EADV_CUSTBANK_SORTED;	
	BY CUSTNBR UPDATEDT;	
	IF LAST.CUSTNBR;	
%RUNQUIT(&job,&sub1);		


/*
============================================================================= 
     CUSTOMER INCOME INFORMATION
=============================================================================
*/
	
/* CALCULATE GMI FOR EACH INCOME BY PAY FREQUENCY - INLUDE OTHER WITH MONTHLY */		
PROC SQL;		
	CREATE TABLE WORK.EADV_CUSTINCOME_GMI AS	
	SELECT CUSTNBR,	
		CASE WHEN PAYFREQCD = 'BI' THEN (INCOMEAMT*26)/12
			 WHEN PAYFREQCD = 'BIM' THEN INCOMEAMT*2 
			 WHEN PAYFREQCD IN ('MON', 'OTH') THEN INCOMEAMT
			 WHEN PAYFREQCD = 'WK' THEN (INCOMEAMT*52)/12 
			 END AS GMI_PARTIAL
	FROM WORK.EADV_CUSTINCOME_COPY	
	ORDER BY CUSTNBR
	;	
%RUNQUIT(&job,&sub1);
		
/* AGGREGATE GMI FOR EACH CUSTOMER*/
PROC SQL;
	CREATE TABLE WORK.EADV_CUSTINCOME_FINAL AS
	SELECT CUSTNBR
			,ROUND(SUM(GMI_PARTIAL),.01) AS GMI
	FROM WORK.EADV_CUSTINCOME_GMI
	GROUP BY CUSTNBR
	;
%RUNQUIT(&job,&sub1);

/*
============================================================================= 
     CUSTOMER MARKETING AQUISISTION
=============================================================================
*/

PROC SQL;
	CREATE TABLE MARKETING_AQUISITION AS
	SELECT INSTANCE
		  ,SSN
		  ,CUSTNBR
		  ,(UPCASE(MARKETING_SOURCE))	AS MARKETING_SOURCE 
		  ,MARKETING_SOURCE_DATE
	FROM BIOR.CUSTOMER_AQUISITION
	WHERE INSTANCE = 'EAPROD1'
	ORDER BY SSN
			,CUSTNBR
			,MARKETING_SOURCE_DATE
;
%RUNQUIT(&job,&sub1);

/*GET MOST RECENT MARKETING SOURCE DATE*/

DATA MOST_RECENT_AQU;
	SET MARKETING_AQUISITION;
	BY SSN
	   CUSTNBR
	   MARKETING_SOURCE_DATE;
	IF LAST.CUSTNBR THEN OUTPUT MOST_RECENT_AQU;
%RUNQUIT(&job,&sub1);

	
/*
============================================================================= 
     PUTTING IT ALL TOGETHER
=============================================================================
*/

PROC SQL;
	CREATE TABLE CUSTOMER_DATAMART_EADV_PRE AS
		SELECT	
			'EADVANTAGE' AS POS length=15 format=$15.
			,'EAPROD1' AS INSTANCE length=15 format=$15.
			,'STOREFRONT'		AS CHANNELCD
			,LOC.BRND_CD AS BRANDCD
			,LOC.CTRY_CD AS COUNTRYCD
			,LOC.ST_PVC_CD AS STATE
			,LOC.ADR_CITY_NM AS CITY
			,LOC.MAIL_CD AS ZIP
			,LOC.HIER_ZONE_NBR AS ZONENBR
			,LOC.HIER_ZONE_NM AS ZONENAME 
			,LOC.HIER_RGN_NBR AS REGIONNBR
			,LOC.HIER_RDO_NM AS REGIONRDO 
			,LOC.HIER_DIV_NBR AS DIVISIONNBR
			,LOC.HIER_DDO_NM AS DIVISIONDDO 
			,C.HOMELOCNBR AS LOCNBR format 16.
			,LOC.LOC_NM AS LOCATION_NAME
			,LOC.OPEN_DT AS LOC_OPEN_DT
			,LOC.CLS_DT AS LOC_CLOSE_DT
			,C.APPLICATIONDT 
			,DHMS(TODAY()-1,0,0,0) as LAST_REPORT_DT format DATETIME20.
			,LATI.LATITUDE AS LATITUDE
			,LATI.LONGITUDE AS LONGITUDE
			,PUT(C.CUSTNBR,20. -l) AS CUSTNBR
			,''		AS OMNINBR
	/*		,C.CUSTNBR AS CUSTNBR*/
			,C.SSN
			,C.BUSINESSUNITCD		
			,propcase(STATUS.DESCRIPTION) as STND_CUSTOMER_STATUS length= 35 format=$35.
			,propcase(C.FIRSTNM) as FIRSTNM length= 35 format=$35.
			,propcase(C.LASTNM) as LASTNM length= 35 format=$35.
			,propcase(C.MIDDLENM) as MIDDLENM length= 35 format=$35.
			,C.DRIVERSLICST length=2 format=$2.
			,C.DRIVERSLICNBR length=50 format=$50.
			,C.DOB
			,propcase(ADD.ADDRESSLN) AS ADDRESS_LN1 length= 60 format=$60.
			,propcase(ADD.APARTMENTNBR) as ADDRESS_LN2 length= 60 format=$60.
			,propcase(ADD.CITY) AS ADDRESS_CITY length= 60 format=$60.
			,upcase(ADD.STATECD) AS ADDRESS_STATE length= 2 format=$2.
			,ADD.POSTALCD AS ADDRESS_ZIP length= 9 format=$9.
			,upcase(ADD.COUNTRYCD) AS ADDRESS_COUNTRY length= 3 format=$3.
			,PHONE.HOME_PHONENBR   		length=10 format=$10.
			,PHONE.MOBILE_PHONENBR 		length=10 format=$10.
			,PHONE.WORK_PHONENBR   		length=10 format=$10.
			,PHONE.OTHER_PHONENBR   	length=10 format=$10.
			,PHONE.OTHER_PHONECD 		length=5 format=$5.
			,OTHER.EMAILADDRESS 		length=100 format=$100.
			,BANK.ABANBR AS BANK_ABANBR length=9 format=$9.
			,BANK.ACCOUNTNBR AS BANK_ACCOUNTNBR length=20 format=$20.
			,INCOME.GMI
			,DSC.DESCRIPTION AS DATASHARECD length=35 format=$35.
			,'' AS DO_NOT_MAIL length=1 format=$1.
			,OTHER.LANGUAGECD 			length=2 format=$2.
			,C.UPDATEDT
		FROM WORK.EADV_CUST_COPY C
			LEFT JOIN WORK.EADV_CUSTADDRESS_FINAL ADD ON C.CUSTNBR = ADD.CUSTNBR
			LEFT JOIN WORK.EADV_CUSTPHONE_FINAL PHONE ON C.CUSTNBR = PHONE.CUSTNBR
			LEFT JOIN WORK.EADV_CUSTOMEROTHERINFO OTHER ON C.CUSTNBR = OTHER.CUSTNBR
			LEFT JOIN WORK.EADV_CUSTBANK_FINAL BANK ON C.CUSTNBR = BANK.CUSTNBR
			LEFT JOIN WORK.EADV_CUSTINCOME_FINAL INCOME ON C.CUSTNBR = INCOME.CUSTNBR
			LEFT JOIN WORK.EDW_D_LOC_COPY LOC ON C.HOMELOCNBR = LOC.LOC_NBR
			LEFT JOIN WORK.SKYNET_LOCATION_LATLONG_COPY LATI ON C.HOMELOCNBR = LATI.LOCNBR
			LEFT JOIN WORK.EADV_CUSTOMERSTATUSCODE_COPY STATUS ON C.CUSTSTATUSCD = STATUS.CUSTSTATUSCD
			LEFT JOIN WORK.EADV_DATASHARECODE DSC ON C.DATASHARECD = DSC.DATASHARECD
	;
%RUNQUIT(&job,&sub1);

PROC SQL;
	CREATE TABLE CUSTOMER_DATAMART_EADV AS
	SELECT A.*
		  ,B.MARKETING_SOURCE
		  ,B.MARKETING_SOURCE_DATE
	FROM CUSTOMER_DATAMART_EADV_PRE A
	LEFT JOIN MOST_RECENT_AQU B
		ON (A.INSTANCE = B.INSTANCE
		AND A.SSN = B.SSN
		AND A.CUSTNBR = B.CUSTNBR)
	;
%RUNQUIT(&job,&sub1);

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
%RUNQUIT(&JOB,&SUB9);

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;


/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
    CALL SYMPUTX('TIMESTAMP',CATX('_',PUT(TODAY(),CHECKTHEDAY.),PUT(TIME(),CHECKTHETIME.)),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\CUSTOMER\EADV",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\CUSTOMER\EADV\DIR2\",'G');
%RUNQUIT(&JOB,&SUB9);

PROC SQL;
    INSERT INTO SKY.CUSTOMER_DATAMART_EADV (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM CUSTOMER_DATAMART_EADV
	WHERE STATE NOT IN ('TN');
%RUNQUIT(&JOB,&SUB9);

/*UPLOAD EADV*/
%INCLUDE "&CUST_FILE_PATH.\CUSTDM_UPLOAD_EADV.SAS";
