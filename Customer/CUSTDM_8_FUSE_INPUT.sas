
/*
============================================================================= 
     INCLUDE ERROR_CHECK
=============================================================================
*/
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\SKYNET REDESIGN\DATAMART REDESIGN\CUSTOMER\CUSTDM_ERROR_INPUTS.SAS";


/*
============================================================================= 
     SET UP LIBRARIES & MAKE COPIES OF PRODUCTION TABLES
=============================================================================
*/

/*	INCLUDE LIBNAMES SCRIPT */
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\SHOPKINS\LIBNAMES.SAS";
%INCLUDE "\\CSSSASAPP\CADA\SAS SOURCE CODE\PRODUCTION\SERVICE ACCOUNTS\SVC_SASUSER.SAS";
LIBNAME COREDB postgres server=cltedbprod1 port=5444 user=&EDBUSER. password=&EDBPASSWORD. db='coredb' schema='sc_core';



%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V3\SKYNET REDESIGN\TOP SECRET PROGRAM.SAS";


%LET DAYS_BACK = 5;


DATA _NULL_;
CALL SYMPUTX('DAYS',DHMS(INTNX('DAY',TODAY(),-30,'B'),00,00,00),'G');
%LET _SYSTEM = 'QFUND_X';
RUN;

%PUT &_SYSTEM;

/*
============================================================================= 
     GET BASE INFORMATION FROM CUSTOMER_MASTER TABLES
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.CUST_BASE AS
	SELECT
		T1.SOURCE_SYSTEM_CD AS POS,
		T1.SOURCE_SYSTEM_CD AS INSTANCE,
		T1.CENTER_NBR AS LOCNBR,
		T1.APPLICATION_DTTM AS APPLICATIONDT,
		DHMS(TODAY()-1,0,0,0) as LAST_REPORT_DT format DATETIME20.,
		T1.SOURCE_CUSTOMER_ID AS CUSTNBR,
		T1.OMNI_CUSTOMER_ID AS OMNINBR,
		T2.SSN_ENCRYPTED AS SSN,
		T1.CUSTOMER_STATUS_CD AS STND_CUSTOMER_STATUS,
		UPPER(T1.NAME_FIRST) AS FIRSTNM,
		CATX(' ',UPPER(T1.NAME_LAST_1),UPPER(T1.NAME_LAST_2)) AS LASTNM,
		T1.NAME_MIDDLE AS MIDDLENM,
		T1.DOB AS DOB,
		T1.CAN_SHARE_DATA_CD AS DATASHARECD,
		T1.SOURCE_MODIFIED_DTTM AS UPDATEDT,
		T1.CAN_MARKET_FLG
	FROM COREDB.CUSTOMER_MASTER T1
		LEFT JOIN COREDB.CUSTOMER_SSN T2 ON (T1.SOURCE_SYSTEM_CD = T2.SOURCE_SYSTEM_CD AND T1.SOURCE_CUSTOMER_ID = T2.SOURCE_CUSTOMER_ID)
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     GET LOCATION INFORMATION AND SKYNET COLUMNS
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.CENTER_INFO AS
	SELECT
		T1.CENTER_NBR,
		T1.BRAND_CD AS BRANDCD,
		T2.COUNTRY_CD AS COUNTRYCD,
		T2.STATE_CD AS STATE,
		T2.ADDRESS_CITY AS CITY,
		T2.POSTAL_CD AS ZIP,
		T1.BUSINESS_UNIT_CD AS BUSINESSUNITCD,
		DATEPART(T7.OPEN_DT) AS LOC_OPEN_DT FORMAT = DATE9.,
		DATEPART(T7.CLS_DT) AS LOC_CLOSE_DT FORMAT = DATE9.,
		T3.ZONE_CD AS ZONENBR,
		UPPER(T4.NAME_LAST) AS ZONENAME,
		T3.REGION_CD AS REGIONNBR,
		CASE
			WHEN T5.NAME_LAST = 'OPEN' THEN 'OPEN'
			ELSE CATX(' ',UPPER(T5.NAME_FIRST),UPPER(T5.NAME_LAST)) 
		END AS REGIONRDO,
		T3.DIVISION_CD AS DIVISIONNBR,
		CASE
			WHEN T6.NAME_LAST = 'OPEN' THEN 'OPEN'
			ELSE CATX(' ',UPPER(T6.NAME_FIRST),UPPER(T6.NAME_LAST)) 
		END AS DIVISIONDDO,
		T8.GEOCODE_LAT AS LATITUDE,
		T8.GEOCODE_LONG AS LONGITUDE,
		T9.LOCATION_NAME
		FROM COREDB.CENTER_MASTER T1
			LEFT JOIN COREDB.LOCATION_ADDRESS T2 ON (T1.LOCATION_ID = T2.LOCATION_ID)
			LEFT JOIN COREDB.hierarchy T3 ON (T1.CENTER_NBR = T3.CENTER_NBR)
			LEFT JOIN COREDB.ZONE_CODE T4 ON (T3.ZONE_CD = T4.ZONE_CD)
			LEFT JOIN COREDB.REGION_CODE T5 ON (T3.ZONE_CD = T5.ZONE_CD AND T3.REGION_CD = T5.REGION_CD)
			LEFT JOIN COREDB.DIVISION_CODE T6 ON (T3.ZONE_CD = T6.ZONE_CD AND T3.REGION_CD = T6.REGION_CD AND T3.DIVISION_CD = T6.DIVISION_CD)
			LEFT JOIN EDW.D_LOCATION T7 ON (T1.CENTER_NBR = T7.LOC_NBR)
			LEFT JOIN COREDB.LOCATION_ADDRESS_GEOCODE T8 ON (T1.LOCATION_ID = T8.LOCATION_ID)
			LEFT JOIN COREDB.LOCATION_MASTER T9 ON (T1.LOCATION_ID = T9.LOCATION_ID)
/*		WHERE T1.CENTER_NBR IN (SELECT LOCNBR FROM WORK.CUST_BASE);*/;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     CUSTOMER DRIVER LICSENSE INFORMATION
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.CUST_IDENT_PRE AS
	SELECT
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_CUSTOMER_ID,
		T1.STATE_CD AS DRIVERSLICST,
		T1.IDENTITY_NBR AS DRIVERSLICNBR,
		T1.SOURCE_MODIFIED_DTTM
	FROM COREDB.CUSTOMER_IDENTITY T1
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM
	AND T1.SOURCE_CUSTOMER_ID IN (SELECT CUSTNBR FROM WORK.CUST_BASE)
	AND T1.IDENTITY_CD = 'DRIVERS_LICENSE';
%RUNQUIT(&JOB,&SUB15);

PROC SORT DATA=WORK.CUST_IDENT_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.CUST_IDENT;
	SET WORK.CUST_IDENT_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
	IF LAST.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     CUSTOMER ADDRESS (Mailing)
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.CUST_ADDRESS AS
	SELECT 
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_CUSTOMER_ID,
		UPPER(T1.ADDRESS_LINE_1) AS ADDRESS_LN1,
		CATX(' ',UPPER(T1.ADDRESS_LINE_2),UPPER(T1.ADDRESS_APT_NBR)) AS ADDRESS_LN2,
		T1.ADDRESS_CITY,
		T1.STATE_CD AS ADDRESS_STATE,
		T1.POSTAL_CD AS ADDRESS_ZIP,
		T1.COUNTRY_CD AS ADDRESS_COUNTRY,
		T1.CAN_MARKET_FLG
	FROM COREDB.CUSTOMER_ADDRESS T1
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM
	AND T1.SOURCE_CUSTOMER_ID IN (SELECT CUSTNBR FROM WORK.CUST_BASE)
	AND ACTIVE_FLG = 'Y'
	AND ADDRESS_CD = 'HOME';
%RUNQUIT(&JOB,&SUB15);

/*DE DUPS JUST IN CASE*/
PROC SORT DATA=WORK.CUST_ADDRESS nodupkey dupout=work.dup;
	BY SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     PHONE NBR INFORMATION
=============================================================================
*/
/*GRABS THE ACTIVE HOME, CELL, OTHER NUMBERS*/
DATA WORK.HOME_PHONE_PRE WORK.MOBILE_PHONE_PRE WORK.OTHER_PHONE_PRE WORK.WORK_PHONE_PRE WORK.EMAIL;
	SET COREDB.CUSTOMER_CONTACT(Keep= SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID CONTACT_CD CONTACT_NBR SOURCE_MODIFIED_DTTM ACTIVE_FLG CONTACT_ADDR);
	WHERE SOURCE_SYSTEM_CD = &_SYSTEM;
	IF CONTACT_CD = 'HOME' THEN OUTPUT WORK.HOME_PHONE_PRE;
	IF CONTACT_CD = 'CELL' THEN OUTPUT WORK.MOBILE_PHONE_PRE;
	IF CONTACT_CD = 'OTHER' THEN OUTPUT WORK.OTHER_PHONE_PRE;
	IF CONTACT_CD = 'WORK' THEN OUTPUT WORK.WORK_PHONE_PRE;
	IF CONTACT_CD = 'EMAIL' THEN OUTPUT WORK.EMAIL;
%RUNQUIT(&JOB,&SUB15);

/*SORTS BY SOURCE MODIFIED DTTM SO WE ARE GRAB THE MOST RECENTLY UPDATED NUMBER FOR EACH CATEGORY*/
PROC SORT DATA=WORK.HOME_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
%RUNQUIT(&JOB,&SUB15);

PROC SORT DATA=WORK.MOBILE_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
%RUNQUIT(&JOB,&SUB15);

PROC SORT DATA=WORK.OTHER_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
%RUNQUIT(&JOB,&SUB15);

PROC SORT DATA=WORK.WORK_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.HOME_PHONE;
	SET WORK.HOME_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
	IF LAST.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.MOBILE_PHONE;
	SET WORK.MOBILE_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
	IF LAST.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.OTHER_PHONE;
	SET WORK.OTHER_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
	IF LAST.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.WORK_PHONE;
	SET WORK.WORK_PHONE_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
	IF LAST.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     CUSTOMER EMAIL
=============================================================================
*/
/*PROC SQL;*/
/*CREATE TABLE WORK.EMAIL AS*/
/*	SELECT*/
/*		T1.SOURCE_SYSTEM_CD,*/
/*		T1.SOURCE_CUSTOMER_ID,*/
/*		T1.CONTACT_ADDR AS EMAILADDRESS*/
/*	FROM COREDB.CUSTOMER_CONTACT T1*/
/*	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM*/
/*	AND T1.SOURCE_CUSTOMER_ID IN (SELECT CUSTNBR FROM WORK.CUST_BASE)*/
/*	WHERE T1.CONTACT_CD = 'EMAIL'*/
/*	AND T1.ACTIVE_FLG = 'Y';*/
/*QUIT;*/

/*
============================================================================= 
     INCOME / GMI
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.INCOME_AMT AS
	SELECT
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_CUSTOMER_ID,
		T1.PAY_FREQUENCY_CD,
		CASE
			WHEN T1.INCOME_AMT_ANNUAL_GROSS NE 0 THEN T1.INCOME_AMT_ANNUAL_GROSS
			WHEN T1.PAY_FREQUENCY_CD = 'BIWEEKLY' AND T1.INCOME_AMT_ANNUAL_GROSS = 0 THEN (T1.INCOME_AMT_PERIOD_NET*26)/12
			WHEN T1.PAY_FREQUENCY_CD = 'BIMONTHLY' AND T1.INCOME_AMT_ANNUAL_GROSS = 0 THEN (T1.INCOME_AMT_PERIOD_NET*2)
			WHEN T1.PAY_FREQUENCY_CD IN ('MONTHLY','OTHER') AND T1.INCOME_AMT_ANNUAL_GROSS = 0 THEN (T1.INCOME_AMT_PERIOD_NET)
			WHEN T1.PAY_FREQUENCY_CD = 'WEEKLY' AND T1.INCOME_AMT_ANNUAL_GROSS = 0 THEN (T1.INCOME_AMT_PERIOD_NET*52)/12
		END AS GMI_PARTIAL
	FROM COREDB.CUSTOMER_INCOME T1
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM
	AND T1.SOURCE_CUSTOMER_ID IN (SELECT CUSTNBR FROM WORK.CUST_BASE)
	AND T1.SOURCE_DELETED_FLG = 'N'
	ORDER BY T1.SOURCE_SYSTEM_CD, T1.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

/*SUMS UP MULTIPLE INCOMES*/
PROC SQL;
CREATE TABLE WORK.GMI AS
	SELECT 
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_CUSTOMER_ID,
		ROUND(SUM(GMI_PARTIAL),.01) AS GMI
	FROM WORK.INCOME_AMT T1
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM
	AND T1.SOURCE_CUSTOMER_ID IN (SELECT CUSTNBR FROM WORK.CUST_BASE)
	GROUP BY T1.SOURCE_SYSTEM_CD, T1.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     BANK ACCOUNT INFOMRATION
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.CUST_BANKING_PRE AS
	SELECT
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_CUSTOMER_ID,
		T1.BANK_ABA_NBR AS BANK_ABANBR,
		T1.BANK_ACCT_NBR AS BANK_ACCOUNTNBR,
		T1.SOURCE_MODIFIED_DTTM
	FROM COREDB.CUSTOMER_BANKING T1
	WHERE SOURCE_DELETED_FLG = 'N'
	AND T1.SOURCE_SYSTEM_CD = &_SYSTEM
	AND T1.SOURCE_CUSTOMER_ID IN (SELECT CUSTNBR FROM WORK.CUST_BASE);
%RUNQUIT(&JOB,&SUB15);

/*SORTS TO GET MOST RECENTLY UPDATED BANKING INFORMATION*/
PROC SORT DATA=WORK.CUST_BANKING_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.CUST_BANKING;
	SET WORK.CUST_BANKING_PRE;
	BY SOURCE_SYSTEM_CD SOURCE_CUSTOMER_ID SOURCE_MODIFIED_DTTM;
	IF LAST.SOURCE_CUSTOMER_ID;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     BRINGS EVERYTHING TOGETHER AND FORMATS
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.CUSTOMER_DATAMART_PRE AS
	SELECT
		CASE
			WHEN T1.POS = 'EADVANTAGE' THEN 'EAPROD1'
			WHEN T1.POS = 'LOANGUARD' THEN 'ONLINE'
			WHEN T1.POS IN ('QFUND_1', 'QFUND_2', 'QFUND_3', 'QFUND_4','QFUND_5','QFUND_X') THEN 'QFUND'
			ELSE T1.POS
		END AS POS length=15 format=$15.,
		CASE
			WHEN T1.INSTANCE = 'EADVANTAGE' THEN 'EAPROD1'
			WHEN T1.INSTANCE = 'LOANGUARD' THEN 'AANET'
			WHEN T1.INSTANCE = 'QFUND_1' THEN 'QFUND1'
			WHEN T1.INSTANCE = 'QFUND_2' THEN 'QFUND2'
			WHEN T1.INSTANCE = 'QFUND_3' THEN 'QFUND3'
			WHEN T1.INSTANCE = 'QFUND_4' THEN 'QFUND4'
			WHEN T1.INSTANCE = 'QFUND_5' THEN 'QFUND5'
			WHEN T1.INSTANCE = 'QFUND_X' THEN 'FUSE'
			WHEN T1.INSTANCE = 'NEXTGEN' THEN 'NG'
			WHEN T1.INSTANCE = 'OMNI' THEN 'OMNI'
		END AS INSTANCE length=15 format=$15.,
		CASE
			WHEN LOCNBR = 6874 THEN 'ONLINE'
			ELSE 'STOREFRONT'
		END AS CHANNELCD,
		T2.BRANDCD length=8 format=$8.,
		T2.COUNTRYCD length=10 format=$10.,
		T2.STATE length=2 format=$2.,
		T2.CITY length=50 format=$50.,
		T2.ZIP length=15 format=$15.,
		INPUT(T2.ZONENBR,16.) AS ZONENBR,
		T2.ZONENAME length=100 format=$100.,
		INPUT(T2.REGIONNBR,16.) AS REGIONNBR,
		T2.REGIONRDO length=100 format=$100.,
		INPUT(T2.DIVISIONNBR,16.) AS DIVISIONNBR,
		T2.DIVISIONDDO length=100 format=$100.,
		T1.LOCNBR FORMAT = 16.,
		T2.LOCATION_NAME length=100 format=$100.,
		T2.LOC_OPEN_DT,
		T2.LOC_CLOSE_DT,
		T1.APPLICATIONDT,
		T1.LAST_REPORT_DT,
		INPUT(T2.LATITUDE,30.) AS LATITUDE,
		INPUT(T2.LONGITUDE,30.) AS LONGITUDE,
		T1.CUSTNBR length=20 format=$20.,
		PUT(T1.OMNINBR,30.) AS OMNINBR,
		T1.SSN length=9 format=$9.,
		T2.BUSINESSUNITCD length=5 format=$5.,
		T1.STND_CUSTOMER_STATUS length=35 format=$35.,
		T1.FIRSTNM length=35 format=$35.,
		T1.LASTNM length=35 format=$35.,
		T1.MIDDLENM length=35 format=$35.,
		T3.DRIVERSLICST length=2 format=$2.,
		T3.DRIVERSLICNBR length=50 format=$50.,
		T1.DOB,
		T4.ADDRESS_LN1 length=60 format=$60.,
		T4.ADDRESS_LN2 length=60 format=$60.,
		T4.ADDRESS_CITY length=60 format=$60.,
		T4.ADDRESS_STATE length=2 format=$2.,
		T4.ADDRESS_ZIP length=9 format=$9.,
		T4.ADDRESS_COUNTRY length=3 format=$3.,
		T5.CONTACT_NBR AS HOME_PHONENBR length=10 format=$10.,
		T6.CONTACT_NBR AS MOBILE_PHONENBR length=10 format=$10.,
		T7.CONTACT_NBR AS WORK_PHONENBR length=10 format=$10.,
		T8.CONTACT_NBR AS OTHER_PHONENBR length=10 format=$10.,
		' ' AS OTHER_PHONECD,
		T9.CONTACT_ADDR AS EMAILADDRESS length=100 format=$100.,
		T10.BANK_ABANBR length=9 format=$9.,
		T10.BANK_ACCOUNTNBR length=20 format=$20.,
		T11.GMI,
		CASE
			WHEN T1.DATASHARECD IN ('UNK','U','UNKNOWN') THEN ' '
			ELSE T1.DATASHARECD
		END AS SHAREDATACD length=1 format=$1.,
		CASE
			WHEN T1.CAN_MARKET_FLG = 'N' THEN 'Y'
			WHEN T1.CAN_MARKET_FLG = 'Y' THEN 'N'
			ELSE ' '
		END AS DO_NOT_MAIL length=1 format=$1.,
		' ' AS LANGUAGECD,
		UPDATEDT
	FROM WORK.CUST_BASE T1
		LEFT JOIN WORK.CENTER_INFO T2 ON (T1.LOCNBR = T2.CENTER_NBR)
		LEFT JOIN WORK.CUST_IDENT T3 ON (T1.INSTANCE = T3.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T3.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.CUST_ADDRESS T4 ON (T1.INSTANCE = T4.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T4.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.HOME_PHONE T5 ON (T1.INSTANCE = T5.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T5.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.MOBILE_PHONE T6 ON (T1.INSTANCE = T6.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T6.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.WORK_PHONE T7 ON (T1.INSTANCE = T7.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T7.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.OTHER_PHONE T8 ON (T1.INSTANCE = T8.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T8.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.EMAIL T9 ON (T1.INSTANCE = T9.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T9.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.CUST_BANKING T10 ON (T1.INSTANCE = T10.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T10.SOURCE_CUSTOMER_ID)
		LEFT JOIN WORK.GMI T11 ON (T1.INSTANCE = T11.SOURCE_SYSTEM_CD AND T1.CUSTNBR = T11.SOURCE_CUSTOMER_ID)
		;
%RUNQUIT(&JOB,&SUB15);

/*
============================================================================= 
     GRABS MARKETING DATA
=============================================================================
*/
PROC SQL;
CREATE TABLE WORK.MARKT_ACQ AS
	SELECT 
		INSTANCE,
		SSN,
		CUSTNBR,
		(UPCASE(MARKETING_SOURCE))	AS MARKETING_SOURCE ,
		MARKETING_SOURCE_DATE
	FROM BIOR.CUSTOMER_AQUISITION
	ORDER BY SSN, CUSTNBR, MARKETING_SOURCE_DATE;
%RUNQUIT(&JOB,&SUB15);

DATA WORK.MOST_RECENT_ACQ;
	SET WORK.MARKT_ACQ;
	BY SSN CUSTNBR MARKETING_SOURCE_DATE;
	IF LAST.CUSTNBR THEN OUTPUT WORK.MOST_RECENT_ACQ;
%RUNQUIT(&JOB,&SUB15);

PROC SQL;
CREATE TABLE WORK.CUSTOMER_DATAMART AS
	SELECT 
		T1.*,
		T2.MARKETING_SOURCE,
		T2.MARKETING_SOURCE_DATE
	FROM WORK.CUSTOMER_DATAMART_PRE T1
	LEFT JOIN WORK.MOST_RECENT_ACQ T2 ON (T1.INSTANCE = T2.INSTANCE AND T1.CUSTNBR = T2.CUSTNBR)
	WHERE T1.INSTANCE NE 'OMNI'
	OR STND_CUSTOMER_STATUS NE 'WAITING';
%RUNQUIT(&JOB,&SUB15);

PROC SORT DATA=WORK.CUSTOMER_DATAMART OUT=WORK.CUSTOMER_DATAMART NODUPKEY DUPOUT=WORK.CUSTOMER_DUPS;
	BY INSTANCE CUSTNBR;
%RUNQUIT(&JOB,&SUB15);

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
%RUNQUIT(&JOB,&SUB15);

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;


/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
    CALL SYMPUTX('TIMESTAMP',CATX('_',PUT(TODAY(),CHECKTHEDAY.),PUT(TIME(),CHECKTHETIME.)),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\CUSTOMER\FUSE",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\CUSTOMER\FUSE\DIR2\",'G');
%RUNQUIT(&JOB,&SUB15);

PROC SQL;
    INSERT INTO SKY.CUSTOMER_DATAMART_FUSE (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM WORK.CUSTOMER_DATAMART;
%RUNQUIT(&JOB,&SUB15);
	
/*UPLOAD FUSE*/
%INCLUDE "&CUST_FILE_PATH.\CUSTDM_UPLOAD_FUSE.SAS";
