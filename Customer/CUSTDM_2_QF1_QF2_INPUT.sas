/****************************************************************************
Sub Program	: QF1 & QF2 Input
Main		: Customer Datamart
Purpose		: Get all customer information from qfund1 & qfund2 POS system
Programmer  : Spencer Hopkins
****************************************************************************/

/*
*****************************************************************************
*****************************************************************************
CHANGE LOG:
  DATE        	BY                 	COMMENTS  
=============================================================================
  12/16/2015	Spencer Hopkins		Added alias to several variables in final    
									step.
  01/08/2016    Spencer Hopkins     Add email address field
  01/13/2016    Spencer Hopkins     Remedy for same customer # in QF1 & QF2
  02/01/2016    Spencer Hopkins     Revise phone number logic
									 (old: primary, secondary)
									 (new: home, mobile, work, other)
  02/01/2016    Spencer Hopkins     POS_CUSTNBR = character & CUSTNBR = numeric
  02/19/2016    Spencer Hopkins     Add DATASHARECD & DO_NOT_MAIL columns
  03/01/2016 	Spencer Hopkins		Add EADV libname statement
  04/12/2016    Spencer Hopkins		Optimization - only copy necessary columns
  05/13/2016	Spencer Hopkins		Remove Custnbr (numeric) & rename
									 pos_custnbr to custnbr (varchar)
  07/19/2016	Spencer Hopkins		Added placeholder for languagecd
  02/21/2017	Spencer Hopkins		Standardized "Write-Off" status
  02/27/2017	Spencer Hopkins		Add ETL check

*****************************************************************************
*****************************************************************************
*/


/*
============================================================================= 
     INCLUDE ERROR_CHECK
=============================================================================
*/
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\SKYNET REDESIGN\DATAMART REDESIGN\CUSTOMER\CUSTDM_ERROR_INPUTS.SAS";


/*
============================================================================= 
     SET UP LIBRARIES & MAKE COPIES OF PRODUCTION TABLES
=============================================================================
*/

/*	INCLUDE LIBNAMES SCRIPT */
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V3\SKYNET REDESIGN\TOP SECRET PROGRAM.SAS";


%LET DAYS_BACK = 5;

/*** QFUND1 & QFUND 2 ***/
DATA WORK.QF1_2_CUST_COPY(KEEP=CUSTOMER_ID SOURCE_SYSTEM CUSTOMER_NBR HOME_LOCATION_NBR BUSINESS_UNIT_CD FIRST_NM LAST_NM MIDDLE_NM 
								DRIVER_LICENSE_STATE_CD DRIVER_LICENSE_NBR SSN DATE_OF_BIRTH APPLICATION_DT LAST_ACTIVITY_DT CUSTOMER_STATUS_CD
								UPDATE_DATE_TIME ADDRESS_LINE_1 ADDRESS_LINE_2 CITY_NM STATE_PROVINCE_CD POSTAL_CD COUNTRY_CD 
								PHONE1_TELEPHONE_NBR PHONE1_PRIMARY_IND PHONE2_TELEPHONE_NBR PHONE2_PRIMARY_IND EMAIL_ADDRESS BANK_ABA_NBR BANK_ACCOUNT_NBR
								DATA_SHARE_CD);
	SET EDW_STAR.CUSTOMER_DIM;
	WHERE SOURCE_SYSTEM IN ('QF1', 'QF2')
		AND (APPLICATION_DT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		  OR LAST_ACTIVITY_DT >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		  OR CREATE_DATE_TIME >= DHMS(TODAY()-&DAYS_BACK.,00,00,00)
		  OR UPDATE_DATE_TIME >= DHMS(TODAY()-&DAYS_BACK.,00,00,00));
%RUNQUIT(&job,&sub2);

DATA WORK.QF1_2_CUSTINCOME_COPY;
	SET EDW_STAR.CUSTOMER_INCOME
		(KEEP=CUSTOMER_NBR SOURCE_SYSTEM PAY_FREQUENCY_CD INCOME_AMT);
	WHERE SOURCE_SYSTEM IN ('QF1', 'QF2');
%RUNQUIT(&job,&sub2);

DATA WORK.EDW_STAR_CUSTOMER_STATUS_COPY;
	SET EDW_STAR.CUSTOMER_STATUS_CODE;
%RUNQUIT(&job,&sub2);

DATA WORK.EADV_DATASHARECODE;
	SET EADV.DATASHARECODE;
%RUNQUIT(&job,&sub2);

/*** LOCATION SPECIFIC INFO ***/
DATA WORK.EDW_D_LOC_COPY;		
	SET EDW.D_LOCATION
		(KEEP=LOC_NBR BRND_CD CTRY_CD ST_PVC_CD ADR_CITY_NM MAIL_CD HIER_ZONE_NBR HIER_ZONE_NM HIER_RGN_NBR HIER_RDO_NM HIER_DIV_NBR HIER_DDO_NM LOC_NM OPEN_DT CLS_DT);
%RUNQUIT(&job,&sub2);		

DATA WORK.SKYNET_LOCATION_LATLONG_COPY;
	SET SKYNET.LOCATION_LATLONG
		(KEEP=LOCNBR LATITUDE LONGITUDE);
%RUNQUIT(&job,&sub2);

DATA WORK.QF2_CROSS_REF;
	SET STGQF.TBL_CENTER_CROSS_REF;
%RUNQUIT(&job,&sub2);


/*
============================================================================= 
     CUSTOMER INFORMATION (NON-INCOME)
=============================================================================
*/

/* SELECT FIELDS AND SORT CUSTOMER INFO BY CUSTOMER_NBR, THEN BY CUSTOMER_ID - UTILIZE LOC XREF TABLE FOR 5-DIGIT LOC NBRS */
PROC SQL;
	CREATE TABLE WORK.QF1_2_CUST_SORTED AS 
	SELECT CUST.CUSTOMER_ID
		,CUST.SOURCE_SYSTEM 
		,CUST.CUSTOMER_NBR 
		,CASE WHEN CUST.HOME_LOCATION_NBR>9999 THEN INPUT(XREF.CENTERNBR,5.)
			ELSE CUST.HOME_LOCATION_NBR
			END AS NEW_LOC format 16.
		,CUST.BUSINESS_UNIT_CD 
		,CUST.FIRST_NM 
		,CUST.LAST_NM 
		,CUST.MIDDLE_NM 
		,CUST.DRIVER_LICENSE_STATE_CD 
		,CUST.DRIVER_LICENSE_NBR 
		,CUST.SSN 
		,CUST.DATE_OF_BIRTH 
		,CUST.APPLICATION_DT 
		,CUST.LAST_ACTIVITY_DT 
		,CUST.CUSTOMER_STATUS_CD 
		,CUST.UPDATE_DATE_TIME
		,CUST.ADDRESS_LINE_1 
		,CUST.ADDRESS_LINE_2
		,CUST.CITY_NM
		,CUST.STATE_PROVINCE_CD 
		,CUST.POSTAL_CD
		,CUST.COUNTRY_CD
		,CUST.PHONE1_TELEPHONE_NBR
		,CUST.PHONE1_PRIMARY_IND 
		,CUST.PHONE2_TELEPHONE_NBR
		,CUST.PHONE2_PRIMARY_IND
		,CUST.EMAIL_ADDRESS
		,CUST.BANK_ABA_NBR
		,CUST.BANK_ACCOUNT_NBR
		,CASE WHEN CUST.DATA_SHARE_CD='N' THEN ''
			ELSE CUST.DATA_SHARE_CD
			END AS DATASHARECD
		,'' AS LANGUAGECD 			length=2 format=$2.
	FROM WORK.QF1_2_CUST_COPY CUST
		LEFT JOIN WORK.QF2_CROSS_REF XREF ON CUST.HOME_LOCATION_NBR = INPUT(XREF.STORENBR,5.)
	ORDER BY SOURCE_SYSTEM
			,CUSTOMER_NBR
	       	,CUSTOMER_ID
			;
%RUNQUIT(&job,&sub2);

/* GET MOST RECENT CUSTOMER INFORMATION (FLATTEN) */
DATA WORK.QF1_2_CUST_FINAL (DROP=CUSTOMER_ID);
	SET WORK.QF1_2_CUST_SORTED;
	BY SOURCE_SYSTEM CUSTOMER_NBR CUSTOMER_ID;
	IF LAST.CUSTOMER_NBR;
%RUNQUIT(&job,&sub2);


/*
============================================================================= 
     RE-ARRANGE CUSTOMER PHONE INFO (HOME, MOBILE, WORK, OTHER, OTHER PHONE CD)
=============================================================================
*/

DATA QF1_2_CUSTPHONE_FINAL;
	SET WORK.QF1_2_CUST_FINAL;

	IF PHONE1_PRIMARY_IND = 'H' THEN HOME_PHONENBR = PHONE1_TELEPHONE_NBR;
	ELSE IF PHONE1_PRIMARY_IND = 'C' THEN MOBILE_PHONENBR = PHONE1_TELEPHONE_NBR;
	ELSE IF PHONE1_PRIMARY_IND = 'W' THEN WORK_PHONENBR = PHONE1_TELEPHONE_NBR;
	ELSE DO;
		OTHER_PHONENBR = PHONE1_TELEPHONE_NBR;
		OTHER_PHONECD = PHONE1_PRIMARY_IND;
	END;

	IF PHONE2_PRIMARY_IND = 'H' AND PHONE1_PRIMARY_IND = 'H' THEN DO;
		OTHER_PHONENBR = PHONE2_TELEPHONE_NBR;
		OTHER_PHONECD = PHONE2_PRIMARY_IND;
	END;
	ELSE IF PHONE2_PRIMARY_IND = 'C' AND PHONE1_PRIMARY_IND = 'C' THEN DO;
		OTHER_PHONENBR = PHONE2_TELEPHONE_NBR;
		OTHER_PHONECD = PHONE2_PRIMARY_IND;
	END;
	ELSE IF PHONE2_PRIMARY_IND = 'W' AND PHONE1_PRIMARY_IND = 'W' THEN DO;
		OTHER_PHONENBR = PHONE2_TELEPHONE_NBR;
		OTHER_PHONECD = PHONE2_PRIMARY_IND;
	END;
	ELSE IF PHONE1_PRIMARY_IND IN ('H','W','C') AND PHONE2_PRIMARY_IND NOT IN ('H','W','C') THEN DO;
		OTHER_PHONENBR = PHONE2_TELEPHONE_NBR;
		OTHER_PHONECD = PHONE2_PRIMARY_IND;
	END;

	KEEP SOURCE_SYSTEM CUSTOMER_NBR HOME_PHONENBR MOBILE_PHONENBR WORK_PHONENBR OTHER_PHONENBR OTHER_PHONECD;
%RUNQUIT(&job,&sub2);


/*
============================================================================= 
     CUSTOMER INCOME INFORMATION
=============================================================================
*/
	
/* CALCULATE GMI FOR EACH INCOME BY PAY FREQUENCY - INLUDE 'UNK' WITH MONTHLY*/	
PROC SQL;		
	CREATE TABLE WORK.QF1_2_CUSTINCOME_GMI AS	
	SELECT CUSTOMER_NBR,	
		CASE WHEN PAY_FREQUENCY_CD = 'BI' THEN (INCOME_AMT*26)/12
			 WHEN PAY_FREQUENCY_CD = 'BIM' THEN INCOME_AMT*2
			 WHEN PAY_FREQUENCY_CD IN ('MON', 'UNK') THEN INCOME_AMT
			 WHEN PAY_FREQUENCY_CD = 'WK' THEN (INCOME_AMT*52)/12
			 END AS GMI_PARTIAL
	FROM WORK.QF1_2_CUSTINCOME_COPY	
	ORDER BY CUSTOMER_NBR
	;
%RUNQUIT(&job,&sub2);		
		
/* AGGREGATE GMI FOR EACH CUSTOMER*/
PROC SQL;
	CREATE TABLE WORK.QF1_2_CUSTINCOME_FINAL AS
	SELECT CUSTOMER_NBR
			,ROUND(SUM(GMI_PARTIAL),.01) AS GMI
	FROM WORK.QF1_2_CUSTINCOME_GMI
	GROUP BY CUSTOMER_NBR
	;
%RUNQUIT(&job,&sub2);

/*
============================================================================= 
     PUTTING IT ALL TOGETHER
=============================================================================
*/

PROC SQL;
	CREATE TABLE MARKETING_AQUISITION AS
	SELECT INSTANCE
		  ,SSN
		  ,CUSTNBR
		  ,(UPCASE(MARKETING_SOURCE))	AS MARKETING_SOURCE 
		  ,MARKETING_SOURCE_DATE
	FROM BIOR.CUSTOMER_AQUISITION
	WHERE INSTANCE = 'QFUND1' OR INSTANCE = 'QFUND2'
	ORDER BY SSN
			,CUSTNBR
			,MARKETING_SOURCE_DATE
;
%RUNQUIT(&job,&sub1);

/*GET MOST RECENT MARKETING SOURCE DATE*/

DATA MOST_RECENT_AQU;
	SET MARKETING_AQUISITION;
	BY SSN
	   CUSTNBR
	   MARKETING_SOURCE_DATE;
	IF LAST.CUSTNBR THEN OUTPUT MOST_RECENT_AQU;
%RUNQUIT(&job,&sub1);

PROC SQL;
	CREATE TABLE WORK.CUSTOMER_DATAMART_QF1QF2 AS
	SELECT
		'QFUND' AS POS length=15 format=$15.
		,CASE WHEN C.SOURCE_SYSTEM = 'QF1' 
					THEN 'QFUND1'
			  WHEN C.SOURCE_SYSTEM = 'QF2'
					THEN 'QFUND2'
			  END AS INSTANCE length=15 format=$15.
		,'STOREFRONT'		AS CHANNELCD
		,LOC.BRND_CD AS BRANDCD
		,LOC.CTRY_CD AS COUNTRYCD
		,LOC.ST_PVC_CD AS STATE
		,LOC.ADR_CITY_NM AS CITY
		,LOC.MAIL_CD AS ZIP
		,LOC.HIER_ZONE_NBR AS ZONENBR
		,LOC.HIER_ZONE_NM AS ZONENAME 
		,LOC.HIER_RGN_NBR AS REGIONNBR
		,LOC.HIER_RDO_NM AS REGIONRDO 
		,LOC.HIER_DIV_NBR AS DIVISIONNBR
		,LOC.HIER_DDO_NM AS DIVISIONDDO 
		,C.NEW_LOC AS LOCNBR
		,LOC.LOC_NM AS LOCATION_NAME
		,LOC.OPEN_DT AS LOC_OPEN_DT
		,LOC.CLS_DT AS LOC_CLOSE_DT
		,C.APPLICATION_DT AS APPLICATIONDT
		,DHMS(TODAY()-1,0,0,0) as LAST_REPORT_DT format DATETIME20.
		,LATI.LATITUDE AS LATITUDE
		,LATI.LONGITUDE AS LONGITUDE
		,PUT(C.CUSTOMER_NBR, 20. -l) AS CUSTNBR
		,''							AS OMNINBR
/*		,C.CUSTOMER_NBR AS CUSTNBR*/
		,C.SSN length=9 format=$9.
		,C.BUSINESS_UNIT_CD AS BUSINESSUNITCD
		,CASE WHEN propcase(STATUS.CUSTOMER_STATUS_DESC)="Write Off" THEN "Write-Off"
			ELSE propcase(STATUS.CUSTOMER_STATUS_DESC)
			END AS STND_CUSTOMER_STATUS length= 35 format=$35.
		,propcase(C.FIRST_NM) AS FIRSTNM length=35 format=$35.
		,propcase(C.LAST_NM) AS LASTNM length=35 format=$35.
		,propcase(C.MIDDLE_NM) AS MIDDLENM length=35 format=$35.
		,C.DRIVER_LICENSE_STATE_CD AS DRIVERSLICST length=2 format=$2.
		,C.DRIVER_LICENSE_NBR AS DRIVERSLICNBR length=50 format=$50.
		,C.DATE_OF_BIRTH AS DOB
		,propcase(C.ADDRESS_LINE_1) AS ADDRESS_LN1 length=60 format=$60.
		,propcase(C.ADDRESS_LINE_2) AS ADDRESS_LN2 length=60 format=$60.
		,propcase(C.CITY_NM) AS ADDRESS_CITY length=60 format=$60.
		,upcase(C.STATE_PROVINCE_CD) AS ADDRESS_STATE length=2 format$2.
		,C.POSTAL_CD AS ADDRESS_ZIP length=9 format=$9.
		,upcase(C.COUNTRY_CD) AS ADDRESS_COUNTRY length=3 format=$3.
		,PHONE.HOME_PHONENBR		length=10 format=$10.
		,PHONE.MOBILE_PHONENBR		length=10 format=$10.
		,PHONE.WORK_PHONENBR		length=10 format=$10.
		,PHONE.OTHER_PHONENBR		length=10 format=$10.
		,PHONE.OTHER_PHONECD		length=5 format=$5.
		,C.EMAIL_ADDRESS AS EMAILADDRESS length=100 format=$100.
		,C.BANK_ABA_NBR AS BANK_ABANBR length=9 format=$9. 
		,C.BANK_ACCOUNT_NBR AS BANK_ACCOUNTNBR length=20 format=$20.
		,INCOME.GMI
		,DSC.DESCRIPTION AS DATASHARECD length=35 format=$35. 
		,'' AS DO_NOT_MAIL length=1 format=$1.
		,'' AS LANGUAGECD 			length=2 format=$2.
		,C.LAST_ACTIVITY_DT AS UPDATEDT
	FROM WORK.QF1_2_CUST_FINAL C
		LEFT JOIN WORK.QF1_2_CUSTINCOME_FINAL INCOME ON C.CUSTOMER_NBR = INCOME.CUSTOMER_NBR
		LEFT JOIN WORK.QF1_2_CUSTPHONE_FINAL PHONE ON C.CUSTOMER_NBR = PHONE.CUSTOMER_NBR AND C.SOURCE_SYSTEM = PHONE.SOURCE_SYSTEM
		LEFT JOIN WORK.EDW_D_LOC_COPY LOC ON C.NEW_LOC = LOC.LOC_NBR
		LEFT JOIN WORK.SKYNET_LOCATION_LATLONG_COPY LATI ON C.NEW_LOC = LATI.LOCNBR
		LEFT JOIN WORK.EDW_STAR_CUSTOMER_STATUS_COPY STATUS ON C.CUSTOMER_STATUS_CD = STATUS.CUSTOMER_STATUS_CD
		LEFT JOIN WORK.EADV_DATASHARECODE DSC ON C.DATASHARECD = DSC.DATASHARECD
	WHERE C.NEW_LOC ^= .
	;
%RUNQUIT(&job,&sub2);

PROC SQL;
	CREATE TABLE CUSTDM.CUSTOMER_DATAMART_QF1QF2 AS
	SELECT A.*
		  ,B.MARKETING_SOURCE
		  ,B.MARKETING_SOURCE_DATE
	FROM CUSTOMER_DATAMART_QF1QF2 A
	LEFT JOIN MOST_RECENT_AQU B
		ON (A.INSTANCE = B.INSTANCE
		AND A.SSN = B.SSN
		AND A.CUSTNBR = B.CUSTNBR)
	;
%RUNQUIT(&job,&sub1);


PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
%RUNQUIT(&JOB,&SUB9);

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;


/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
    CALL SYMPUTX('TIMESTAMP',CATX('_',PUT(TODAY(),CHECKTHEDAY.),PUT(TIME(),CHECKTHETIME.)),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\CUSTOMER\QFUND1_QFUND2",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\CUSTOMER\QFUND1_QFUND2\DIR2\",'G');
%RUNQUIT(&JOB,&SUB9);

PROC SQL;
    INSERT INTO SKY.CUSTOMER_DATAMART_QF1QF2 (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM CUSTDM.CUSTOMER_DATAMART_QF1QF2;
%RUNQUIT(&JOB,&SUB9);


/*UPLOAD QF1_QF2*/
%INCLUDE "&CUST_FILE_PATH.\CUSTDM_UPLOAD_QF1_QF2.SAS";


