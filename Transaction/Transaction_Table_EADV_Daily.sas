*ERROR CHECKING;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\TRANSACTION_DATAMART_DAILY\TRANSACTION_TABLE_ERROR_CHECK.SAS";

*LIBNAME STATEMENTS;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\LIBNAME_STATEMENTS.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";

*CUSTOMER JOIN PROGRAM;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\TRANSACTION_DATAMART_DAILY\CUSTOMER_SSN_MACRO.SAS";
%SSN(EAPROD1);

/* MACROS FOR SELECTING DATA */
%PUT &SYSUSERID;
%LET START=INTNX('DTDAY',DHMS(18628,0,0,0),1,'BEGINNING');
%LET THIRTYDAYS=INTNX('DTDAY',DHMS(%SYSFUNC(TODAY()),0,0,0),-5,'BEGINNING');
%PUT &THIRTYDAYS;
%PUT &START;

DATA _NULL_;
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
RUN;
/* START TIMER */
%LET _TIMER_START = %SYSFUNC(DATETIME());

/* DOWNLOAD DEALTRANSACTIONDETAIL INFORMATION */
DATA WORK.DEALTRANSACTIONDETAIL;
	SET EADV.DEALTRANSACTIONDETAIL;
WHERE CREATEDT > &THIRTYDAYS.;
%RUNQUIT(&job,&sub2);

/* DOWNLOAD DEALTRANSACTION INFORMATION */
DATA WORK.DEALTRANSACTION;
	SET EADV.DEALTRANSACTION;
WHERE CREATEDT > &THIRTYDAYS. AND LOCNBR NOT IN (5589, 6000, 6001, 6002, 6003, 6005, 6006, 6007, 7336, 7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345,
7346, 7347, 7348, 7349, 7350, 7351, 7352, 7353, 8886, 8887, 8888);
%RUNQUIT(&job,&sub2);

/* DOWNLOAD DEALRECEIPT DATA FOR MONETARYCD */
DATA WORK.DEALRECEIPT;
	SET EADV.DEALRECEIPT (KEEP=DEALTRANNBR CREATEDT MONETARYCD);
WHERE CREATEDT > &THIRTYDAYS.;
%RUNQUIT(&job,&sub2);

/* JOIN BASE POS INFORMATION TOGETHER */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_EADV_FIRST AS	
		SELECT 
			A.LOCNBR,
		    A.DEALNBR AS DEALNBR1,
			A.DEALTRANNBR AS DEALTRANNBR1,
			A.ORIGTRANNBR AS ORIGTRANNBR1,
			A.VOIDCD AS VOIDFLG,
			A.TRANCD AS POSTRANCD,
			A.TRANDT,
			B.APPLIEDCD AS POSAPPLIEDCD,
			B.TRANAMT,
			A.CREATEDT AS TRANCREATEDT FORMAT=DATETIME20.,
			A.CREATEUSR,
			C.DEALDT AS DEAL_DT FORMAT=DATETIME20.,
			C.PRODUCTCD,
			C.CUSTNBR AS CUSTNBR1,
			E.SSN AS SSN,
			A.DEALSTATUSCD LENGTH=15,
			D.MONETARYCD LENGTH=15
		FROM WORK.DEALTRANSACTION A
			LEFT JOIN WORK.DEALTRANSACTIONDETAIL B ON (B.DEALTRANNBR=A.DEALTRANNBR) 
			LEFT JOIN 
			   (SELECT CUSTNBR
			   	      ,DEALNBR
					  ,PRODUCTCD
					  ,DEALDT
				FROM EADV.DEALSUMMARY) C  ON (C.DEALNBR=A.DEALNBR) 
			LEFT JOIN WORK.DEALRECEIPT D  ON (D.DEALTRANNBR=A.DEALTRANNBR)
			LEFT JOIN (&SQL_TEXT.) E  ON (E.CUSTNBR=C.CUSTNBR)
		WHERE A.CREATEDT > &THIRTYDAYS.;
%RUNQUIT(&job,&sub2);

/* CONVERT NUMERIC FIELDS TO CHARACTER */
DATA TRANSACTION_TABLE_EADV_SECOND (DROP=DEALNBR1 DEALTRANNBR1 ORIGTRANNBR1 CUSTNBR1);
	SET TRANSACTION_TABLE_EADV_FIRST;
     IF PUT(CUSTNBR1,15.)~='.'            THEN CUSTNBR=PUT(STRIP(CUSTNBR1),15.);
ELSE IF PUT(STRIP(CUSTNBR1),15.)='.'      THEN CUSTNBR='';
     IF PUT(STRIP(DEALNBR1),15.)~='.'     THEN DEALNBR=PUT(STRIP(DEALNBR1),15.);
ELSE IF PUT(STRIP(DEALNBR1),15.)='.'      THEN DEALNBR='';
	 IF PUT(STRIP(DEALTRANNBR1),15.)~='.' THEN DEALTRANNBR=PUT(STRIP(DEALTRANNBR1),15.);
ELSE IF PUT(DEALTRANNBR1,15.)='.'         THEN DEALTRANNBR='';
	 IF PUT(STRIP(ORIGTRANNBR1),15.)~='.' THEN ORIGTRANNBR=PUT(STRIP(ORIGTRANNBR1),15.);
ELSE IF PUT(STRIP(ORIGTRANNBR1),15.)='.'  THEN ORIGTRANNBR='';
%RUNQUIT(&job,&sub2);

/* FILTER VOIDED TRANSACTIONS INTO SEPARATE TABLE                        */
/* RENAME ORIGTRANNBR TO DEALTRANNBR FOR LATER JOINING BACK TO THE TABLE */
PROC SQL;
	CREATE TABLE VOIDS AS 
		SELECT 
			LOCNBR,
			DEALNBR,
			ORIGTRANNBR AS DEALTRANNBR,
			VOIDFLG,
			POSTRANCD,
			TRANDT AS VOIDDT,
			POSAPPLIEDCD,
			TRANAMT,
			CREATEUSR,
			TRANCREATEDT FORMAT=DATETIME20.,
			PRODUCTCD,
			CUSTNBR,
			DEALSTATUSCD,
			MONETARYCD
		FROM TRANSACTION_TABLE_EADV_SECOND
		WHERE VOIDFLG IN ('V','R');
%RUNQUIT(&job,&sub2);

/* CREATE 30 DAY PORTION OF POS INFORMATION */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_EADV_UPDATE AS
		SELECT 
			(CASE WHEN T1.PRODUCTCD = "A" OR T1.PRODUCTCD = "C" THEN "PAYDAY" 
				  WHEN T1.PRODUCTCD = "I" THEN "INSTALLMENT" 
				  ELSE "UNKNOWN" END)  
            	  AS PRODUCT LENGTH=20 FORMAT=$20.,
			(CASE WHEN T1.PRODUCTCD = "A" THEN "EADV PAYDAY" 
                  WHEN T1.PRODUCTCD = "I" AND T2.ST_PVC_CD = "AL" THEN"AL ETL"
                  WHEN T1.PRODUCTCD = "I" AND T2.ST_PVC_CD = "IL" THEN "IL ILP"
				  WHEN T1.PRODUCTCD = "C" THEN "TX CSO"
                  ELSE "UNKNOWN" END) 
			      AS PRODUCTDESC  LENGTH=30 FORMAT=$30.,
			'EADVANTAGE' AS POS LENGTH=20  FORMAT=$20.,
			'EAPROD1' AS INSTANCE LENGTH=20  FORMAT=$20.,
			'STOREFRONT'		AS CHANNELCD,
			T2.ST_PVC_CD AS STATE LENGTH=2 FORMAT=$2.,
			T1.LOCNBR,
			T1.SSN,
			T1.CUSTNBR,
			''			AS OMNINBR,
			DHMS(DATEPART(T1.DEAL_DT),0,0,0) AS DEAL_DT 		FORMAT=DATETIME20.,
			T1.DEAL_DT AS DEAL_DTTM								FORMAT=DATETIME20.,
			T1.DEALNBR,
			LEFT("0") AS TITLE_DEALNBR LENGTH=15 FORMAT=$15.,
			T1.DEALTRANNBR,
			T1.ORIGTRANNBR,
			T1.VOIDFLG LENGTH=2 FORMAT=$2.,
			T10.VOIDDT,
			T1.DEALSTATUSCD LENGTH=15,
			T1.POSTRANCD LENGTH=50 FORMAT=$50.,
   COALESCE(T8.STNDTRANCD,'UNKNOWN') AS STNDTRANCD LENGTH=25 FORMAT=$25.,
			T1.POSAPPLIEDCD LENGTH=50 FORMAT=$50.,
 (CASE WHEN T1.POSTRANCD='PAY' AND T1.POSAPPLIEDCD='IFC' THEN 'INTEREST FEE CHARGED' ELSE
   COALESCE(T7.STNDAPPLIEDCD,'UNKNOWN')END) AS STNDAPPLIEDCD LENGTH=20 FORMAT=$20.,
 (CASE WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD  CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.POSTRANCD  CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD  CONTAINS 'ECC' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
	   WHEN T1.POSTRANCD  CONTAINS 'ECC' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD IN ('ACHP','ACHPP') THEN 'Y'
	   WHEN T1.POSTRANCD IN ('ACHD') THEN 'N'
	   ELSE T8.CI_FLG END) AS CI_FLG,
			T1.MONETARYCD,
			T1.TRANAMT,
			T1.TRANDT,
			T1.TRANCREATEDT,
			DHMS(DATEPART(T1.TRANCREATEDT),0,0,0) AS BUSINESSDT FORMAT=DATETIME20.,
			DHMS(DATEPART(T1.TRANDT),0,0,0) 	  AS TRANDATE   FORMAT=DATETIME20.,
			%SYSFUNC(DATETIME()) AS UPDATEDT FORMAT=DATETIME20.,
			"" AS NCP_IND LENGTH=1,
			T1.CREATEUSR
		FROM TRANSACTION_TABLE_EADV_SECOND T1
			LEFT JOIN EDW.D_LOCATION T2 ON T2.LOC_NBR=T1.LOCNBR
			LEFT JOIN BIOR.L_APPLIEDCODES T7 ON T7.POSAPPLIEDCD=T1.POSAPPLIEDCD
			LEFT JOIN BIOR.L_TRANSACTIONCODES T8 ON (T8.POS='EADVANTAGE' AND T8.POSTRANCD=T1.POSTRANCD)
			LEFT JOIN WORK.VOIDS T10 ON (T10.DEALNBR=T1.DEALNBR AND T10.DEALTRANNBR=T1.DEALTRANNBR AND T10.POSAPPLIEDCD=T1.POSAPPLIEDCD AND T10.POSTRANCD=T1.POSTRANCD)
		WHERE T1.TRANCREATEDT > &THIRTYDAYS.;
%RUNQUIT(&job,&sub2);

/* SORT POS INFORMATION */
/* STORE IN SAS DATA FOLDER */
PROC SORT DATA=WORK.TRANSACTION_TABLE_EADV_UPDATE OUT=TRANSACTION_TABLE_EADV_UPDATE NODUPKEY DUPOUT=DUPSDELETE;
BY DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD TRANAMT TRANDT TITLE_DEALNBR;
%RUNQUIT(&job,&sub2);


PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
RUN;

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\EADV",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\EADV\DIR2\",'G');
RUN;

PROC SQL;
    INSERT INTO SKY.TRAN_DATAMART_EADV (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM TRANSACTION_TABLE_EADV_UPDATE
	WHERE STATE NOT IN ('TN');
QUIT;

/*UPLOAD EADV*/
%INCLUDE "&TRAN_FILE_PATH.\TRANSACTION_UPLOAD_EADV.SAS";

/* STOP TIMER */
DATA _NULL_;
  DUR = DATETIME() - &_TIMER_START;
  PUT 30*'-' / ' TOTAL DURATION:' DUR TIME13.2 / 30*'-';
RUN;

