*Error Checking;
%include "E:\Shared\CADA\SAS Source Code\Development\nrochester\TRANSACTION_DATAMART_DAILY\Transaction_Table_Error_Check.sas";

*Libname Statements;
%include "E:\Shared\CADA\SAS Source Code\Development\nrochester\Libname_Statements.sas";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";

*CUSTOMER JOIN PROGRAM;
%INCLUDE "E:\SHARED\CADA\SAS Source Code\Development\nrochester\TRANSACTION_DATAMART_DAILY\CUSTOMER_SSN_MACRO.SAS";
%SSN(QFUND1I);

/* MACROS FOR SELECTING DATA */
%PUT &SYSUSERID;
%LET START=INTNX('DTDAY',DHMS(18628,0,0,0),1,'BEGINNING');
%LET THIRTYDAYS=INTNX('DTDAY',DHMS(%SYSFUNC(TODAY()),0,0,0),-5,'BEGINNING');
%PUT &START;
%PUT &THIRTYDAYS;

DATA _NULL_;
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
RUN;

/* START TIMER */
%LET _TIMER_START = %SYSFUNC(DATETIME());

/* DOWNLOAD LOAN TRANSACTION INFORMATION */
DATA WORK.LOANTRANSACTION_I_1;
	SET EDW.LOANTRANSACTION;
WHERE LD_DTM > &THIRTYDAYS.;
%RUNQUIT(&job,&sub3);

/* SORT LOAN TRANSACTION INFORMATION */
PROC SORT DATA=WORK.LOANTRANSACTION_I_1;
BY LOAN_ID TRAN_NBR TRAN_DTM ORIG_TRAN_NBR CAL_DAY_ID TRAN_TYPE_CD LOC_ID LD_DTM RVRSL_IND RCVD_TNDR_TYPE_CD;
%RUNQUIT(&job,&sub3);

/* ZERO OUT INT_AMT COLUMN ON A DEFP. WAS CAUSING DOUBLE POSITIVES WHEN SUMMING */
DATA WORK.LOANTRANSACTION_I;
SET WORK.LOANTRANSACTION_I_1;
IF TRAN_TYPE_CD="DEFP" AND INT_AMT~=0.00 THEN INT_AMT=0.00;
%RUNQUIT(&job,&sub3);

/* TRANSPOSE APPLIED CODE COLUMNS DOWN FROM LOAN TRANSACTION */
PROC TRANSPOSE DATA=WORK.LOANTRANSACTION_I OUT=WORK.LOANTRANSACTION_TRANSP_I;
VAR LOAN_AMT ORIG_FEE_AMT INT_AMT SDB_FEE_AMT LATE_FEE_AMT CSO_FEE_AMT RPYMT_PLAN_AMT MNT_FEE_AMT NSF_AMT NSF_FEE_AMT DFLT_AMT DFLT_FEE_AMT WRT_OFF_AMT WRT_OFF_FEE_AMT;
BY LOAN_ID TRAN_NBR TRAN_DTM ORIG_TRAN_NBR CAL_DAY_ID TRAN_TYPE_CD LOC_ID LD_DTM RVRSL_IND RCVD_TNDR_TYPE_CD LOAN_STAT_CD;
%RUNQUIT(&job,&sub3);

/* ONLY TAKE TRANSACTIONS THAT ARE NOT ZERO FOR JOINING */
DATA WORK.LOANTRANSACTION_TRNONZERO_I (RENAME=(COL1=TRANAMT _LABEL_=POSAPPLIEDCD));
SET WORK.LOANTRANSACTION_TRANSP_I;
WHERE COL1 NOT IN (0,.);
%RUNQUIT(&job,&sub3);

/* JOIN BASE POS INFORMATION TOGETHER */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF1_I AS	
		SELECT 
			A.LOC_ID,
			C.LOAN_NBR AS DEALNBR1,
			A.TRAN_NBR AS DEALTRANNBR1,
			(CASE WHEN A.ORIG_TRAN_NBR = 0 THEN . 
			 ELSE A.ORIG_TRAN_NBR END) AS ORIGTRANNBR1,
			A.RVRSL_IND AS VOIDFLG,
            A.TRAN_TYPE_CD AS POSTRANCD,		
			A.TRAN_DTM AS TRANDT,
			A.POSAPPLIEDCD,
			A.TRANAMT,
			A.LD_DTM AS TRANCREATEDT FORMAT=DATETIME20.,
			C.LOAN_ORIG_DT AS DEAL_DT FORMAT=DATETIME20.,
			C.CUST_ACCT_ID,
			C.PROD_ID,
			A.LOAN_STAT_CD AS DEALSTATUSCD LENGTH=15,
			A.RCVD_TNDR_TYPE_CD AS MONETARYCD LENGTH=15
		FROM WORK.LOANTRANSACTION_TRNONZERO_I A
			LEFT JOIN EDW.LOAN C ON (C.LOAN_ID=A.LOAN_ID)
		WHERE A.LD_DTM > &THIRTYDAYS.;
%RUNQUIT(&job,&sub3);

/* JOIN LOCATION INFORMATION TOGETHER */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF1_Icust1 AS
		SELECT
			A.*,
			B.CUST_ACCT_SRC_SYS_CUST_NBR AS CUSTNBR1,
			E.SSN,
			C.PROD_TYPE_CD AS PRODUCTCD,
			D.LOC_NBR AS LOCNBR
		FROM TRANSACTION_TABLE_QF1_I A
			LEFT JOIN EDW.CUST_ACCT  B ON (B.CUST_ACCT_ID=A.CUST_ACCT_ID AND B.CUST_ACCT_SRC_SYS_CD="QFUND")
			LEFT JOIN EDW.PRODUCT C ON (C.PROD_ID=A.PROD_ID)
			LEFT JOIN EDW.LOCATION D ON (D.LOC_ID=A.LOC_ID)
			LEFT JOIN (&SQL_TEXT.) E ON (E.CUSTNBR=B.CUST_ACCT_SRC_SYS_CUST_NBR);
%RUNQUIT(&job,&sub3);

/* CONVERT NUMERIC FIELDS TO CHARACTER */	
DATA TRANSACTION_TABLE_QF1_Icust (DROP=DEALNBR1 DEALTRANNBR1 ORIGTRANNBR1 CUSTNBR1);
	SET TRANSACTION_TABLE_QF1_Icust1;
     IF PUT(CUSTNBR1,15.)~='.'            THEN CUSTNBR=PUT(STRIP(CUSTNBR1),15.);
ELSE IF PUT(STRIP(CUSTNBR1),15.)='.'      THEN CUSTNBR='';
     IF PUT(STRIP(DEALNBR1),15.)~='.'     THEN DEALNBR=PUT(STRIP(DEALNBR1),15.);
ELSE IF PUT(STRIP(DEALNBR1),15.)='.'      THEN DEALNBR='';
	 IF PUT(STRIP(DEALTRANNBR1),15.)~='.' THEN DEALTRANNBR=PUT(STRIP(DEALTRANNBR1),15.);
ELSE IF PUT(DEALTRANNBR1,15.)='.'         THEN DEALTRANNBR='';
	 IF PUT(STRIP(ORIGTRANNBR1),15.)~='.' THEN ORIGTRANNBR=PUT(STRIP(ORIGTRANNBR1),15.);
ELSE IF PUT(STRIP(ORIGTRANNBR1),15.)='.'  THEN ORIGTRANNBR='';
%RUNQUIT(&job,&sub3);	

/* SORT TRANSACTION JOIN AND CHECK FOR DUPLICATES */
PROC SORT DATA=WORK.TRANSACTION_TABLE_QF1_Icust NODUPKEY DUPOUT=DUPSDELETEQF1I;
BY DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD;
%RUNQUIT(&job,&sub3);

/* FILTER VOIDED TRANSACTIONS INTO SEPARATE TABLE                        */
/* RENAME ORIGTRANNBR TO DEALTRANNBR FOR LATER JOINING BACK TO THE TABLE */
PROC SQL;
	CREATE TABLE VOIDS_QF1I AS 
		SELECT 
			LOCNBR,
			DEALNBR,
			ORIGTRANNBR AS DEALTRANNBR,
			VOIDFLG,
			POSTRANCD,
			TRANDT AS VOIDDT,
			POSAPPLIEDCD,
			TRANAMT,
			TRANCREATEDT FORMAT=DATETIME20.,
			PRODUCTCD,
			CUSTNBR,
			DEALSTATUSCD,
			MONETARYCD
		FROM TRANSACTION_TABLE_QF1_Icust
		WHERE VOIDFLG IN ('V','R');
%RUNQUIT(&job,&sub3);

/* CREATE 5 YEAR PORTION OF POS INFORMATION */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF1_UPDATEI AS
		SELECT 
			(CASE WHEN T1.PRODUCTCD = "TLP" THEN "TITLE" 
				  WHEN T1.PRODUCTCD = "IPDL" THEN "INSTALLMENT" 
				  ELSE "UNKNOWN" END)  
            	  AS PRODUCT LENGTH=20 FORMAT=$20.,
			(CASE WHEN T1.PRODUCTCD = "TLP" THEN "MULTISTATE TITLE" 
                  WHEN T1.PRODUCTCD = "IPDL"  AND T2.ST_PVC_CD IN ('IL','WI','DE','CO') THEN "IPDL"
                  ELSE "MULTISTATE INSTALLMENT" END)
				  AS PRODUCTDESC  LENGTH=30 FORMAT=$30.,
			'QFUND' AS POS LENGTH=20  FORMAT=$20.,
			'QFUND1' AS INSTANCE LENGTH=20  FORMAT=$20.,
			'STOREFRONT'		AS CHANNELCD,
			T2.ST_PVC_CD AS STATE LENGTH=2 FORMAT=$2.,
			T1.LOCNBR,
			T1.SSN,
			T1.CUSTNBR,
			''	AS OMNINBR,
			DHMS(DATEPART(T1.DEAL_DT),0,0,0) AS DEAL_DT 		FORMAT=DATETIME20.,
			T1.DEAL_DT AS DEAL_DTTM								FORMAT=DATETIME20.,
			T1.DEALNBR,
			LEFT("0") AS TITLE_DEALNBR LENGTH=15 FORMAT=$15.,
			T1.DEALTRANNBR,
			T1.ORIGTRANNBR,
			T1.VOIDFLG LENGTH=2 FORMAT=$2.,
			T10.VOIDDT,
			T1.DEALSTATUSCD LENGTH=15,
			T1.POSTRANCD LENGTH=50 FORMAT=$50.,
   COALESCE(T8.STNDTRANCD,'UNKNOWN') AS STNDTRANCD LENGTH=25 FORMAT=$25.,
			T1.POSAPPLIEDCD LENGTH=50 FORMAT=$50.,
 (CASE WHEN T1.POSTRANCD='PAY' AND T1.POSAPPLIEDCD='IFC' THEN 'INTEREST FEE CHARGED' ELSE
   COALESCE(T7.STNDAPPLIEDCD,'UNKNOWN')END) AS STNDAPPLIEDCD LENGTH=20 FORMAT=$20.,	
 (CASE WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD CONTAINS  'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.POSTRANCD CONTAINS  'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD CONTAINS  'ECC' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
	   WHEN T1.POSTRANCD CONTAINS  'ECC' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD IN ('ACHP','ACHPP') THEN 'Y'
	   WHEN T1.POSTRANCD IN ('ACHD') THEN 'N'
	   ELSE T8.CI_FLG END) AS CI_FLG,
			T1.MONETARYCD,
			T1.TRANAMT,
			T1.TRANDT,
			T1.TRANCREATEDT,
			DHMS(DATEPART(T1.TRANCREATEDT),0,0,0) AS BUSINESSDT FORMAT=DATETIME20.,
			DHMS(DATEPART(T1.TRANDT),0,0,0) 	  AS TRANDATE   FORMAT=DATETIME20.,
			%SYSFUNC(DATETIME()) AS UPDATEDT FORMAT=DATETIME20.,
			"" AS NCP_IND LENGTH=1,
			. AS CREATEUSR
		FROM TRANSACTION_TABLE_QF1_Icust T1
			LEFT JOIN EDW.D_LOCATION T2 ON T2.LOC_NBR=T1.LOCNBR
			LEFT JOIN BIOR.L_APPLIEDCODES T7 ON T7.POSAPPLIEDCD=T1.POSAPPLIEDCD
			LEFT JOIN BIOR.L_TRANSACTIONCODES T8 ON (T8.POS='QFUND1' AND T8.POSTRANCD=T1.POSTRANCD)
			LEFT JOIN WORK.VOIDS_QF1I T10 ON (T10.DEALNBR=T1.DEALNBR AND T10.DEALTRANNBR=T1.DEALTRANNBR AND T10.POSAPPLIEDCD=T1.POSAPPLIEDCD AND T10.POSTRANCD=T1.POSTRANCD)
		WHERE T1.TRANCREATEDT > &THIRTYDAYS. AND T2.ST_PVC_CD NE "CO";
%RUNQUIT(&job,&sub3);

/* SORT POS INFORMATION */
/* STORE IN SAS DATA FOLDER */
PROC SORT DATA=WORK.TRANSACTION_TABLE_QF1_UPDATEI OUT=TRANSACTION_TABLE_QF1_UPDATEI NODUPKEY DUPOUT=DUPSDELETEQF1I;
BY DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD TRANAMT TITLE_DEALNBR;
%RUNQUIT(&job,&sub3);


PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
RUN;

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\QFUND1_QFUND2",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\QFUND1_QFUND2\DIR2\",'G');
RUN;

PROC SQL;
    INSERT INTO SKY.TRAN_DATAMART_QF1I (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM TRANSACTION_TABLE_QF1_UPDATEI;
QUIT;

/* STOP TIMER */
DATA _NULL_;
  DUR = DATETIME() - &_TIMER_START;
  PUT 30*'-' / ' TOTAL DURATION:' DUR TIME13.2 / 30*'-';
RUN;


/*UPLOAD QF1*/
%INCLUDE "&TRAN_FILE_PATH.\TRANSACTION_UPLOAD_QF1I.SAS";
