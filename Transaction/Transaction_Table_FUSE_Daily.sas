*ERROR CHECKING;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\TRANSACTION_DATAMART_DAILY\TRANSACTION_TABLE_ERROR_CHECK.SAS";

*LIBNAME STATEMENTS;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\LIBNAME_STATEMENTS.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";

LIBNAME OMNICORE postgres 
	server=CLTEDBPROD1 
	port=5444 
	user=&EDBUSER. 
	password=&EDBPASSWORD. 
	db='coredb' 
	schema='sc_core';

LIBNAME OMNIREF postgres 
	server=CLTEDBPROD1 
	port=5444 user=&EDBUSER. 
	password=&EDBPASSWORD. 
	db='coredb' 
	schema='sc_reference_data';

LIBNAME OMNIFODS postgres 
	server=CLTEDBPROD1 
	port=5444 user=&EDBUSER. 
	password=&EDBPASSWORD. 
	db='coredb' 
	schema='sc_ods_fin';


/* MACROS FOR SELECTING DATA */
%PUT &SYSUSERID;
%LET START=INTNX('DTDAY',DHMS(18628,0,0,0),1,'BEGINNING');
%LET THIRTYDAYS=INTNX('DTDAY',DHMS(%SYSFUNC(TODAY()),0,0,0),-5,'BEGINNING');
%PUT &THIRTYDAYS;
%PUT &START;

DATA _NULL_;
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
RUN;
/* START TIMER */
%LET _TIMER_START = %SYSFUNC(DATETIME());

DATA _NULL_;
%LET _SYSTEM = 'QFUND_X';
RUN;

%PUT &_SYSTEM;

PROC SQL;
CREATE TABLE WORK.QFX_TRAN_BASE AS
	SELECT
		T1.PRODUCT_CATEGORY_CD AS PRODUCT,
		T1.PRODUCT_CATEGORY_CD AS PRODUCTDESC,
		T1.SOURCE_SYSTEM_CD AS POS,
		T1.SOURCE_SYSTEM_CD AS INSTANCE,
		T5.STATE_CD AS STATE,
		T1.CENTER_NBR AS LOCNBR,
		T4.CENTER_CD AS CHANNELCD,
		T3.SSN_ENCRYPTED AS SSN,
		T2.OMNI_CUSTOMER_ID AS OMNINBR,
		T1.SOURCE_CUSTOMER_ID AS CUSTNBR,
		DATEPART(T6.ORIGINATION_DTTM) AS DEAL_DT,
		T6.ORIGINATION_DTTM AS DEAL_DTTM,
		T1.SOURCE_PRODUCT_ID AS DEALNBR,
		T1.SOURCE_TRANSACTION_ID AS DEALTRANNBR,
		T1.TRANSACTION_ID_OTHER AS ORIGTRANNBR,
		CASE
			WHEN T1.REVERSAL_CD = 'VOID' THEN 'V'
			WHEN T1.REVERSAL_CD = 'RESCIND' THEN 'R'
			ELSE 'NONE'
		END AS VOIDFLG,
		CASE
			WHEN T1.REVERSAL_CD NE 'NONE' THEN T1.SOURCE_MODIFIED_DTTM
			ELSE ' 'dt
		END AS VOIDDT,
		T1.PRODUCT_STATUS_CD_CURRENT AS DEALSTATUSCD,
		T1.SOURCE_TRANSACTION AS POSTRANCD,
		T1.TRANSACTION_DTTM AS TRANDT,
		T1.SOURCE_CREATED_DTTM AS TRANCREATEDT,
		DHMS(DATEPART(T1.SOURCE_CREATED_DTTM),0,0,0) as BUSINESSDT,
		DATEPART(T1.TRANSACTION_DTTM) AS TRANDATE,
		%SYSFUNC(DATETIME()) AS UPDATEDT FORMAT = datetime.,
		T1.SOURCE_USER AS CREATEUSR,
		T1.TRANSACTION_CD
	FROM OMNICORE.TRANSACTION_MASTER T1
		LEFT JOIN OMNICORE.CUSTOMER_MASTER T2 ON (T1.SOURCE_SYSTEM_CD = T2.SOURCE_SYSTEM_CD AND T1.SOURCE_CUSTOMER_ID = T2.SOURCE_CUSTOMER_ID)
		LEFT JOIN OMNICORE.CUSTOMER_SSN T3 ON (T1.SOURCE_SYSTEM_CD = T3.SOURCE_SYSTEM_CD AND T1.SOURCE_CUSTOMER_ID = T3.SOURCE_CUSTOMER_ID)
		LEFT JOIN OMNICORE.CENTER_MASTER T4 ON (T1.CENTER_NBR = T4.CENTER_NBR)
		LEFT JOIN OMNICORE.LOCATION_ADDRESS T5 ON (T4.LOCATION_ID = T5.LOCATION_ID)
		LEFT JOIN OMNICORE.PRODUCT_MASTER T6 ON (T1.SOURCE_SYSTEM_CD = T6.SOURCE_SYSTEM_CD AND T1.SOURCE_PRODUCT_ID = T6.SOURCE_PRODUCT_ID)
	WHERE T1.SOURCE_SYSTEM_CD IN (&_SYSTEM)
	AND DEALNBR NE '0'
	AND T1.SOURCE_DELETED_FLG = 'N'
	AND T1.TRANSACTION_DTTM > &THIRTYDAYS;
%RUNQUIT(&job,&sub20);

PROC SQL;
CREATE TABLE WORK.QFX_TRAN_DETAIL AS
	SELECT
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_TRANSACTION_ID,
		T1.SOURCE_DETAIL,
		T1.DETAIL_AMT,
		CASE
			WHEN T1.FINANCIAL_CD = 'TENDER' THEN T1.SOURCE_DETAIL
			ELSE ' '
		END AS MONETARY_CD
	FROM OMNICORE.TRANSACTION_DETAIL T1
	WHERE T1.SOURCE_SYSTEM_CD IN (&_SYSTEM) AND T1.FINANCIAL_CD = 'ITEM'
	AND T1.SOURCE_TRANSACTION_ID IN (SELECT DEALTRANNBR FROM WORK.QFX_TRAN_BASE)
	AND T1.SOURCE_DELETED_FLG = 'N';
%RUNQUIT(&job,&sub20);

PROC SQL;
CREATE TABLE WORK.QFX_TRAN_MULTI_MCD AS
	SELECT
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_TRANSACTION_ID,
		COUNT(*) AS MULTI_COUNT
	FROM OMNICORE.TRANSACTION_DETAIL T1
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM AND T1.FINANCIAL_CD = 'TENDER'
	AND T1.SOURCE_TRANSACTION_ID IN (SELECT DEALTRANNBR FROM WORK.QFX_TRAN_BASE)
	AND T1.SOURCE_DELETED_FLG = 'N'
	AND T1.DETAIL_CD NE 'UNKNOWN'
	GROUP BY T1.SOURCE_SYSTEM_CD, SOURCE_TRANSACTION_ID
	HAVING COUNT(*) > 1;
%RUNQUIT(&job,&sub20);

PROC SQL;
CREATE TABLE WORK.QFX_TRAN_MONETARYCODE AS
	SELECT
		T1.SOURCE_SYSTEM_CD,
		T1.SOURCE_TRANSACTION_ID,
		T1.SOURCE_DETAIL,
		T1.DETAIL_AMT,
		CASE
			WHEN T1.FINANCIAL_CD = 'TENDER' AND T1.SOURCE_TRANSACTION_ID IN (SELECT SOURCE_TRANSACTION_ID FROM WORK.QFX_TRAN_MULTI_MCD) THEN 'MULTI'
			WHEN T1.FINANCIAL_CD = 'TENDER' THEN T1.SOURCE_DETAIL
			ELSE ' '
		END AS MONETARY_CD
	FROM OMNICORE.TRANSACTION_DETAIL T1
	WHERE T1.SOURCE_SYSTEM_CD = &_SYSTEM AND T1.FINANCIAL_CD = 'TENDER'
	AND T1.SOURCE_TRANSACTION_ID IN (SELECT DEALTRANNBR FROM WORK.QFX_TRAN_BASE)
	AND T1.SOURCE_DELETED_FLG = 'N'
	AND T1.SEQUENCE_NBR = '1'
	AND T1.DETAIL_CD NE 'UNKNOWN';
%RUNQUIT(&job,&sub20);

PROC SQL;
CREATE TABLE WORK.SIGNS AS
	SELECT 
		TRANSACTION_CD,
		CASE
			WHEN REVERSAL_CD = 'VOID' THEN 'V'
			WHEN REVERSAL_CD = 'RESCIND' THEN 'R'
			ELSE 'NONE'
		END AS REVERSAL_CD,
		ASSIGNED_SIGN
		FROM OMNIREF.TRANSACTION_CODE_SIGNS;
%RUNQUIT(&job,&sub20);

PROC SQL;
CREATE TABLE WORK.QFX_COMBINED AS
	SELECT
		T1.*,
		UPPER(T2.SOURCE_DETAIL) AS POSAPPLIEDCD,
		(T2.DETAIL_AMT * T3.ASSIGNED_SIGN) AS TRANAMT
	FROM WORK.QFX_TRAN_BASE T1
		LEFT JOIN WORK.QFX_TRAN_DETAIL T2 ON (T1.INSTANCE = T2.SOURCE_SYSTEM_CD AND T1.DEALTRANNBR = T2.SOURCE_TRANSACTION_ID)
		LEFT JOIN WORK.SIGNS T3 ON (T1.TRANSACTION_CD = T3.TRANSACTION_CD AND T1.VOIDFLG = T3.REVERSAL_CD);
%RUNQUIT(&job,&sub20);

PROC SQL;
CREATE TABLE WORK.TRANSACTION_QFX_UPLOAD AS
	SELECT
		CASE 
        	WHEN (substr(T1.PRODUCT,3,1)) = "T" then "TITLE"
         	WHEN T1.PRODUCT LIKE "CM%" THEN "INSTALLMENT"
			WHEN T1.PRODUCT LIKE "OM%" THEN "LINEOFCREDIT" 
          	ELSE "PAYDAY" 
        END AS PRODUCT length=20 format=$20.,
		CASE
			WHEN T1.PRODUCTDESC = 'CSC' THEN "Single Pay Check"
			WHEN T1.PRODUCTDESC = 'CSA' THEN "Single Pay ACH"
			WHEN T1.PRODUCTDESC = 'CSU' THEN "Single Pay Unsecured"
			WHEN T1.PRODUCTDESC = 'CMC' THEN "Multi Pay Check"
			WHEN T1.PRODUCTDESC = 'CMA' THEN "Multi Pay ACH"
			WHEN T1.PRODUCTDESC = 'CMU' THEN "Multi Pay Unsecured"
			WHEN T1.PRODUCTDESC = 'OMA' THEN "Multi Pay ACH"
			WHEN T1.PRODUCTDESC = 'OMC' THEN "Multi Pay CHECK"
			WHEN T1.PRODUCTDESC = 'OMU' THEN "Multi Pay Unsecured"
			WHEN SUBSTR(T1.PRODUCTDESC,3,1) = 'T' THEN "Title"
			ELSE "UNKNOWN"
		END AS PRODUCTDESC length=30 format=$30.,
		CASE
			WHEN T1.POS = 'LOANGUARD' THEN 'ONLINE'
			WHEN T1.POS IN ('QFUND_1', 'QFUND_2', 'QFUND_3', 'QFUND_4','QFUND_5','QFUND_X') THEN 'QFUND'
			ELSE T1.POS
		END AS POS length=20 format=$20.,
		CASE
			WHEN T1.INSTANCE = 'EADVANTAGE' THEN 'EAPROD1'
			WHEN T1.INSTANCE = 'LOANGUARD' THEN 'AANET'
			WHEN T1.INSTANCE = 'QFUND_1' THEN 'QFUND1'
			WHEN T1.INSTANCE = 'QFUND_2' THEN 'QFUND2'
			WHEN T1.INSTANCE = 'QFUND_3' THEN 'QFUND3'
			WHEN T1.INSTANCE = 'QFUND_4' THEN 'QFUND4'
			WHEN T1.INSTANCE = 'QFUND_5' THEN 'QFUND5'
			WHEN T1.INSTANCE = 'QFUND_X' THEN 'FUSE'
			WHEN T1.INSTANCE = 'NEXTGEN' THEN 'NG'
			WHEN T1.INSTANCE = 'OMNI' THEN 'OMNI'
		END AS INSTANCE length=20 format=$20.,
		T1.CHANNELCD,
		T1.STATE length=2 format=$2.,
		T1.LOCNBR,
		T1.SSN length=15 format=$15.,
		T1.CUSTNBR,
		COMPRESS(PUT(T1.OMNINBR,30.)) AS OMNINBR,
		DHMS(T1.DEAL_DT,0,0,0) AS DEAL_DT FORMAT=DATETIME20.,
		T1.DEAL_DTTM,
		T1.DEALNBR length=15 format=$15.,
		'0' AS TITLE_DEALNBR length=15 format=$15.,
		T1.DEALTRANNBR length=15 format=$15.,
		T1.ORIGTRANNBR length=15 format=$15.,
		T1.VOIDFLG length=4 format=$4.,
		T1.VOIDDT,
		CASE
			WHEN T1.DEALSTATUSCD IN ('CURRENT','DELINQUENT','PENDINGCLOSED') THEN 'OPN'
			WHEN T1.DEALSTATUSCD IN ('DEFAULT','NONCURRENT') THEN 'DEF'
			WHEN T1.DEALSTATUSCD IN ('CLOSED','OVERPAID') THEN 'CLO'
			WHEN T1.DEALSTATUSCD IN ('WRITEOFF') THEN 'WO'
			WHEN T1.DEALSTATUSCD IN ('VOID') THEN 'V'
			ELSE 'UNK'
		END AS DEALSTATUSCD length=15 format=$15.,
		T1.POSTRANCD length=50 format=$50.,
		T2.STNDTRANCD,
		T1.POSAPPLIEDCD length=20 format=$20.,
		T3.STNDAPPLIEDCD AS STNDAPPLIEDCD,
		T2.CI_FLG,
		T4.MONETARY_CD AS MONETARYCD length=15 format=$15.,
		T1.TRANAMT,
		T1.TRANDT,
		T1.TRANCREATEDT,
		T1.BUSINESSDT FORMAT = DATETIME20.,
		DHMS(T1.TRANDATE,0,0,0) AS TRANDATE FORMAT = DATETIME20.,
		T1.UPDATEDT,
		' ' AS NCP_IND,
		INPUT(T1.CREATEUSR,30.) AS CREATEUSR
	FROM WORK.QFX_COMBINED T1
		LEFT JOIN BIOR.L_TRANSACTIONCODES T2 ON (T2.POS = 'FUSE' AND COMPRESS(T1.POSTRANCD) = COMPRESS(T2.POSTRANCD))
		LEFT JOIN BIOR.L_APPLIEDCODES T3 ON (COMPRESS(T1.POSAPPLIEDCD) = COMPRESS(T3.POSAPPLIEDCD))
		LEFT JOIN WORK.QFX_TRAN_MONETARYCODE T4 ON (T1.INSTANCE = T4.SOURCE_SYSTEM_CD AND T1.DEALTRANNBR = T4.SOURCE_TRANSACTION_ID);
%RUNQUIT(&job,&sub20);

PROC SORT DATA=WORK.TRANSACTION_QFX_UPLOAD OUT=WORK.TRANSACTION_TABLE_QFX_UPDATE NODUPKEY DUPOUT=WORK.DUPS;
BY INSTANCE DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD TRANDATE;
%RUNQUIT(&job,&sub20);

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
RUN;

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\FUSE",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\FUSE\DIR2\",'G');
RUN;

PROC SQL;
    INSERT INTO SKY.TRAN_DATAMART_FUSE (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM WORK.TRANSACTION_TABLE_QFX_UPDATE;
QUIT;

/*UPLOAD NG*/
%INCLUDE "&TRAN_FILE_PATH.\TRANSACTION_UPLOAD_FUSE.SAS";


/* STOP TIMER */
DATA _NULL_;
  DUR = DATETIME() - &_TIMER_START;
  PUT 30*'-' / ' TOTAL DURATION:' DUR TIME13.2 / 30*'-';
RUN;

