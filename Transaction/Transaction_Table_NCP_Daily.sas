*LIBNAME STATEMENTS;
%include "E:\Shared\CADA\SAS Source Code\Development\nrochester\Libname_Statements.sas";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";

*Wait For Macro;

/* MACROS FOR SELECTING DATA */
%PUT &SYSUSERID;
%LET START=INTNX('DTDAY',DHMS(18628,0,0,0),1,'BEGINNING');
%LET THIRTYDAYS=INTNX('DTDAY',DHMS(%SYSFUNC(TODAY()),0,0,0),-5,'BEGINNING');
%PUT &START;
%PUT &THIRTYDAYS;

DATA _NULL_;
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
RUN;
PROC SQL;
CREATE TABLE WORK.CSO_LOAN_TRANSACTION_QF5 AS 
SELECT T1.*
FROM NCP.NCP_LOAN_TRANSACTION T1
WHERE CREATE_DATE_TIME > &THIRTYDAYS. 
  AND T1.LOAN_CODE NOT IN (SELECT DEALNBR1 FROM TEMPTABL.O_DT_CSO_5_YEAR);
QUIT;

PROC SQL;
	CREATE TABLE DST_DN AS 
	SELECT DISTINCT LOAN_CODE
	FROM WORK.CSO_LOAN_TRANSACTION_QF5;
QUIT;

PROC SQL;
	CREATE TABLE TEMP AS
	SELECT DISTINCT A.*,
		   B.SSN,
		   A.LOAN_DATE AS DEAL_DT FORMAT=DATETIME20.,
		   C.BO_CODE AS CUSTNBR1,
		   C.ST_CODE 
	FROM NCP.NCP_LOAN_SUMMARY A 
		LEFT JOIN NCP.NCP_CUSTOMER B ON (A.BO_CODE=B.BO_CODE)
		LEFT JOIN EDW.CSO_APPLICATION_INFO C ON (C.APP_NO=A.LOAN_CODE)
WHERE A.LOAN_CODE IN (SELECT LOAN_CODE FROM WORK.DST_DN);
QUIT;

/* SORT LOAN TRANSACTION INFORMATION */
PROC SORT DATA=WORK.CSO_LOAN_TRANSACTION_QF5 OUT=WORK.CSO_LOAN_TRANSACTION_QF51;
BY LOAN_ID LOAN_CODE LOAN_TRAN_CODE TRAN_ID ORIG_TRAN_CODE TENDER_TYPE;
RUN;

DATA WORK.CSO_LOAN_TRANSACTION_QF5 (RENAME=(PAY_CRF_FEE=CRF_FEE PAY_CSO_FEE=CSO_FEE PAY_NSF_FEE=NSF_FEE));
SET WORK.CSO_LOAN_TRANSACTION_QF51;
IF TRAN_ID IN ('ADV','AGN','ROL') AND TRANSACTION_AMOUNT>0 AND PAY_PRINCIPAL=0 THEN PAY_PRINCIPAL=TRANSACTION_AMOUNT;
RUN;

/* TRANSPOSE APPLIED CODE COLUMNS DOWN FROM LOAN TRANSACTION */
PROC TRANSPOSE DATA=WORK.CSO_LOAN_TRANSACTION_QF5 OUT=WORK.LOAN_TRANSPOSE_QF5;
VAR PAY_PRINCIPAL PAY_INTEREST CRF_FEE CSO_FEE UNPAID_CRF_FEE;
BY LOAN_ID LOAN_CODE LOAN_TRAN_CODE TRAN_ID ORIG_TRAN_CODE VOID_ID TRAN_DATE CREATE_DATE_TIME TENDER_TYPE LOAN_STATUS_ID;
RUN;

/* ONLY TAKE TRANSACTIONS THAT ARE NOT ZERO FOR JOINING */
DATA WORK.LOAN_TRANSPOSE_NOZEROQF5 (RENAME=(COL1=TRANAMT _name_=POSAPPLIEDCD));
SET WORK.LOAN_TRANSPOSE_QF5;
WHERE COL1 NOT IN (0,.);
RUN;

/* JOIN BASE POS INFORMATION TOGETHER */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF51 AS	
		SELECT 
			C.ST_CODE AS LOCNBR,
			A.LOAN_CODE AS DEALNBR1,
			A.LOAN_ID,
			A.LOAN_TRAN_CODE AS DEALTRANNBR1,
			A.ORIG_TRAN_CODE AS ORIGTRANNBR1,
			A.VOID_ID AS VOIDFLG,
			A.TRAN_ID AS POSTRANCD,
			A.TRAN_DATE AS TRANDT,
			A.POSAPPLIEDCD,
			A.TRANAMT,
			A.CREATE_DATE_TIME AS TRANCREATEDT FORMAT=DATETIME20.,
			C.DEAL_DT,
			C.PRODUCT_TYPE AS PRODUCTCD,
			C.CUSTNBR1,
			A.LOAN_STATUS_ID AS DEALSTATUSCD LENGTH=15,
			C.SSN,
			A.TENDER_TYPE AS MONETARYCD LENGTH=15
		FROM WORK.LOAN_TRANSPOSE_NOZEROQF5 A
			LEFT JOIN WORK.TEMP C ON (C.LOAN_ID=A.LOAN_ID)
		WHERE A.CREATE_DATE_TIME > &THIRTYDAYS.;
QUIT;

/* CONVERT NUMERIC FIELDS TO CHARACTER */
DATA TRANSACTION_TABLE_QF5 (DROP=DEALNBR1 DEALTRANNBR1 ORIGTRANNBR1 CUSTNBR1);
	SET TRANSACTION_TABLE_QF51;
     IF PUT(CUSTNBR1,15.)~='.'            THEN CUSTNBR=PUT(STRIP(CUSTNBR1),15.);
ELSE IF PUT(STRIP(CUSTNBR1),15.)='.'      THEN CUSTNBR='';
     IF PUT(STRIP(DEALNBR1),15.)~='.'     THEN DEALNBR=PUT(STRIP(DEALNBR1),15.);
ELSE IF PUT(STRIP(DEALNBR1),15.)='.'      THEN DEALNBR='';
	 IF PUT(STRIP(DEALTRANNBR1),15.)~='.' THEN DEALTRANNBR=PUT(STRIP(DEALTRANNBR1),15.);
ELSE IF PUT(DEALTRANNBR1,15.)='.'         THEN DEALTRANNBR='';
	 IF PUT(STRIP(ORIGTRANNBR1),15.)~='.' THEN ORIGTRANNBR=PUT(STRIP(ORIGTRANNBR1),15.);
ELSE IF PUT(STRIP(ORIGTRANNBR1),15.)='.'  THEN ORIGTRANNBR='';
RUN;

/* FILTER VOIDED TRANSACTIONS INTO SEPARATE TABLE                        */
/* RENAME ORIGTRANNBR TO DEALTRANNBR FOR LATER JOINING BACK TO THE TABLE */
PROC SQL;
	CREATE TABLE VOIDS_QF5 AS 
		SELECT 
			LOCNBR,
			DEALNBR,
			LOAN_ID,
			ORIGTRANNBR AS DEALTRANNBR,
			VOIDFLG,
			POSTRANCD,
			TRANDT AS VOIDDT,
			POSAPPLIEDCD,
			TRANAMT,
			TRANCREATEDT FORMAT=DATETIME20.,
			PRODUCTCD,
			CUSTNBR,
			DEALSTATUSCD,
			MONETARYCD
		FROM TRANSACTION_TABLE_QF5
		WHERE VOIDFLG IN ('V','R');
QUIT;

/* CREATE 5 YEAR PORTION OF POS INFORMATION */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF5_UPDATE AS
		SELECT DISTINCT
			(CASE WHEN T1.PRODUCTCD = "TLP" THEN "TITLE" 
				  WHEN T1.PRODUCTCD = "ILP" THEN "INSTALLMENT" 
				  WHEN T1.PRODUCTCD = "PDL" THEN "PAYDAY"
				  ELSE "UNKNOWN" END) AS 
            	  PRODUCT LENGTH=20 FORMAT=$20.,
			(CASE WHEN T1.PRODUCTCD = "TLP" THEN "OH CSO TITLE" 
                  WHEN T1.PRODUCTCD = "ILP"  THEN "OH CSO INSTALLMENT"
				  WHEN T1.PRODUCTCD = "PDL" THEN "CSO CASH ADVANCE"
                  ELSE "UNKNOWN" END)
				  AS PRODUCTDESC  LENGTH=30 FORMAT=$30.,
			'QFUND' AS POS LENGTH=20  FORMAT=$20.,
			'QFUND5' AS INSTANCE LENGTH=20  FORMAT=$20.,
			'STOREFRONT'		AS CHANNELCD,
			T2.ST_PVC_CD AS STATE LENGTH=2 FORMAT=$2.,
			T1.LOCNBR,
			T1.SSN,
			T1.CUSTNBR,
			''		AS OMNINBR,
			DHMS(DATEPART(T1.DEAL_DT),0,0,0) AS DEAL_DT 		FORMAT=DATETIME20.,
			T1.DEAL_DT AS DEAL_DTTM								FORMAT=DATETIME20.,
			T1.DEALNBR,
			LEFT("0") AS TITLE_DEALNBR LENGTH=15 FORMAT=$15.,
			T1.DEALTRANNBR,
			T1.ORIGTRANNBR,
			T1.VOIDFLG LENGTH=2 FORMAT=$2.,
			T10.VOIDDT,
			T1.DEALSTATUSCD LENGTH=15,
			T1.POSTRANCD LENGTH=50 FORMAT=$50.,
   COALESCE(T8.STNDTRANCD,'UNKNOWN') AS STNDTRANCD LENGTH=25 FORMAT=$25.,
			T1.POSAPPLIEDCD LENGTH=50 FORMAT=$50.,
 (CASE WHEN T1.POSTRANCD='PAY' AND T1.POSAPPLIEDCD='IFC' THEN 'INTEREST FEE CHARGED' ELSE
   COALESCE(T7.STNDAPPLIEDCD,'UNKNOWN')END) AS STNDAPPLIEDCD LENGTH=20 FORMAT=$20.,
 (CASE WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD CONTAINS  'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.POSTRANCD CONTAINS  'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD CONTAINS  'ECC' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
	   WHEN T1.POSTRANCD CONTAINS  'ECC' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD IN ('ACHP','ACHPP') THEN 'Y'
	   WHEN T1.POSTRANCD IN ('ACHD') THEN 'N'
	   ELSE T8.CI_FLG END) AS CI_FLG,
			T1.MONETARYCD,
			T1.TRANAMT,
			T1.TRANDT,
			T1.TRANCREATEDT,
			DHMS(DATEPART(T1.TRANCREATEDT),0,0,0) AS BUSINESSDT FORMAT=DATETIME20.,
			DHMS(DATEPART(T1.TRANDT),0,0,0) 	  AS TRANDATE   FORMAT=DATETIME20.,
			%SYSFUNC(DATETIME()) AS UPDATEDT FORMAT=DATETIME20.,
			"N" AS NCP_IND LENGTH=1,
			. AS CREATEUSR
		FROM TRANSACTION_TABLE_QF5 T1
			LEFT JOIN EDW.D_LOCATION T2 ON T2.LOC_NBR=T1.LOCNBR
			LEFT JOIN BIOR.L_APPLIEDCODES T7 ON T7.POSAPPLIEDCD=T1.POSAPPLIEDCD
			LEFT JOIN BIOR.L_TRANSACTIONCODES T8 ON (T8.POS='QFUND5' AND T8.POSTRANCD=T1.POSTRANCD)
			LEFT JOIN WORK.VOIDS_QF5 T10 ON (T10.LOAN_ID=T1.LOAN_ID AND T10.DEALTRANNBR=T1.DEALTRANNBR AND T10.POSAPPLIEDCD=T1.POSAPPLIEDCD AND T10.POSTRANCD=T1.POSTRANCD)
		WHERE T1.TRANCREATEDT > &THIRTYDAYS.;
QUIT;

/* SORT POS INFORMATION */
/* STORE IN SAS DATA FOLDER */
PROC SORT DATA=WORK.TRANSACTION_TABLE_QF5_UPDATE OUT=TRANDM.TRANSACTION_TABLE_QF5_NCP NODUP DUPOUT=DUPSDELETEQF5;
BY DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD TRANAMT TITLE_DEALNBR;
RUN;