*Error Checking;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\TRANSACTION_DATAMART_DAILY\TRANSACTION_TABLE_ERROR_CHECK.SAS";

*WAIT FOR MACRO;
/*%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SAS MACRO\ETL_CHECK.SAS";*/
/*%ETL_CHECK(QFUND1)*/

*LIBNAME STATEMENTS;
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\NROCHESTER\LIBNAME_STATEMENTS.SAS";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";

*EG Conditional DropDS Macro for SAS Foundation;

/*%include "E:\Shared\CADA\SAS Source Code\Development\nrochester\TRANSACTION_DATAMART_DAILY\Drop_Dataset_Macro.sas";*/

/*%_EG_CONDITIONAL_DROPDS(TRANDM.TRANSACTION_TABLE_QF2_UPDATE);*/

*CUSTOMER JOIN PROGRAM;
%INCLUDE "E:\SHARED\CADA\SAS Source Code\Development\nrochester\TRANSACTION_DATAMART_DAILY\CUSTOMER_SSN_MACRO.SAS";
%SSN(QFUND2);

DATA _NULL_;
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
RUN;
/* MACROS FOR SELECTING DATA */
%PUT &SYSUSERID;
%LET START=INTNX('DTDAY',DHMS(18628,0,0,0),1,'BEGINNING');
%LET THIRTYDAYS=INTNX('DTDAY',DHMS(%SYSFUNC(TODAY()),0,0,0),-5,'BEGINNING');
%PUT &START;
%PUT &THIRTYDAYS;

/* START TIMER */
%LET _TIMER_START = %SYSFUNC(DATETIME());

/* DOWNLOAD LOAN INFORMATION */
PROC SQL;
	CONNECT TO ORACLE(USER=&USER. PASSWORD=&PASSWORD. PATH='EDWPRD');
	CREATE TABLE WORK.DEAL_DIM AS
	SELECT *
	FROM CONNECTION TO ORACLE
	(
		SELECT A.*
		FROM EDW_STAR.DEAL_DIM A
		INNER JOIN
			(
				SELECT A.*
					  ,B.STATE_PROVINCE_CD
				FROM EDW_STAR.TRANSACTION_FACT A 
				LEFT JOIN EDW_STAR.LOCATION_DIM B 
					ON (A.LOCATION_ID=B.LOCATION_ID)
				WHERE B.STATE_PROVINCE_CD = 'CO' AND TRUNC(A.ETL_DT) >= TRUNC(CURRENT_DATE)-5 AND A.LOCATION_ID ^= -1
			) B
			ON (A.DEAL_ID = B.DEAL_ID)
		WHERE A.SOURCE_SYSTEM = 'QF2'
	)
	;
	DISCONNECT FROM ORACLE;
%RUNQUIT(&job,&sub5);

/* DOWNLOAD CUSTOMER ACCT INFORMATION */
DATA WORK.CUSTOMER_DIM;
SET EDW_STAR.CUSTOMER_DIM;
WHERE SOURCE_SYSTEM="QF2";
%RUNQUIT(&job,&sub5);

/* FILTER TRANSACTION INFORMATION WHERE LOCID = COLORADO */
PROC SQL;
	CONNECT TO ORACLE(USER=&USER. PASSWORD=&PASSWORD. PATH='EDWPRD');
	CREATE TABLE WORK.TRANSACTION_TABLE_QF2_PRE3 AS
	SELECT *
	FROM CONNECTION TO ORACLE
	(
		SELECT A.*
			  ,B.STATE_PROVINCE_CD
		FROM EDW_STAR.TRANSACTION_FACT A 
		LEFT JOIN EDW_STAR.LOCATION_DIM B 
			ON (A.LOCATION_ID=B.LOCATION_ID)
		WHERE B.STATE_PROVINCE_CD = 'CO' AND TRUNC(A.ETL_DT) >= TRUNC(CURRENT_DATE)-5 AND A.LOCATION_ID ^= -1
	)
	;
	DISCONNECT FROM ORACLE;
%RUNQUIT(&job,&sub5);

/* JOIN BASE POS INFORMATION TOGETHER */
PROC SQL;
CREATE TABLE TRANSACTION_TABLE_QF2_PRE2 AS 
	SELECT A.*,
		   B.DEAL_NBR AS DEALNBR1,
		   B.DEAL_STATUS_CD AS DEALSTATUSCD LENGTH=15,
		   B.DEAL_DATE AS DEAL_DT FORMAT=DATETIME20.
	FROM WORK.TRANSACTION_TABLE_QF2_PRE3 A
		INNER JOIN WORK.DEAL_DIM B ON (B.DEAL_ID=A.DEAL_ID)
		WHERE DATEPART(A.ETL_DT) > TODAY()-120 /*&THIRTYDAYS.*/ AND A.PRODUCT_ID=12/* AND B.SOURCE_SYSTEM="QF2"*/;
%RUNQUIT(&job,&sub5);


/* IDENTIFY VOIDS */
DATA WORK.TRANSACTION_TABLE_QF2_PRE1;
SET WORK.TRANSACTION_TABLE_QF2_PRE2 (KEEP=DEALNBR1 TRANSACTION_NBR ORIGINAL_TRANSACTION_NBR TRANSACTION_DATE_KEY
DEAL_ID VOID_ID PRODUCT_ID APPLIED_CD_ID TRANSACTIONTYPE_ID LOCATION_ID CUSTOMER_ID AMOUNT ETL_DT DEALSTATUSCD DEAL_DT);
IF VOID_ID=-1 THEN VOIDFLG="N";
ELSE IF VOID_ID=2 THEN VOIDFLG="Y";
ELSE IF VOID_ID=5 THEN VOIDFLG="R";
%RUNQUIT(&job,&sub5);

/* JOIN BASE POS INFORMATION TOGETHER */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF2_PRE AS	
		SELECT 
			G.LOCATION_NBR AS LOCNBR,
			A.DEALNBR1 /* AS DEALNBR1*/,
			A.TRANSACTION_NBR AS DEALTRANNBR1,
			A.ORIGINAL_TRANSACTION_NBR AS ORIGTRANNBR1,
			A.VOIDFLG/*B.IS_VOID AS VOIDFLG*/,
			A.DEAL_DT,
			F.TRANSACTION_CD AS POSTRANCD,
			A.TRANSACTION_DATE_KEY AS TRANDT,
			E.APPLIED_CD AS POSAPPLIEDCD,
			A.AMOUNT AS TRANAMT,
			A.ETL_DT AS TRANCREATEDT FORMAT=DATETIME20.,
 (CASE WHEN A.PRODUCT_ID=12 THEN "I" END) AS PRODUCTCD,
			I.CUSTOMER_NBR AS CUSTNBR1,
			I.SSN AS SSN,
			A.DEALSTATUSCD /*AS DEALSTATUSCD LENGTH=15*/,
			H.TENDERTYPE_ID
		FROM WORK.TRANSACTION_TABLE_QF2_PRE1 A
			LEFT JOIN EDW_STAR.APPLIEDCODE_DIM E ON (E.APPLIED_CD_ID=A.APPLIED_CD_ID)
			LEFT JOIN EDW_STAR.TRANSACTIONTYPE_DIM F ON (F.TRANSACTIONTYPE_ID=A.TRANSACTIONTYPE_ID)
			LEFT JOIN EDW_STAR.LOCATION_DIM G ON (G.LOCATION_ID=A.LOCATION_ID)
			LEFT JOIN EDW_STAR.RECEIPT_DISBURSED_FACT H ON (H.DEAL_ID=A.DEAL_ID AND H.TRANSACTION_NBR=A.TRANSACTION_NBR)
			LEFT JOIN WORK.CUSTOMER_DIM I ON (I.CUSTOMER_ID=A.CUSTOMER_ID)
		WHERE A.ETL_DT > &THIRTYDAYS. /*AND D.PRODUCT_CD = "I"*/;
%RUNQUIT(&job,&sub5);

/* JOIN TENDERTYPE INFORMATION TO THE TABLE */
PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_QF21 AS 
		SELECT A.*,
			   B.TENDERTYPE_CD AS MONETARYCD LENGTH=15
		FROM TRANSACTION_TABLE_QF2_PRE A
			LEFT JOIN EDW_STAR.TENDERTYPE_DIM B ON (B.TENDERTYPE_ID=A.TENDERTYPE_ID);
%RUNQUIT(&job,&sub5);

/* CONVERT NUMERIC FIELDS TO CHARACTER */
DATA TRANSACTION_TABLE_QF2 (DROP=DEALNBR1 DEALTRANNBR1 ORIGTRANNBR1 CUSTNBR1);
	SET TRANSACTION_TABLE_QF21;
     IF PUT(CUSTNBR1,15.)~='.'            THEN CUSTNBR=PUT(STRIP(CUSTNBR1),15.);
ELSE IF PUT(STRIP(CUSTNBR1),15.)='.'      THEN CUSTNBR='';
     IF PUT(STRIP(DEALNBR1),15.)~='.'     THEN DEALNBR=PUT(STRIP(DEALNBR1),15.);
ELSE IF PUT(STRIP(DEALNBR1),15.)='.'      THEN DEALNBR='';
	 IF PUT(STRIP(DEALTRANNBR1),15.)~='.' THEN DEALTRANNBR=PUT(STRIP(DEALTRANNBR1),15.);
ELSE IF PUT(DEALTRANNBR1,15.)='.'         THEN DEALTRANNBR='';
	 IF PUT(STRIP(ORIGTRANNBR1),15.)~='.' THEN ORIGTRANNBR=PUT(STRIP(ORIGTRANNBR1),15.);
ELSE IF PUT(STRIP(ORIGTRANNBR1),15.)='.'  THEN ORIGTRANNBR='';
%RUNQUIT(&job,&sub5);

/* FILTER VOIDED TRANSACTIONS INTO SEPARATE TABLE                        */
/* RENAME ORIGTRANNBR TO DEALTRANNBR FOR LATER JOINING BACK TO THE TABLE */
PROC SQL;
	CREATE TABLE VOIDS_QF2 AS 
		SELECT 
			LOCNBR,
			DEALNBR,
			ORIGTRANNBR AS DEALTRANNBR,
			VOIDFLG,
			POSTRANCD,
			TRANDT AS VOIDDT,
			POSAPPLIEDCD,
			TRANAMT,
			TRANCREATEDT FORMAT=DATETIME20.,
			PRODUCTCD,
			CUSTNBR,
			DEALSTATUSCD,
			MONETARYCD
		FROM TRANSACTION_TABLE_QF2
		WHERE VOIDFLG IN ('Y','V','R');
%RUNQUIT(&job,&sub5);

/* CREATE 30 DAY PORTION OF POS INFORMATION */
PROC SQL;
	CREATE TABLE WORK.TRANSACTION_TABLE_QF2_UPDATE AS
		SELECT 
		(CASE WHEN T1.PRODUCTCD = "A" OR T1.PRODUCTCD = "C" THEN "PAYDAY"
			  WHEN T1.PRODUCTCD = "I" THEN "INSTALLMENT" 
			  ELSE"INSTALLMENT" END) AS 
	          PRODUCT LENGTH=20 FORMAT=$20.,
		(CASE WHEN T1.PRODUCTCD = "A" THEN "EADV PAYDAY" 
	          WHEN T1.PRODUCTCD = "I" THEN "IPDL"
	          ELSE "UNKNOWN" END)
				  AS PRODUCTDESC  LENGTH=30 FORMAT=$30.,
			'QFUND' AS POS length=20  format=$20.,
			'QFUND2' AS INSTANCE length=20  format=$20.,
			'STOREFRONT'		AS CHANNELCD,
			T2.ST_PVC_CD AS STATE length=2 format=$2.,
			T1.LOCNBR,
			T1.SSN,
			T1.CUSTNBR,
			''		AS OMNINBR,
			DHMS(DATEPART(T1.DEAL_DT),0,0,0) AS DEAL_DT 		FORMAT=DATETIME20.,
			T1.DEAL_DT AS DEAL_DTTM								FORMAT=DATETIME20.,
			T1.DEALNBR,
			LEFT("0") AS TITLE_DEALNBR LENGTH=15 FORMAT=$15.,
			T1.DEALTRANNBR,
			T1.ORIGTRANNBR,
			T1.VOIDFLG LENGTH=2 FORMAT=$2.,
			T10.VOIDDT,
			T1.DEALSTATUSCD LENGTH=15,
			T1.POSTRANCD LENGTH=50 FORMAT=$50.,
   COALESCE(T8.STNDTRANCD,'UNKNOWN') AS STNDTRANCD LENGTH=25 FORMAT=$25.,
			T1.POSAPPLIEDCD LENGTH=50 FORMAT=$50.,
 (CASE WHEN T1.POSTRANCD='PAY' AND T1.POSAPPLIEDCD='IFC' THEN 'INTEREST FEE CHARGED' ELSE
   COALESCE(T7.STNDAPPLIEDCD,'UNKNOWN')END) AS STNDAPPLIEDCD LENGTH=20 FORMAT=$20.,
 (CASE WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD  CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
 	   WHEN T1.POSTRANCD  CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD  CONTAINS 'ECC' AND T1.DEALSTATUSCD NOT IN ('WO','DEF','WOT') THEN 'Y'
	   WHEN T1.POSTRANCD  CONTAINS 'ECC' AND T1.DEALSTATUSCD IN ('WO','DEF','WOT') THEN 'N'
	   WHEN T1.POSTRANCD IN ('ACHP','ACHPP') THEN 'Y'
	   WHEN T1.POSTRANCD IN ('ACHD') THEN 'N'
	   ELSE T8.CI_FLG END) AS CI_FLG,
			T1.MONETARYCD,
			T1.TRANAMT,
			T1.TRANDT,
			T1.TRANCREATEDT FORMAT=DATETIME20.,
			DHMS(DATEPART(T1.TRANCREATEDT),0,0,0) AS BUSINESSDT FORMAT=DATETIME20.,
			DHMS(DATEPART(T1.TRANDT),0,0,0) 	  AS TRANDATE   FORMAT=DATETIME20.,
			%SYSFUNC(DATETIME()) AS UPDATEDT FORMAT=DATETIME20.,
			"" AS NCP_IND LENGTH=1,
			. AS CREATEUSR
		FROM TRANSACTION_TABLE_QF2 T1
			LEFT JOIN EDW.D_LOCATION T2 ON T2.LOC_NBR=T1.LOCNBR
			LEFT JOIN BIOR.L_APPLIEDCODES T7 ON T7.POSAPPLIEDCD=T1.POSAPPLIEDCD
			LEFT JOIN BIOR.L_TRANSACTIONCODES T8 ON (T8.POS='QFUND2' AND T8.POSTRANCD=T1.POSTRANCD)
			LEFT JOIN WORK.VOIDS_QF2 T10 ON (T10.DEALNBR=T1.DEALNBR AND T10.DEALTRANNBR=T1.DEALTRANNBR AND T10.POSAPPLIEDCD=T1.POSAPPLIEDCD AND T10.POSTRANCD=T1.POSTRANCD)
		WHERE T1.TRANCREATEDT > &THIRTYDAYS.;
%RUNQUIT(&job,&sub5);

/* SORT POS INFORMATION */
/* STORE IN SAS DATA FOLDER */
PROC SORT DATA=WORK.TRANSACTION_TABLE_QF2_UPDATE OUT=TRANSACTION_TABLE_QF2_UPDATE NODUPKEY DUPOUT=DUPSDELETE;
BY DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD TRANAMT TITLE_DEALNBR;
%RUNQUIT(&job,&sub5);

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
RUN;

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\QFUND1_QFUND2\QFUND2",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\QFUND1_QFUND2\QFUND2\DIR2\",'G');
RUN;

PROC SQL;
    INSERT INTO SKY.TRAN_DATAMART_QF2 (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM TRANSACTION_TABLE_QF2_UPDATE;
QUIT;

/* STOP TIMER */
DATA _NULL_;
  DUR = DATETIME() - &_TIMER_START;
  PUT 30*'-' / ' TOTAL DURATION:' DUR TIME13.2 / 30*'-';
RUN;


/*UPLOAD QF2*/
%INCLUDE "&TRAN_FILE_PATH.\TRANSACTION_UPLOAD_QF2.SAS";
