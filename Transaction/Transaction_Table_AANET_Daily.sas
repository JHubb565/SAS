/*%INCLUDE "E:SHARED\CADA\SAS Source Code\Development\nrochester\TRANSACTION_DATAMART_DAILY\TESTERINO.SAS";*/

*Libname Statements;
%include "E:\Shared\CADA\SAS Source Code\Development\nrochester\Libname_Statements.sas";
%INCLUDE "E:\SHARED\CADA\SAS SOURCE CODE\DEVELOPMENT\JHUBBARD\TOP SECRET PROGRAM.SAS";

*CUSTOMER JOIN PROGRAM;
%INCLUDE "E:\SHARED\CADA\SAS Source Code\Development\nrochester\TRANSACTION_DATAMART_DAILY\CUSTOMER_SSN_MACRO.SAS";
%SSN(AANET);

%PUT &SYSUSERID;
%LET START=INTNX('DTDAY',DHMS(18628,0,0,0),1,'BEGINNING');
%LET THIRTYDAYS=INTNX('DTDAY',DHMS(%SYSFUNC(TODAY()),0,0,0),-5,'BEGINNING');
%PUT &THIRTYDAYS;
%PUT &START;

DATA _NULL_;
	CALL SYMPUTX('TRAN_LOGPATH',"E:\SHARED\CADA\LOGS\SKYNET V2",'G');
	CALL SYMPUTX('TRAN_FILE_PATH',"E:\SHARED\CADA\SAS SOURCE CODE\PRODUCTION\SKYNET V2\SKYNET REDESIGN\DATAMART REDESIGN\TRANSACTION",'G');
RUN;
/* START TIMER */
%LET _TIMER_START = %SYSFUNC(DATETIME());

DATA WORK.TRN11; /*(RENAME=(EFFECTIVEDATE=TRANDT POSTDATE=TRANCREATEDT));*/
	SET AA_LG.TRN;
TRANDT=DHMS(INPUT(EFFECTIVEDATE,YYMMDD10.),0,0,0);
TRANCREATEDT=DHMS(INPUT(POSTDATE,YYMMDD10.),0,0,0);
WHERE ISPENDING~=1;
RUN;

DATA WORK.TRN1;
	SET WORK.TRN11;
IF DHMS(TODAY()-1,0,0,0)>=TRANCREATEDT >= &THIRTYDAYS.;
RUN;

PROC SORT DATA=WORK.TRN1;
BY TRNID LOANID TRNTYPEID /*TRNTYPENAME*/ TRANDT TRANCREATEDT;
RUN;

PROC TRANSPOSE DATA=WORK.TRN1 OUT=WORK.TRN2;
VAR PRINCIPAL INTEREST FEE;
BY TRNID LOANID TRNTYPEID /*TRNTYPENAME*/ TRANDT TRANCREATEDT;
RUN;

DATA WORK.TRN (DROP=APPLIEDCD);
SET WORK.TRN2 (RENAME=(_NAME_=APPLIEDCD COL1=TRANAMT) DROP=_LABEL_);
WHERE TRANAMT NOT IN (0,.);
POSAPPLIEDCD=UPCASE(APPLIEDCD);
RUN;

PROC SQL;
	CREATE TABLE WORK.LOAN AS 
		SELECT A.LOANID,
			   A.LOANTYPEID,
			   A.PYMTTYPEID,
	 CASE WHEN A.ORIGINATIONDATE = . THEN DHMS(INPUT(A.FUNDINGDATE,YYMMDD10.),0,0,0)
	      ELSE A.ORIGINATIONDATE END AS DEAL_DT FORMAT=DATETIME20.,
			   B.LOANSTATUSNAME,
			   C.CUSTACCTNBR,
			   C.CUSTIDENTITYID,
			   A.COMPANYID AS LOCNBR,
			   D.LICENSEDSTATEPROVINCECODE AS STATE
		FROM AA_LG.LOAN A 
			LEFT JOIN AA_LG.LOANSTATUS B ON (B.LOANSTATUSID=A.LOANSTATUSID)
			LEFT JOIN AA_LG.ACCT C ON (C.ACCTID=A.ACCTID)
			LEFT JOIN AA_BTAG.COMPANY D ON (A.COMPANYID=D.COMPANYID);
QUIT;

PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_AANET_FIRST1 AS	
		SELECT 
			E.LOCNBR,
			A.LOANID AS DEALNBR1,
			A.TRNID AS DEALTRANNBR1,
 (CASE WHEN A.TRNTYPEID IN (7) THEN 'R'
	   WHEN A.TRNTYPEID IN (14,44) THEN 'V'
	   ELSE 'N' END) AS VOIDFLG,
	 UPCASE(B.TRNTYPENAME) AS POSTRANCD,
	   		A.TRANDT AS TRANDT FORMAT=DATETIME20.,
			A.POSAPPLIEDCD,
			A.TRANAMT,
	   		A.TRANCREATEDT AS TRANCREATEDT FORMAT=DATETIME20.,
			E.STATE,
			E.DEAL_DT,
			E.CUSTACCTNBR AS CUSTNBR,
			E.CUSTIDENTITYID,
 (CASE WHEN E.LOANTYPEID = 1 THEN "PD"
 	   WHEN E.LOANTYPEID = 2 THEN "INS"
	   WHEN E.LOANTYPEID = 3 THEN "LOC"
	   ELSE "UNK" END) AS PRODUCTCD,
  	 UPCASE(E.LOANSTATUSNAME) AS DEALSTATUSCD,
 (CASE WHEN E.PYMTTYPEID = 1 THEN "ACH"
 	   WHEN E.PYMTTYPEID = 2 THEN "DEBIT CARD"
	   WHEN E.PYMTTYPEID = 3 THEN "CHECK"
	   WHEN E.PYMTTYPEID = 4 THEN "RCC"
	   ELSE "UNK" END) AS MONETARYCD LENGTH=15
		FROM WORK.TRN A 
			LEFT JOIN AA_LG.TRNTYPE B ON (B.TRNTYPEID=A.TRNTYPEID)
	  		INNER JOIN WORK.LOAN E ON (E.LOANID=A.LOANID)
	    WHERE A.TRANCREATEDT >= &THIRTYDAYS.;
RUN;

DATA TRANSACTION_TABLE_AANET_FIRST (DROP=DEALNBR1 DEALTRANNBR1 /*ORIGTRANNBR1 CUSTNBR1*/);
	SET TRANSACTION_TABLE_AANET_FIRST1;
     IF PUT(STRIP(DEALNBR1),15.)~='.'     		THEN DEALNBR=PUT(STRIP(DEALNBR1),15.);
	 ELSE IF PUT(STRIP(DEALNBR1),15.)='.'      	THEN DEALNBR='';
	 IF PUT(STRIP(DEALTRANNBR1),15.)~='.' 		THEN DEALTRANNBR=PUT(STRIP(DEALTRANNBR1),15.);
	 ELSE IF PUT(DEALTRANNBR1,15.)='.'         	THEN DEALTRANNBR='';
RUN;

PROC SQL;
	CREATE TABLE VOIDS AS 
		SELECT 
			LOCNBR,
			DEALNBR,
			DEALTRANNBR,
			VOIDFLG,
			POSTRANCD,
			TRANDT AS VOIDDT,
			POSAPPLIEDCD,
			TRANAMT,
			TRANCREATEDT FORMAT=DATETIME20.,
			PRODUCTCD,
			CUSTNBR,
			DEALSTATUSCD,
			MONETARYCD
		FROM TRANSACTION_TABLE_AANET_FIRST
		WHERE VOIDFLG IN ('V','R');
QUIT;

PROC SQL;
	CREATE TABLE TRANSACTION_TABLE_AANET_UPDATE AS
		SELECT 
			(CASE WHEN T1.PRODUCTCD = "PD" THEN "PAYDAY" 
				  WHEN T1.PRODUCTCD = "INS" THEN "INSTALLMENT" 
				  WHEN T1.PRODUCTCD = "LOC" THEN "LINEOFCREDIT"
				  ELSE "UNKNOWN" END) 
            	  AS PRODUCT LENGTH=20 FORMAT=$20.,
			(CASE WHEN T1.PRODUCTCD = "PD" THEN  "AANET PAYDAY" 
				  WHEN T1.PRODUCTCD = "INS" THEN "AANET INSTALLMENT"
				  WHEN T1.PRODUCTCD = "LOC" THEN "AANET LINEOFCREDIT"
                  ELSE "UNKNOWN" END)  AS PRODUCTDESC  LENGTH=30 FORMAT=$30.,
			'ONLINE' AS POS length=20  format=$20.,
			'AANET'  AS INSTANCE length=20  format=$20.,
			'ONLINE'		AS CHANNELCD,
			T1.STATE AS STATE length=2 format=$2.,
			T1.LOCNBR,
			T11.SSN,
			T1.CUSTNBR LENGTH=15,
			''		AS OMNINBR,
			DHMS(DATEPART(T1.DEAL_DT),0,0,0) AS DEAL_DT 		FORMAT=DATETIME20.,
			T1.DEAL_DT AS DEAL_DTTM								FORMAT=DATETIME20.,
			T1.DEALNBR,
			LEFT("0") AS TITLE_DEALNBR LENGTH=15 FORMAT=$15.,
			T1.DEALTRANNBR,
			"" AS ORIGTRANNBR LENGTH=15,
			T1.VOIDFLG LENGTH=2 FORMAT=$2.,
			. AS VOIDDT FORMAT=DATETIME20.,
			T1.DEALSTATUSCD LENGTH=15,
			T1.POSTRANCD LENGTH=50 FORMAT=$50.,
   COALESCE(T8.STNDTRANCD,'UNKNOWN') AS STNDTRANCD LENGTH=25 FORMAT=$25.,
			T1.POSAPPLIEDCD LENGTH=50 FORMAT=$50.,
 (CASE WHEN T1.POSTRANCD='PAY' AND T1.POSAPPLIEDCD='IFC' THEN 'INTEREST FEE CHARGED' ELSE
   COALESCE(T7.STNDAPPLIEDCD,'UNKNOWN')END) AS STNDAPPLIEDCD LENGTH=20 FORMAT=$20.,
 (CASE WHEN STRIP(T1.POSTRANCD) IN ('ADJUSTMENT') THEN 'N'
	   WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD NOT IN ('Write Off','Void','Rescinded','Fraud Loan','Collections','Default - PIF') THEN 'Y'
 	   WHEN T1.MONETARYCD CONTAINS 'ACH' AND T1.DEALSTATUSCD IN ('Write Off','Void','Rescinded','Fraud Loan','Collections','Default - PIF') THEN 'N'
	   WHEN T1.POSTRANCD CONTAINS  'ACH' AND T1.DEALSTATUSCD NOT IN ('Write Off','Void','Rescinded','Fraud Loan','Collections','Default - PIF') THEN 'Y'
 	   WHEN T1.POSTRANCD CONTAINS  'ACH' AND T1.DEALSTATUSCD IN ('Write Off','Void','Rescinded','Fraud Loan','Collections','Default - PIF') THEN 'N'
	   WHEN T1.POSTRANCD CONTAINS  'ECC' AND T1.DEALSTATUSCD NOT IN ('Write Off','Void','Rescinded','Fraud Loan','Collections','Default - PIF') THEN 'Y'
	   WHEN T1.POSTRANCD CONTAINS  'ECC' AND T1.DEALSTATUSCD IN ('Write Off','Void','Rescinded','Fraud Loan','Collections','Default - PIF') THEN 'N'
	   WHEN T1.POSTRANCD IN ('ACHP','ACHPP') THEN 'Y'
	   WHEN T1.POSTRANCD IN ('ACHD') THEN 'N'
	   ELSE T8.CI_FLG END) AS CI_FLG,
			T1.MONETARYCD,
			T1.TRANAMT,
			T1.TRANDT,
			T1.TRANCREATEDT,
			DHMS(DATEPART(T1.TRANCREATEDT),0,0,0) AS BUSINESSDT FORMAT=DATETIME20.,
			DHMS(DATEPART(T1.TRANDT),0,0,0) 	  AS TRANDATE   FORMAT=DATETIME20.,
			%SYSFUNC(DATETIME()) AS UPDATEDT FORMAT=DATETIME20.,
			"" AS NCP_IND LENGTH=1,
			. AS CREATEUSR
		FROM TRANSACTION_TABLE_AANET_FIRST T1
			LEFT JOIN BIOR.L_APPLIEDCODES T7 ON T7.POSAPPLIEDCD=T1.POSAPPLIEDCD
			LEFT JOIN BIOR.L_TRANSACTIONCODES T8 ON (T8.POS='AANET' AND T8.POSTRANCD=T1.POSTRANCD)
			LEFT JOIN (&SQL_TEXT.) T11 ON T1.CUSTIDENTITYID=T11.CUSTNBR
		WHERE T1.TRANCREATEDT >= &THIRTYDAYS.;
QUIT;

PROC SORT DATA=WORK.TRANSACTION_TABLE_AANET_UPDATE OUT=TRANSACTION_TABLE_AANET NODUPKEY DUPOUT=DUPSDELETE;
BY DEALNBR DEALTRANNBR POSTRANCD POSAPPLIEDCD TRANAMT TRANDT;
RUN;

PROC FORMAT;
    PICTURE CHECKTHEDAY OTHER=%0Y.%0M.%0D (DATATYPE=DATE);
    PICTURE CHECKTHETIME OTHER=%0H.%0M.%0S (DATATYPE=TIME);
RUN;

%LET DATE=%SYSFUNC(INTNX(DAY,%SYSFUNC(TODAY()),0,END),DATE7.);
%PUT &DATE;

/* CREATE MACROS FOR BULKLOAD PATH AND TIMESTAMP */
DATA _NULL_;
	CALL SYMPUTX('TIMESTAMP',TRANWRD(PUT(DATETIME(),DATETIME20.),':','.'),'G');
    CALL SYMPUTX('PATH',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\ONLINE",'G');
    CALL SYMPUTX('PATHTWO',"E:\SHARED\CADA\SAS DATA\DATAMART\SKYNET REDESIGN BULKLOAD LOGS\TRANSACTION\ONLINE\DIR2\",'G');
RUN;

PROC SQL;
    INSERT INTO SKY.TRAN_DATAMART_ONLINE (BULKLOAD=YES BL_LOG="&PATH.\BL_&DATE..LOG" BL_DELETE_DATAFILE=YES 
                                                   BL_DEFAULT_DIR="&PATHTWO.")
    SELECT 
        *
    FROM TRANSACTION_TABLE_AANET;
QUIT;

/*UPLOAD ONLINE*/
%INCLUDE "&TRAN_FILE_PATH.\TRANSACTION_UPLOAD_AANET.SAS";


/* STOP TIMER */
DATA _NULL_;
  DUR = DATETIME() - &_TIMER_START;
  PUT 30*'-' / ' TOTAL DURATION:' DUR TIME13.2 / 30*'-';
RUN;
